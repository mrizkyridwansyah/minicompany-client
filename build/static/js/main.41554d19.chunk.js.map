{"version":3,"sources":["RootContext.js","components/PrivateRoute.js","components/Navigation/TopBar.js","components/Navigation/Navbar.js","components/Home.js","components/Login.js","components/Application/List.js","components/Application/Index.js","components/Application/Forms.js","components/Application/ListMenu.js","components/Application/Menu.js","components/Role/List.js","components/Role/Index.js","components/Role/Forms.js","components/Role/FormAccess.js","components/User/List.js","components/User/Index.js","components/User/Forms.js","components/User/Profile.js","components/Job/List.js","components/Job/Index.js","components/Job/Forms.js","components/JobApplication/List.js","components/JobApplication/DetailJob.js","components/JobApplication/FormApplication.js","components/QnA/List.js","components/QnA/Index.js","components/QnA/FormsOption.js","components/QnA/Forms.js","components/Candidate/List.js","components/Candidate/Index.js","components/Candidate/OnlineTest.js","components/Candidate/Forms.js","components/Division/List.js","components/Division/Index.js","components/Division/Forms.js","components/Department/List.js","components/Department/Index.js","components/Department/Forms.js","components/Employee/Modal.js","components/Employee/List.js","components/Employee/Index.js","components/Employee/Forms.js","components/Contract/List.js","components/Contract/Index.js","components/Contract/Forms.js","components/Salary/List.js","components/Salary/Index.js","components/Salary/Forms.js","components/Activity/List.js","components/Activity/Index.js","components/Approval/History.js","components/Activity/Forms.js","components/Approval/List.js","components/Approval/Index.js","components/Approval/Forms.js","components/SetupApproval/List.js","components/SetupApproval/Index.js","components/SetupApproval/Forms.js","components/App.js","index.js"],"names":["RootContext","React","createContext","useRoot","useContext","login","username","password","fetchQuery","process","then","data","status","Error","body","message","sessionStorage","setItem","token","id","name","email","role","employeeId","logout","removeItem","uri","query","useToken","method","options","headers","JSON","stringify","getItem","fetch","res","json","RootProvider","children","value","Provider","PrivateRoute","Component","component","rest","render","props","topbar","className","style","overflowY","sidebar","minHeight","content","position","href","to","TopBar","useState","error","setError","currentUserName","setCurrentUserName","currentUserRole","setCurrentUserRole","history","useHistory","a","push","alert","useEffect","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","onClick","Navigation","Nav","Link","aria-hidden","Home","Login","usernameRef","useRef","passwordRef","loading","setLoading","e","preventDefault","current","Card","maxWidth","boxShadow","Body","Alert","variant","Form","onSubmit","Group","Label","Control","ref","required","autoFocus","Button","disabled","List","app","handleDelete","ListGroup","Item","Badge","float","cursor","data-id","target","dataset","Index","URI_API","applications","setApplications","hasChanged","setHasChanged","keywordRef","getApplications","search","apps","handleSearch","window","confirm","Row","Col","md","placeholder","onChange","length","width","map","Forms","useParams","currentName","setCurrentName","currentDesc","setCurrentDesc","nameRef","descRef","console","log","desc","charAt","toUpperCase","slice","defaultValue","as","rows","ListMenu","menu","menus","handleEdit","open","setOpen","childMenus","filter","x","parent","prevOpen","Collapse","in","child","Menu","setMenus","parentMenus","setParentMenus","editMode","setEditMode","currentApplication","setCurrentApplication","currentIdMenu","setCurrentIdMenu","currentEntry","setCurrentEntry","currentLogo","setCurrentLogo","currentParent","setCurrentParent","entryRef","logoRef","parentRef","idMenu","entryPoint","logo","getSingleMenu","getMenu","getParentMenu","application","location","reload","borderLeft","roles","setRoles","getRoles","FormAccess","access","setStateAccess","accessRole","setChecked","setCheckedRole","document","querySelectorAll","forEach","checked","getRolesApplication","jml","arrAccess","i","isChecked","rowSpan","colSpan","whiteSpace","marginLeft","data-role","index","Check","data-app","defaultChecked","user","from","handleUpdateStatus","handleChoose","pathname","split","activeFlag","data-status","users","setUsers","statusRef","roleRef","getUsers","active","action","currentEmail","setCurrentEmail","currentUsername","setCurrentUsername","currentRole","setCurrentRole","emailRef","confirmPasswordRef","confirmPassword","hidden","Profile","getUser","job","handleClose","handlePublish","Title","title","closedFlag","publishedFlag","Subtitle","createAt","wordBreak","source","Text","requirement","allowDangerousHtml","jobs","setJobs","getJobs","statusSearch","handleUpdate","currentTitle","setCurrentTitle","currentFullTime","setCurrentFullTime","currentPartTime","setCurrentPartTime","currentRequirement","setCurrentRequirement","currentMinRate","setCurrentMinRate","currentMaxRate","setCurrentMaxRate","titleRef","fullRef","minRef","maxRef","requirementRef","minRate","maxRate","typeJob","state","inline","Input","htmlFor","modules","toolbar","prevUrl","handleStatus","candidate","applicationId","DetailJob","currentJob","FormApplication","idjob","setCurrentJob","jobApplications","setJobApplications","getData","aria-selected","question","data-idjob","jobId","option","questions","setQuestions","typeRef","getQuestions","FormsOption","handleDeleteOption","data-index","row","setOptions","currentSingle","setCurrentSingle","currentMultiple","setCurrentMultiple","currentValue","setCurrentValue","singleRef","valueRef","Async","list","remove","err","prevOptions","val","ind","weight","typeQuestion","newOptions","indexOf","querySelector","childNodes","isCorrect","createBy","updateBy","min","max","newObject","candidates","setCandidates","getCandidates","OnlineTest","detailTest","no","answer","currentCandidate","setCurrentCandidate","setDetailTest","setPrevUrl","getCandidate","appId","onlineTestDetail","getOnlineResultDetail","substring","identityNumber","nationality","placeOfBirth","dateOfBirth","identityAddress","identitySubDistrict","identityDistricts","identityProvince","Image","src","alt","cv","download","detail","reduce","acc","division","divisions","setDivisions","getDivision","department","departments","setDepartments","getDepartment","ModalResign","show","dateRef","Modal","size","onHide","Header","closeButton","resignDate","employee","setShow","typeModal","employees","setEmployees","divisionRef","departmentRef","getEmployees","currentEmployee","setCurrentEmployee","currentDivision","setCurrentDivision","currentDepartment","setCurrentDepartment","currentStatus","setCurrentStatus","currentUser","setCurrentUser","citizenRef","foreignRef","identityNumberRef","placeOfBirthRef","dateOfBirthRef","addressRef","subDistrictRef","districtRef","provinceRef","phoneRef","accountBankRef","joinDateRef","jobTitleRef","userRef","usersForEmployee","getSetData","usernameEmployee","getCurrentEmployee","accountBank","jobTitle","joinDate","identityDistrict","phoneNumber","result","_id","Object","keys","column","contract","statusEmployee","dateFrom","dateUntil","idemployee","contracts","setContracts","employeeContracts","getContracts","currentDateFrom","setCurrentDateFrom","currentDateUntil","setCurrentDateUntil","fromRef","untilRef","employeeContract","salary","amount","toLocaleString","salaries","setSalaries","employeeSalaries","currentAmount","setCurrentAmount","amountRef","employeeSalary","activity","activities","setActivities","getActivities","employeeActivities","History","activityId","approvals","setApprovals","approval","approvalDate","getApprovals","approvedDate","level","notes","approvedFlag","files","setFiles","approvalNeeded","setApprovalNeeded","currentType","setCurrentType","currentActivity","setCurrentActivity","fileRef","notesRef","employeeActivity","reimburse","getCurrentActivity","newActivity","file","accept","fileReader","FileReader","selectedFile","onload","readAsDataURL","replace","nativeEvent","submitter","userId","reference","levels","setLevels","references","setReferences","getReference","approvalReferences","getLevels","currentLevel","setCurrentLevel","levelRef","approvalReference","Footer","App","exact","path","Topbar","SideBar","Application","FormMenu","Role","FormRole","User","FormUser","Job","FormJob","QnA","FormQnA","Candidate","FormCandidate","FormJobApplication","Division","FormDivision","Department","FormDepartment","Employee","FormEmployee","Contract","FormContract","Salary","FormSalary","Activity","FormActivity","Approval","FormApproval","SetupApproval","FormSetupApproval","ReactDOM","StrictMode","getElementById"],"mappings":"yKAEMA,EAAcC,IAAMC,gBAEnB,SAASC,IACZ,OAAOC,qBAAWJ,GAGtB,SAASK,EAAMC,EAAUC,GAOrB,OAAOC,EANE,UAAMC,kDAAN,eACK,CACVH,SAAUA,EACVC,SAAUA,IAGgB,EAAO,QAAQG,MAAK,SAAAC,GAC9C,GAAmB,MAAhBA,EAAKC,OAAgB,MAAM,IAAIC,MAAMF,EAAKG,KAAKC,SAElDC,eAAeC,QAAQ,QAAQN,EAAKG,KAAKI,OACzCF,eAAeC,QAAQ,KAAKN,EAAKG,KAAKH,KAAKQ,IAC3CH,eAAeC,QAAQ,WAAWN,EAAKG,KAAKH,KAAKL,UACjDU,eAAeC,QAAQ,OAAON,EAAKG,KAAKH,KAAKS,MAC7CJ,eAAeC,QAAQ,QAAQN,EAAKG,KAAKH,KAAKU,OAC9CL,eAAeC,QAAQ,OAAON,EAAKG,KAAKH,KAAKW,MAC7CN,eAAeC,QAAQ,aAAaN,EAAKG,KAAKH,KAAKY,eAI3D,SAASC,IAEL,OAAOhB,EADE,UAAMC,kDAAN,gBACc,IAAK,EAAM,QAAQC,MAAK,SAAAC,GAC3C,GAAmB,MAAhBA,EAAKC,OAAgB,MAAM,IAAIC,MAAMF,EAAKG,KAAKC,SAElDC,eAAeS,WAAW,SAC1BT,eAAeS,WAAW,MAC1BT,eAAeS,WAAW,YAC1BT,eAAeS,WAAW,QAC1BT,eAAeS,WAAW,SAC1BT,eAAeS,WAAW,QAC1BT,eAAeS,WAAW,iBAKlC,SAASjB,EAAWkB,EAAKC,EAAOC,EAAUC,GACtC,IAAIC,EAAU,CACVD,OAAQA,EACRE,QAAS,CAAE,eAAiB,oBAC5BjB,KAAMkB,KAAKC,UAAUN,IAKzB,OAFGC,IAAUE,EAAQC,QAAU,CAAE,eAAiB,mBAAoB,+BAA4Bf,eAAekB,QAAQ,YAElHC,MAAMT,EAAKI,GAASpB,MAAK,SAAA0B,GAAG,OAAIA,EAAIC,OAAO3B,MAAK,SAAAC,GAAI,MAAK,CAAEC,OAAQwB,EAAIxB,OAAQE,KAAMH,SAGzF,SAAS2B,EAAT,GAAmC,IAAZC,EAAW,EAAXA,SACpBC,EAAQ,CACVhC,aACAH,QACAmB,UAGJ,OACI,cAACxB,EAAYyC,SAAb,CAAsBD,MAAOA,EAA7B,SACKD,I,6BC9DE,SAASG,EAAT,GAAyD,IAAtBC,EAAqB,EAAhCC,UAAyBC,EAAO,6BACnE,OACI,cAAC,IAAD,2BACIA,GADJ,IAEIC,OAAQ,SAAAC,GACA,OAA2C,OAApC/B,eAAekB,QAAQ,SAC9B,qCACI,cAACS,EAAUK,OAAX,eAAsBD,IACtB,qBAAKE,UAAU,uBAAuBC,MAAO,CAACC,UAAW,QAAzD,SACI,sBAAKF,UAAU,WAAf,UACI,cAACN,EAAUS,QAAX,eAAuBL,IACvB,sBAAME,UAAU,qCAAhB,SACI,qBAAKA,UAAU,MAAMC,MAAO,CAACG,UAAW,QAAxC,SACI,qBAAKJ,UAAU,YAAf,SACI,qBAAKA,UAAU,OAAf,SACI,cAACN,EAAUW,QAAX,eAAuBP,iBAO/C,wBAAQE,UAAU,yCAAyCC,MAAO,CAACK,SAAU,SAA7E,SACI,qBAAKN,UAAU,QAAf,SACA,oDAAsB,mBAAGO,KAAK,4BAAR,uBAAtB,QAA4E,mBAAGA,KAAK,6CAAR,iCAA5E,cAIN,cAAC,IAAD,CAAUC,GAAG,e,kCC3BpB,SAASC,IAAU,IAAD,EACHC,mBAAS,IADN,mBACtBC,EADsB,KACfC,EADe,OAEiBF,mBAAS,IAF1B,mBAEtBG,EAFsB,KAELC,EAFK,OAGiBJ,mBAAS,IAH1B,mBAGtBK,EAHsB,KAGLC,EAHK,KAIrBzC,EAAWrB,IAAXqB,OACF0C,EAAUC,cALa,4CAO7B,sBAAAC,EAAA,sEAEQP,EAAS,IAFjB,SAGcrC,IAHd,OAIQ0C,EAAQG,KAAK,UAJrB,gDAMQR,EAAS,KAAI9C,SACbuD,MAAMV,GAPd,0DAP6B,sBAuB7B,OALAW,qBAAU,WACNR,EAAmB/C,eAAekB,QAAQ,SAC1C+B,EAAmBjD,eAAekB,QAAQ,WAC3C,IAGC,mCACI,sBAAKe,UAAU,kEAAf,UACI,mBAAGA,UAAU,2CAA2CO,KAAK,IAA7D,qBACA,wBAAQP,UAAU,uDAAuDuB,KAAK,SAASC,cAAY,WAAWC,cAAY,eAAeC,gBAAc,cAAcC,gBAAc,QAAQC,aAAW,oBAAtM,SACI,sBAAM5B,UAAU,0BAEpB,oBAAIA,UAAU,kBAAd,SACI,qBAAIA,UAAU,gCAAd,UACI,oBAAGA,UAAU,2BAA2BO,KAAK,IAAIlC,KAAK,SAASmD,cAAY,WAAWK,gBAAc,OAAOF,gBAAc,QAAzH,cAAoId,EAApI,MAA0JE,KAC1J,sBAAKf,UAAU,gBAAgB8B,kBAAgB,iBAAiB7B,MAAO,CAACK,SAAU,YAAlF,UACI,mBAAGN,UAAU,gBAAgBO,KAAK,WAAlC,qBACA,qBAAKP,UAAU,qBACf,mBAAGA,UAAU,gBAAgB+B,QApCxB,2CAoCL,kC,oBCpCb,SAASC,IACpB,OAsII,aArIA,CAqIA,qBACI,qBAAKhC,UAAU,yDAAyD9B,GAAG,cAAc+B,MAAO,CAACC,UAAY,QAA7G,SACI,sBAAKF,UAAU,iBAAf,UACI,oBAAIA,UAAU,kBAAd,SACI,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,8BAA8BmC,cAAY,SAD3D,QAC6E,sBAAMnC,UAAU,cAAhB,8BAKrF,oBAAIA,UAAU,8FAAd,SACI,+CAEJ,qBAAIA,UAAU,kBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,2BAA2BmC,cAAY,SADxD,QAC0E,sBAAMnC,UAAU,cAAhB,6BAG9E,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,4BAA4BmC,cAAY,SADzD,QAC2E,sBAAMnC,UAAU,cAAhB,iCAKnF,oBAAIA,UAAU,8FAAd,SACI,+CAEJ,qBAAIA,UAAU,kBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,yBAAyBmC,cAAY,SADtD,QACwE,sBAAMnC,UAAU,cAAhB,0BAG5E,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,kCAAkCmC,cAAY,SAD/D,QACiF,sBAAMnC,UAAU,cAAhB,0BAGrF,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,2BAA2BmC,cAAY,SADxD,QAC0E,sBAAMnC,UAAU,cAAhB,6BAG9E,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,yBAAyBmC,cAAY,SADtD,QACwE,sBAAMnC,UAAU,cAAhB,wBAG5E,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,yBAAyBmC,cAAY,SADtD,QACwE,sBAAMnC,UAAU,cAAhB,yBAG5E,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,wBAAwBmC,cAAY,SADrD,QACuE,sBAAMnC,UAAU,cAAhB,gCAK/E,oBAAIA,UAAU,8FAAd,SACI,+CAEJ,qBAAIA,UAAU,kBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,yBAAyBmC,cAAY,SADtD,QACwE,sBAAMnC,UAAU,cAAhB,4BAG5E,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,4BAA4BmC,cAAY,SADzD,QAC2E,sBAAMnC,UAAU,cAAhB,6BAG/E,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,yBAAyBmC,cAAY,SADtD,QACwE,sBAAMnC,UAAU,cAAhB,wBAG5E,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,yBAAyBmC,cAAY,SADtD,QACwE,sBAAMnC,UAAU,cAAhB,yBAG5E,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,wBAAwBmC,cAAY,SADrD,QACuE,sBAAMnC,UAAU,cAAhB,gCAK/E,oBAAIA,UAAU,8FAAd,SACI,gDAEJ,qBAAIA,UAAU,kBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,yBAAyBmC,cAAY,SADtD,QACwE,sBAAMnC,UAAU,cAAhB,0BAG5E,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,yBAAyBmC,cAAY,SADtD,QACwE,sBAAMnC,UAAU,cAAhB,yBAG5E,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,iCAAiCmC,cAAY,SAD9D,QACgF,sBAAMnC,UAAU,cAAhB,0BAGpF,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,8BAA8BmC,cAAY,SAD3D,QAC6E,sBAAMnC,UAAU,cAAhB,4BAKrF,oBAAIA,UAAU,8FAAd,SACI,gDAEJ,qBAAIA,UAAU,kBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,wBAAwBmC,cAAY,SADrD,QACuE,sBAAMnC,UAAU,cAAhB,gCAG3E,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,WACI,mBAAGlC,UAAU,4BAA4BmC,cAAY,SADzD,QAC2E,sBAAMnC,UAAU,cAAhB,4BAKnF,oBAAIA,UAAU,8FAAd,SACI,sDAEJ,qBAAIA,UAAU,kBAAd,UAMI,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,CAAU3B,KAAK,QAAf,UACI,mBAAGP,UAAU,6BAA6BmC,cAAY,SAD1D,QAC4E,sBAAMnC,UAAU,cAAhB,0BAGhF,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,CAAU3B,KAAK,QAAf,UACI,mBAAGP,UAAU,4BAA4BmC,cAAY,SADzD,QAC2E,sBAAMnC,UAAU,cAAhB,4BAG/E,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,CAAU3B,KAAK,QAAf,UACI,mBAAGP,UAAU,wBAAwBmC,cAAY,SADrD,QACuE,sBAAMnC,UAAU,cAAhB,4BAK/E,oBAAIA,UAAU,8FAAd,SACI,2DAEJ,qBAAIA,UAAU,kBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,CAAU3B,KAAK,QAAf,UACI,mBAAGP,UAAU,wBAAwBmC,cAAY,SADrD,QACuE,sBAAMnC,UAAU,cAAhB,uBAG3E,oBAAIA,UAAU,WAAd,SACI,eAACiC,EAAA,EAAIC,KAAL,CAAU3B,KAAK,QAAf,UACI,mBAAGP,UAAU,yBAAyBmC,cAAY,SADtD,QACwE,sBAAMnC,UAAU,cAAhB,iCCrTrF,SAASoC,IACpB,OACI,6B,+CCAO,SAASC,IACpB,IAAMC,EAAcC,mBACdC,EAAcD,mBACZnF,EAAUF,IAAVE,MAHoB,EAIFsD,mBAAS,IAJP,mBAIrBC,EAJqB,KAIdC,EAJc,OAKEF,oBAAS,GALX,mBAKrB+B,EALqB,KAKZC,EALY,KAMtBzB,EAAUC,cANY,4CAY5B,WAA4ByB,GAA5B,SAAAxB,EAAA,6DACIwB,EAAEC,iBADN,SAIQhC,EAAS,IACT8B,GAAW,GALnB,SAMctF,EAAMkF,EAAYO,QAAQtD,MAAOiD,EAAYK,QAAQtD,OANnE,OAOQ0B,EAAQG,KAAK,KAPrB,gDASQR,EAAS,KAAI9C,SACb4E,GAAW,GAVnB,QAYIA,GAAW,GAZf,0DAZ4B,sBA2B5B,OAnBG3E,eAAekB,QAAQ,UACtBgC,EAAQG,KAAK,KAmBb,mCACI,qBAAKpB,UAAU,wDAAf,SACI,cAAC8C,EAAA,EAAD,CAAM9C,UAAU,aAAaC,MAAO,CAAE8C,SAAU,QAASC,UAAW,uBAApE,SACI,eAACF,EAAA,EAAKG,KAAN,WACI,oBAAIjD,UAAU,mBAAd,oBACEW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,eAACyC,EAAA,EAAD,CAAMC,SAlCE,4CAkCR,UACI,eAACD,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKnB,EAAaoB,UAAQ,EAACC,WAAW,IAChE,cAACP,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,WAAWkC,IAAKjB,EAAakB,UAAQ,OAE5D,cAACE,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,QAAQ6D,SAAUpB,EAAlD,uBAEJ,qBAAKzC,UAAU,yBAAf,SACI,cAAC,IAAD,CAAMQ,GAAG,mBAAT,0C,+BC7Cb,SAASsD,EAAKhE,GAAQ,IAE7BiE,EAEAjE,EAFAiE,IACAC,EACAlE,EADAkE,aAEE/C,EAAUC,cAYhB,OACI,mCACI,cAAC+C,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAiBH,EAAI5F,KACjB,cAACgG,EAAA,EAAD,CAAOhB,QAAQ,SAASnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASP,EAAI7F,GAAI6D,QAASiC,EAA/G,oBACA,cAACG,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASP,EAAI7F,GAAI6D,QAfvH,SAAoBY,GAChB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,4BAAkClD,KAatB,kBACA,cAACiG,EAAA,EAAD,CAAOhB,QAAQ,UAAUlD,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASP,EAAI7F,GAAI6D,QAXtG,SAAoBY,GAChB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,gBAAsBlD,KASV,yBCrBL,SAASuG,IACpB,IAAMC,EAAO,UAAMlH,kDAAN,QADe,EAEYkD,mBAAS,IAFrB,mBAErBiE,EAFqB,KAEPC,EAFO,OAGQlE,oBAAS,GAHjB,mBAGrBmE,EAHqB,KAGTC,EAHS,OAIEpE,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKFhC,mBAAS,IALP,mBAKrBC,EALqB,KAKdC,EALc,OAMG1D,IAAvBK,EANoB,EAMpBA,WAAYgB,EANQ,EAMRA,OACdwG,EAAaxC,mBACbtB,EAAUC,cARY,SAUb8D,IAVa,2EAU5B,0CAAA7D,EAAA,sDAA+B8D,EAA/B,+BAAwC,GACpCrE,EAAS,IACT8B,GAAW,GACLhE,EAAQ,CACVA,MAAK,wCACMuG,EADN,uCAKT1H,EAAWC,sDAAuCkB,GAAO,EAAM,QAAQjB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACrD,MAAhBzD,EAAKC,OADgE,mBAEjD,MAAhBD,EAAKC,OAF4D,gCAG1DY,IAH0D,OAIhE0C,EAAQG,KAAK,UAJmD,OAMxER,EAASlD,EAAKG,KAAKC,SANqD,uBAQpE8G,EAAgBlH,EAAKG,KAAKH,KAAKwH,MAC/BtE,EAAS,IAT2D,4CAA5E,uDAYA8B,GAAW,GArBf,4CAV4B,+BAkCbyC,EAlCa,8EAkC5B,WAA4BxC,GAA5B,SAAAxB,EAAA,sDACIwB,EAAEC,iBAEFoC,EAHJ,oBAE8BD,EAAWlC,QAAQtD,MAFjD,mDAlC4B,+BAwCbyE,EAxCa,8EAwC5B,WAA4BrB,GAA5B,eAAAxB,EAAA,sDACIwB,EAAEC,iBACCwC,OAAOC,QAAQ,4CACd3C,GAAW,GACX9B,EAAS,IACH1C,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5BX,EAAW,GAAD,OAAImH,EAAJ,YAAexG,GAAM,IAAI,EAAM,UAAUT,KAAnD,uCAAwD,WAAMC,GAAN,SAAAyD,EAAA,yDACjC,MAAhBzD,EAAKC,OAD4C,mBAE7B,MAAhBD,EAAKC,OAFwC,gCAGtCY,IAHsC,OAI5C0C,EAAQG,KAAK,UAJ+B,OAMhDR,EAASlD,EAAKG,KAAKC,SAN6B,uBAQhDgH,GAAeD,GACfjE,EAAS,IATuC,4CAAxD,uDAYA8B,GAAW,IAlBnB,4CAxC4B,sBAkE5B,OAJApB,qBAAU,WACN0D,MACD,CAACH,IAGA,qCACI,6CACA,sBAAK7E,UAAU,OAAf,UACKW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACnC,cAAC,IAAD,CAAMH,GAAG,mBAAmBR,UAAU,kBAAtC,iCACI,cAACoD,EAAA,EAAD,CAAMpD,UAAU,OAAhB,SACI,eAACoD,EAAA,EAAKkC,IAAN,CAAUjC,SAAU8B,EAApB,UACI,cAACI,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACF,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsB,EAAYU,YAAY,iBAAiBC,SAAUP,EAActB,SAAUpB,QAGlH,cAAC8C,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACM,EAAA,EAAD,CAAQT,QAAQ,UAAU5B,KAAK,SAASsC,SAAUpB,EAAlD,6BAMZkC,EAAagB,OAAS,EACtB,cAAC7C,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAS5F,UAAU,OAAzC,SAEQ2E,EAAakB,KAAI,SAAA9B,GACb,OAAO,cAACD,EAAD,CAAmBC,IAAKA,EAAKC,aAAcA,GAAhCD,EAAI7F,SAKlC,qBAAK8B,UAAU,mDAAf,SACI,mDClGb,SAAS8F,IACpB,IAAIpB,EAAO,UAAMlH,kDAAN,SACPoB,EAAS,OAFe,EAGPmH,cAAbxE,EAHoB,EAGpBA,KAAMrD,EAHc,EAGdA,GAHc,EAIEwC,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKQhC,oBAAS,GALjB,mBAKrBmE,EALqB,KAKTC,EALS,OAMFpE,mBAAS,IANP,mBAMrBC,EANqB,KAMdC,EANc,OAOUF,mBAAS,IAPnB,mBAOrBsF,EAPqB,KAORC,EAPQ,OAQUvF,mBAAS,IARnB,mBAQrBwF,EARqB,KAQRC,EARQ,KAStBC,EAAU7D,mBACV8D,EAAU9D,mBACVtB,EAAUC,cAXY,EAYGhE,IAAvBK,EAZoB,EAYpBA,WAAYgB,EAZQ,EAYRA,OA+DpB,OA7DA+C,qBAAU,WACN,GAAY,SAATC,EAAiB,CAChBX,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAQ,CACVA,MAAK,iDACWR,EADX,6CAKTX,EAAWC,sDAAuCkB,GAAO,EAAM,QAAQjB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACxEmF,QAAQC,IAAI7I,GACO,MAAhBA,EAAKC,OAFgE,mBAGjD,MAAhBD,EAAKC,OAH4D,gCAI1DY,IAJ0D,OAKhE0C,EAAQG,KAAK,UALmD,OAOpER,EAASlD,EAAKG,KAAKC,SAPiD,uBASpEmI,EAAevI,EAAKG,KAAKH,KAAKqG,IAAI5F,MAClCgI,EAAezI,EAAKG,KAAKH,KAAKqG,IAAIyC,MAClC5F,EAAS,IAX2D,4CAA5E,uDAcA8B,GAAW,MAEhB,IAoCC,qCACI,+BAAMnB,EAAKkF,OAAO,GAAGC,cAAgBnF,EAAKoF,MAAM,GAAhD,kBACEhG,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,cAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SArC/B,SAAsBV,GAClBA,EAAEC,iBACFF,GAAW,GACX9B,EAAS,IAET,IAAMlC,EAAQ,CACVP,KAAMiI,EAAQvD,QAAQtD,MACtBiH,KAAMH,EAAQxD,QAAQtD,OAGd,SAATgC,IACCmD,EAAO,UAAMA,GAAN,OAAgBxG,GACvBU,EAAS,OAGbrB,EAAWmH,EAAShG,GAAO,EAAME,GAAQnB,KAAzC,uCAA8C,WAAMC,GAAN,SAAAyD,EAAA,yDACvB,MAAhBzD,EAAKC,OADkC,mBAEnB,MAAhBD,EAAKC,OAF8B,gCAG5BY,IAH4B,OAIlC0C,EAAQG,KAAK,UAJqB,OAMtCR,EAASlD,EAAKG,KAAKC,SANmB,uBAQtCgH,GAAeD,GACfjE,EAAS,IACTK,EAAQG,KAAK,gBAVyB,4CAA9C,uDAcAsB,GAAW,IAQP,SACI,eAAC6C,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAK2C,EAASQ,aAAcZ,EAAarC,WAAW,EAAME,SAAUpB,EAASiB,UAAU,OAErH,eAACN,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,WAAWpD,IAAK4C,EAASO,aAAcV,EAAaY,KAAM,EAAGjD,SAAUpB,EAASiB,UAAU,OAE/G,cAACE,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,OAAO6D,SAAUpB,EAAjD,qBACGA,GAAW,cAAC,IAAD,CAAMjC,GAAG,eAAeR,UAAU,iBAAiB6D,SAAUpB,EAA7D,4B,sBC5FnB,SAASsE,EAASjH,GAAQ,IAEjCkH,EAIAlH,EAJAkH,KACAC,EAGAnH,EAHAmH,MACAjD,EAEAlE,EAFAkE,aACAkD,EACApH,EADAoH,WALgC,EAOZxG,oBAAS,GAPG,mBAO7ByG,EAP6B,KAOvBC,EAPuB,KAQ9BC,EAAaJ,EAAMK,QAAO,SAAAC,GAAC,OAAIA,EAAEC,SAAWR,EAAK7I,QAGvD,OAFAmI,QAAQC,IAAIc,GAGR,mCACI,cAACpD,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAiB8C,EAAK7I,KAClB,cAACgG,EAAA,EAAD,CAAOhB,QAAQ,SAASnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYtC,QAASiC,EAAcM,UAAS0C,EAAK9I,GAA1H,oBACA,cAACiG,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYtC,QAASmF,EAAY5C,UAAS0C,EAAK9I,GAAzH,kBACA,eAACiG,EAAA,EAAD,CAAOhB,QAAQ,YAAYnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYtC,QAAS,kBAAMqF,GAAQ,SAAAK,GAAQ,OAAKA,MAA5H,UAAyIN,EAAO,OAAS,OAAzJ,aACA,cAACO,EAAA,EAAD,CAAUC,GAAIR,EAAd,SACI,oBAAInH,UAAU,OAAd,SAEQqH,EAAWxB,KAAI,SAAA+B,GACX,OAAO,+BAAqBA,EAAMzJ,KAC9B,cAACgG,EAAA,EAAD,CAAOhB,QAAQ,SAASnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASsD,EAAM1J,GAAI6D,QAASiC,EAAjH,oBACA,cAACG,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASsD,EAAM1J,GAAI6D,QAASmF,EAAlH,oBAFYU,EAAM1J,kBCnB3C,SAAS2J,IACpB,IAAInD,EAAO,UAAMlH,kDAAN,UACPoB,EAAS,OAFc,EAGD8B,mBAAS,IAHR,mBAGpBuG,EAHoB,KAGba,EAHa,OAIWpH,mBAAS,IAJpB,mBAIpBqH,EAJoB,KAIPC,EAJO,OAKKtH,oBAAS,GALd,mBAKpBuH,EALoB,KAKVC,EALU,OAMGxH,oBAAS,GANZ,mBAMpB+B,EANoB,KAMXC,EANW,OAODhC,mBAAS,IAPR,mBAOpBC,EAPoB,KAObC,EAPa,OAQSF,oBAAS,GARlB,mBAQpBmE,EARoB,KAQRC,EARQ,OASyBpE,mBAAS,IATlC,mBASpByH,EAToB,KASAC,EATA,OAUe1H,mBAAS,IAVxB,mBAUpB2H,EAVoB,KAULC,EAVK,OAWW5H,mBAAS,IAXpB,mBAWpBsF,EAXoB,KAWPC,EAXO,OAYavF,mBAAS,IAZtB,oBAYpB6H,GAZoB,MAYNC,GAZM,SAaW9H,mBAAS,IAbpB,qBAapB+H,GAboB,MAaPC,GAbO,SAcehI,mBAAS,IAdxB,qBAcpBiI,GAdoB,MAcLC,GAdK,MAerBxC,GAAU7D,mBACVsG,GAAWtG,mBACXuG,GAAUvG,mBACVwG,GAAYxG,mBACZtB,GAAUC,cACRhD,GAAO6H,cAAP7H,GApBmB,GAqBIhB,IAAvBK,GArBmB,GAqBnBA,WAAYgB,GArBO,GAqBPA,OAkFpB,SAAS2I,GAAWvE,GAChBuF,GAAY,GA9BhB,SAAuBc,GACnBpI,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAO,CACTA,MAAM,qCAAD,OACWsK,EADX,gFAKTzL,GAAWC,sDAAuCkB,GAAO,EAAME,GAAQnB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACrD,MAAhBzD,EAAKC,OADgE,mBAEjD,MAAhBD,EAAKC,OAF4D,gCAG1DY,KAH0D,OAIhE0C,GAAQG,KAAK,UAJmD,OAMpER,EAASlD,EAAKG,KAAKC,SANiD,uBAQpEwK,EAAiB5K,EAAKG,KAAKH,KAAKsJ,KAAK9I,IACrC+H,EAAevI,EAAKG,KAAKH,KAAKsJ,KAAK7I,MACnCqK,GAAgB9K,EAAKG,KAAKH,KAAKsJ,KAAKiC,YACpCP,GAAehL,EAAKG,KAAKH,KAAKsJ,KAAKkC,MACnCN,GAAiBlL,EAAKG,KAAKH,KAAKsJ,KAAKQ,QACrC5G,EAAS,IAb2D,4CAA5E,uDAiBA8B,GAAW,GAMXyG,CADWxG,EAAE4B,OAAOC,QAAQtG,IAIhC,SAAS8F,GAAarB,GAClB,GAAGyC,OAAOC,QAAQ,uCAAwC,CACtD3C,GAAW,GACX9B,EAAS,IACT,IAAMoI,EAASrG,EAAE4B,OAAOC,QAAQtG,GAChCX,GAAW,GAAD,OAAImH,GAAJ,OAAcsE,GAAU,IAAI,EAAM,UAAUvL,KAAtD,uCAA2D,WAAMC,GAAN,SAAAyD,EAAA,yDACpC,MAAhBzD,EAAKC,OAD+C,mBAEhC,MAAhBD,EAAKC,OAF2C,gCAGzCY,KAHyC,OAI/C0C,GAAQG,KAAK,UAJkC,OAMnDR,EAASlD,EAAKG,KAAKC,SANgC,uBAQnDgH,GAAeD,GACfjE,EAAS,IAT0C,4CAA3D,uDAYAsH,GAAY,GACZxF,GAAW,IA4CnB,OALApB,qBAAU,YA/IV,WACIV,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAO,CACTA,MAAM,oCAAD,OACUR,GADV,2DAEeA,GAFf,gFAKTX,GAAWC,sDAAuCkB,GAAO,EAAME,GAAQnB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACrD,MAAhBzD,EAAKC,OADgE,mBAEjD,MAAhBD,EAAKC,OAF4D,gCAG1DY,KAH0D,OAIhE0C,GAAQG,KAAK,UAJmD,OAMpER,EAASlD,EAAKG,KAAKC,SANiD,uBAQpEsK,EAAsB1K,EAAKG,KAAKH,KAAKqG,IAAI5F,MACzC2J,EAASpK,EAAKG,KAAKH,KAAKuJ,OACxBrG,EAAS,IAV2D,4CAA5E,uDAcA8B,GAAW,GAyHX0G,GAtHJ,WACIxI,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAO,CACTA,MAAM,yCAAD,OACeR,GADf,8FAKTX,GAAWC,sDAAuCkB,GAAO,EAAME,GAAQnB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACrD,MAAhBzD,EAAKC,OADgE,mBAEjD,MAAhBD,EAAKC,OAF4D,gCAG1DY,KAH0D,OAIhE0C,GAAQG,KAAK,UAJmD,OAMpER,EAASlD,EAAKG,KAAKC,SANiD,uBAQpEkK,EAAetK,EAAKG,KAAKH,KAAKuJ,OAC9BrG,EAAS,IAT2D,4CAA5E,uDAaA8B,GAAW,GAiGX2G,KACD,CAACxE,IAGA,qCACI,qBAAI7E,UAAU,OAAd,wBAAkCmI,KACjCxH,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACnC,eAAC2E,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAD,CAAMC,SA9CtB,SAAsBV,GAClBA,EAAEC,iBACFF,GAAW,GACX9B,EAAS,IAET,IAAMlC,EAAQ,CACVP,KAAMiI,GAAQvD,QAAQtD,MACtB0J,WAAYJ,GAAShG,QAAQtD,OAGF,MAA5BwJ,GAAUlG,QAAQtD,QAAeb,EAAM8I,OAASuB,GAAUlG,QAAQtD,OACxC,KAA1BuJ,GAAQjG,QAAQtD,QAAcb,EAAMwK,KAAOJ,GAAQjG,QAAQtD,OAE3D0I,GACCvD,EAAO,UAAMA,GAAN,OAAgB2D,GACvBzJ,EAAS,OAETF,EAAM4K,YAAcpL,GAExBX,GAAWmH,EAAShG,GAAO,EAAME,GAAQnB,KAAzC,uCAA8C,WAAMC,GAAN,SAAAyD,EAAA,yDACvB,MAAhBzD,EAAKC,OADkC,mBAEnB,MAAhBD,EAAKC,OAF8B,gCAG5BY,KAH4B,OAIlC0C,GAAQG,KAAK,UAJqB,OAMtCR,EAASlD,EAAKG,KAAKC,SANmB,uBAQtC8C,EAAS,IACTwE,OAAOmE,SAASC,SATsB,4CAA9C,uDAYAtB,GAAY,GACZxF,GAAW,IAcC,UACI,cAAC6C,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAK2C,GAASzC,WAAW,EAAME,SAAUpB,EAASiB,UAAU,EAAMkD,aAAcZ,SAGlH,cAACT,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKoF,GAAUhF,SAAUpB,EAASiB,UAAU,EAAMkD,aAAc2B,UAGlG,cAAChD,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKqF,GAASjF,SAAUpB,EAASmE,aAAc6B,eAKzF,cAAClD,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,0BACA,eAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKsF,GAAWxJ,MAAOoJ,GAAejD,SAAW,SAAA/C,GAAC,OAAIiG,GAAiBjG,EAAE4B,OAAOhF,QAA1G,UACI,wBAAQA,MAAM,IAAd,yBAEIwI,EAAYlC,KAAI,SAAA2B,GACZ,OAAO,wBAAwBjI,MAAOiI,EAAOrJ,KAAtC,SAA6CqJ,EAAOrJ,MAAvCqJ,EAAOtJ,eAM/C,eAACqH,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,cAAC5B,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,OAAO6D,SAAUpB,EAAjD,qBACGA,GAAW,cAAC,IAAD,CAAMjC,GAAG,eAAeR,UAAU,iBAAiB6D,SAAUpB,EAA7D,4BAI1B,eAAC8C,EAAA,EAAD,CAAKC,GAAG,IAAIvF,MAAO,CAAEwJ,WAAY,eAAjC,UACI,qBAAIzJ,UAAU,kBAAd,uBAA4CmI,KAExClB,EAAMtB,OAAS,EACf,cAAC7C,EAAA,EAAD,UAEImE,EAAMpB,KAAI,SAAAmB,GACN,IAAIA,EAAKQ,OACL,OAAO,cAACT,EAAD,CAAwBC,KAAMA,EAAMC,MAAOA,EAAOjD,aAAcA,GAAckD,WAAYA,IAA3EF,EAAK9I,SAMvC,qBAAK8B,UAAU,mDAAf,SACI,sDC5Ob,SAAS8D,EAAKhE,GAAQ,IAE7BzB,EAEAyB,EAFAzB,KACA2F,EACAlE,EADAkE,aAEE/C,EAAUC,cAOhB,OACI,mCACI,cAAC+C,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAiB7F,EAAKF,KAClB,cAACgG,EAAA,EAAD,CAAOhB,QAAQ,SAASnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASjG,EAAKH,GAAI6D,QAASiC,EAAhH,oBACA,cAACG,EAAA,EAAD,CAAOhB,QAAQ,UAAUlD,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASjG,EAAKH,GAAI6D,QAVvG,SAAoBY,GAChB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,qBAA2BlD,KAQf,yBCfL,SAASuG,IACpB,IAAMC,EAAO,UAAMlH,kDAAN,SADe,EAEFkD,mBAAS,IAFP,mBAErBgJ,EAFqB,KAEdC,EAFc,OAGQjJ,oBAAS,GAHjB,mBAGrBmE,EAHqB,KAGTC,EAHS,OAIEpE,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKFhC,mBAAS,IALP,mBAKrBC,EALqB,KAKdC,EALc,OAMG1D,IAAvBK,EANoB,EAMpBA,WAAYgB,EANQ,EAMRA,OACdwG,EAAaxC,mBACbtB,EAAUC,cARY,SAUb0I,IAVa,2EAU5B,0CAAAzI,EAAA,sDAAwB8D,EAAxB,+BAAiC,GAC7BrE,EAAS,IACT8B,GAAW,GACLhE,EAAQ,CACVA,MAAK,yCACOuG,EADP,iCAKT1H,EAAWC,sDAAuCkB,GAAO,EAAM,QAAQjB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACrD,MAAhBzD,EAAKC,OADgE,mBAEjD,MAAhBD,EAAKC,OAF4D,gCAG1DY,IAH0D,OAIhE0C,EAAQG,KAAK,UAJmD,OAMpER,EAASlD,EAAKG,KAAKC,SANiD,uBAQpE6L,EAASjM,EAAKG,KAAKH,KAAKgM,OACxB9I,EAAS,IAT2D,4CAA5E,uDAYA8B,GAAW,GArBf,4CAV4B,sBAkC5B,SAASyC,EAAaxC,GAClBA,EAAEC,iBAEFgH,EADU,oBAAgB7E,EAAWlC,QAAQtD,MAAnC,OAId,SAASyE,EAAarB,GAElB,GADAA,EAAEC,iBACCwC,OAAOC,QAAQ,0CAA2C,CACzD3C,GAAW,GACX9B,EAAS,IACT,IAAM1C,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5BX,EAAW,GAAD,OAAImH,EAAJ,YAAexG,GAAM,IAAI,EAAM,UAAUT,KAAnD,uCAAwD,WAAMC,GAAN,SAAAyD,EAAA,yDACjC,MAAhBzD,EAAKC,OAD4C,mBAE7B,MAAhBD,EAAKC,OAFwC,gCAGtCY,IAHsC,OAI5C0C,EAAQG,KAAK,UAJ+B,OAMhDR,EAASlD,EAAKG,KAAKC,SAN6B,uBAQhDgH,GAAeD,GACfjE,EAAS,IATuC,4CAAxD,uDAYA8B,GAAW,IAQnB,OAJApB,qBAAU,WACNsI,MACD,CAAC/E,IAGA,qCACI,uCACA,sBAAK7E,UAAU,OAAf,UACKW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACnC,cAAC,IAAD,CAAMH,GAAG,YAAYR,UAAU,kBAA/B,0BACA,cAACoD,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAAU8B,EAAjC,SACI,eAAC/B,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACF,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsB,EAAYW,SAAUP,EAActB,SAAUpB,EAASgD,YAAY,uBAG1G,cAACF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACM,EAAA,EAAD,CAAQT,QAAQ,UAAU5B,KAAK,SAASsC,SAAUpB,EAAlD,6BAMRiH,EAAM/D,OAAS,EACf,cAAC7C,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAU5F,UAAU,OAA1C,SAEQ0J,EAAM7D,KAAI,SAAAxH,GACN,OAAO,cAAC,EAAD,CAAoBA,KAAMA,EAAM2F,aAAcA,GAAnC3F,EAAKH,SAKnC,qBAAK8B,UAAU,mDAAf,SACI,mDClGb,SAAS8F,IACpB,IAAIpB,EAAO,UAAMlH,kDAAN,UACPoB,EAAS,OAFe,EAGPmH,cAAbxE,EAHoB,EAGpBA,KAAMrD,EAHc,EAGdA,GAHc,EAIEwC,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKQhC,oBAAS,GALjB,mBAKrBmE,EALqB,KAKTC,EALS,OAMFpE,mBAAS,IANP,mBAMrBC,EANqB,KAMdC,EANc,OAOUF,mBAAS,IAPnB,mBAOrBsF,EAPqB,KAORC,EAPQ,KAQtBG,EAAU7D,mBACVtB,EAAUC,cATY,EAUGhE,IAAvBK,EAVoB,EAUpBA,WAAYgB,EAVQ,EAURA,OA0DpB,OAxDA+C,qBAAU,WACN,GAAY,SAATC,EAAiB,CAChBX,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAQ,CACVA,MAAK,kDACYR,EADZ,uCAKTX,EAAWC,sDAAuCkB,GAAO,EAAM,QAAQjB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACrD,MAAhBzD,EAAKC,OADgE,mBAEjD,MAAhBD,EAAKC,OAF4D,gCAG1DY,IAH0D,OAIhE0C,EAAQG,KAAK,UAJmD,OAMpER,EAASlD,EAAKG,KAAKC,SANiD,uBAQpEmI,EAAevI,EAAKG,KAAKH,KAAKW,KAAKF,MACnCyC,EAAS,IAT2D,4CAA5E,uDAYA8B,GAAW,MAEhB,IAiCC,qCACI,+BAAMnB,EAAKkF,OAAO,GAAGC,cAAgBnF,EAAKoF,MAAM,GAAhD,WACEhG,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,cAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAlC/B,SAAsBV,GAClBA,EAAEC,iBACFF,GAAW,GACX9B,EAAS,IAET,IAAMlC,EAAQ,CAAEP,KAAMiI,EAAQvD,QAAQtD,OAE1B,SAATgC,IACCmD,EAAO,UAAMA,GAAN,OAAgBxG,GACvBU,EAAS,OAGbrB,EAAWmH,EAAShG,GAAO,EAAME,GAAQnB,KAAzC,uCAA8C,WAAMC,GAAN,SAAAyD,EAAA,yDACvB,MAAhBzD,EAAKC,OADkC,mBAEnB,MAAhBD,EAAKC,OAF8B,gCAG5BY,IAH4B,OAIlC0C,EAAQG,KAAK,UAJqB,OAMtCR,EAASlD,EAAKG,KAAKC,SANmB,uBAQtCgH,GAAeD,GACfjE,EAAS,IACTK,EAAQG,KAAK,SAVyB,4CAA9C,uDAcAsB,GAAW,IAQP,SACI,eAAC6C,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAK2C,EAASQ,aAAcZ,EAAarC,WAAW,EAAME,SAAUpB,EAASiB,UAAU,OAErH,cAACE,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,OAAO6D,SAAUpB,EAAjD,qBACGA,GAAW,cAAC,IAAD,CAAMjC,GAAG,QAAQR,UAAU,iBAAiB6D,SAAUpB,EAAtD,4BC/EnB,SAASoH,IACpB,IAAMnF,EAAO,UAAMlH,kDAAN,WADoB,EAEOkD,mBAAS,IAFhB,mBAE1BiE,EAF0B,KAEZC,EAFY,OAGPlE,mBAAS,IAHF,mBAG1BgJ,EAH0B,KAGnBC,EAHmB,OAIAjJ,mBAAS,IAJT,mBAI1BoJ,EAJ0B,KAIlBC,EAJkB,OAKPrJ,mBAAS,IALF,mBAK1BC,EAL0B,KAKnBC,EALmB,OAMHF,oBAAS,GANN,mBAM1B+B,EAN0B,KAMjBC,EANiB,OAOFxF,IAAvBK,EAPyB,EAOzBA,WAAYgB,EAPa,EAObA,OACd0C,EAAUC,cARiB,4CAcjC,sBAAAC,EAAA,sDACIP,EAAS,IACT8B,GAAW,GASXnF,EAAWC,sDARG,CACVkB,MAAK,iLAOgD,EAAM,QAAQjB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACrD,MAAhBzD,EAAKC,OADgE,mBAEjD,MAAhBD,EAAKC,OAF4D,gCAG1DY,IAH0D,OAIhE0C,EAAQG,KAAK,UAJmD,OAMpER,EAASlD,EAAKG,KAAKC,SANiD,uBAQpEiM,EAAerM,EAAKG,KAAKH,KAAKsM,YAC9BL,EAASjM,EAAKG,KAAKH,KAAKgM,OACxB9E,EAAgBlH,EAAKG,KAAKH,KAAKwH,MAC/BtE,EAAS,IAX2D,4CAA5E,uDAcA8B,GAAW,GAzBf,4CAdiC,sBA+EjC,SAASuH,EAAW5L,EAAM0F,EAAKiD,GAC3B,OAAO8C,EAAOxC,QAAO,SAAAC,GAAC,OAAIA,EAAElJ,OAASA,GAAQkJ,EAAExD,MAAQA,GAAOwD,EAAEP,OAASA,KAAMrB,OAAS,EAG5F,SAASuE,EAAevH,GACpBwH,SAASC,iBAAiB,wBAAwBC,SAAQ,SAAA9C,GACnDA,EAAE/C,QAAQnG,OAASsE,EAAE4B,OAAOC,QAAQnG,OACnCkJ,EAAE+C,QAAU3H,EAAE4B,OAAO+F,YAMjC,OAlFAhJ,qBAAU,YAVuB,mCAW7BiJ,KACD,IAiFC,qCACI,oBAAIvK,UAAU,OAAd,+BACEW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,eAACyC,EAAA,EAAD,CAAMC,SAtDd,SAAsBV,GAClBA,EAAEC,iBACFhC,EAAS,IACT8B,GAAW,GAGX,IAFA,IAAM8H,EAAM7H,EAAE4B,OAAOoB,OACjB8E,EAAY,GACRC,EAAI,EAAGA,EAAIF,EAAM,EAAGE,IACxB,GAAwB,WAArB/H,EAAE4B,OAAOmG,GAAGvM,KAAmB,CAC9B,IAAME,EAAOsE,EAAE4B,OAAOmG,GAAGlG,QAAQnG,KAC3B0F,EAAMpB,EAAE4B,OAAOmG,GAAGlG,QAAQT,IAC1B4G,EAAYhI,EAAE4B,OAAOmG,GAAGJ,QACxBtD,EAAOrE,EAAE4B,OAAOmG,GAAGnL,MACtBoL,GACCF,EAAUrJ,KAAK,CACX/C,KAAMA,EACN0F,IAAKA,EACLiD,KAAMA,IAMtBzJ,EAAWmH,EADG,CAAEhH,KAAM+M,IACK,EAAM,QAAQhN,KAAzC,uCAA8C,WAAMC,GAAN,SAAAyD,EAAA,yDACvB,MAAhBzD,EAAKC,OADkC,mBAEnB,MAAhBD,EAAKC,OAF8B,gCAG5BY,IAH4B,OAIlC0C,EAAQG,KAAK,UAJqB,OAMtCR,EAASlD,EAAKG,KAAKC,SANmB,uBAQtC8C,EAAS,IACTwE,OAAOmE,SAASC,SATsB,4CAA9C,uDAYA9G,GAAW,IAoBP,UACA,wBAAO1C,UAAU,2DAAjB,UACI,kCACI,+BACI,oBAAI4K,QAAQ,IAAIC,QAAQ,IAAxB,eAEIlG,EAAakB,KAAI,SAAAyD,GACb,OAAO,oBAAIuB,QAASvB,EAAYtC,KAAKM,QAAO,SAAAC,GAAC,OAAgB,OAAbA,EAAEC,UAAiB7B,OAA6B1F,MAAO,CAAC6K,WAAW,UAA5G,SAAwHxB,EAAYnL,MAA3DmL,EAAYpL,UAIxG,6BAEQyG,EAAakB,KAAI,SAAAyD,GACb,IAAMrC,EAAQqC,EAAYtC,KACxB,OAAoB,IAAjBC,EAAMtB,OAAsB,uBAC1BsB,EAAMpB,KAAI,SAAAmB,GACX,GAAmB,OAAhBA,EAAKQ,OAAiB,OAAO,oBAAIqD,QAAS5D,EAAMK,QAAO,SAAAC,GAAC,OAAIA,EAAEC,SAAWR,EAAK7I,QAAMwH,OAAuB1F,MAAO,CAAC6K,WAAW,UAAjG,SAA6G9D,EAAK7I,MAA7C6I,EAAK9I,YAM5H,6BAEQyG,EAAakB,KAAI,SAAAyD,GACb,IAAMrC,EAAQqC,EAAYtC,KACxB,OAAoB,IAAjBC,EAAMtB,OAAsB,uBAC1BsB,EAAMpB,KAAI,SAAAmB,GACX,GAAmB,OAAhBA,EAAKQ,OAAiB,OAAO,oBAAIvH,MAAO,CAAC6K,WAAW,UAAvB,SAAiD9D,EAAK7I,MAAf6I,EAAK9I,eAOlG,gCAEQwL,EAAM7D,KAAI,SAAAxH,GACN,OAAO,+BACH,oBAAI4B,MAAO,CAAC6K,WAAY,UAAxB,SAAoCzM,EAAKF,OACzC,6BACI,uBAAOoD,KAAK,WAAWtB,MAAO,CAAC8K,WAAY,KAAM/K,UAAU,mCAAmCgL,YAAW3M,EAAKF,KAAMuH,SAAUwE,MAG9HvF,EAAakB,KAAI,SAAAyD,GACb,OAAOA,EAAYtC,KAAKnB,KAAI,SAACmB,EAAMiE,GAC7B,GAAmB,OAAhBjE,EAAKQ,OAAiB,OAAO,6BAC9B,cAACpE,EAAA,EAAK8H,MAAN,CAAYF,YAAW3M,EAAKF,KAAMgN,WAAU7B,EAAYnL,KAAMoB,MAAOyH,EAAK7I,KAAMA,KAAK,SAASiN,eAAgBnB,EAAW5L,EAAKF,KAAMmL,EAAYnL,KAAM6I,EAAK7I,wBAS3L,6BAIJ,cAACyF,EAAA,EAAD,CAAQrC,KAAK,SAASsC,SAAUpB,EAAhC,kCC9JG,SAASqB,EAAKhE,GAAQ,IAG7BuL,EAKAvL,EALAuL,KAEArH,GAGAlE,EAJAwL,KAIAxL,EAHAkE,cACAuH,EAEAzL,EAFAyL,mBACAC,EACA1L,EADA0L,aAEEvK,EAAUC,cAOhB,OACI,mCACI,cAAC+C,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAiBmH,EAAKlN,KAAtB,KAA8BkN,EAAKhN,KAAnC,IAEmD,kBAA3C+G,OAAOmE,SAASkC,SAASC,MAAM,KAAK,IACpC,cAACvH,EAAA,EAAD,CAAOhB,QAAQ,UAAUlD,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS+G,EAAKnN,GAAI6D,QAASyJ,EAAhG,oBAG2C,kBAA3CpG,OAAOmE,SAASkC,SAASC,MAAM,KAAK,IACpC,qCACI,cAACvH,EAAA,EAAD,CAAOhB,QAASkI,EAAKM,WAAa,YAAc,UAAW3L,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYuH,cAAaP,EAAKM,WAAYrH,UAAS+G,EAAKnN,GAAI6D,QAASwJ,EAAjL,SAAuMF,EAAKM,WAAa,UAAY,aACrO,cAACxH,EAAA,EAAD,CAAOhB,QAAQ,SAASnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS+G,EAAKnN,GAAI6D,QAASiC,EAAhH,oBACA,cAACG,EAAA,EAAD,CAAOhB,QAAQ,UAAUlD,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS+G,EAAKnN,GAAI6D,QAlB/G,SAAoBY,GAChB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,qBAA2BlD,KAgBP,4BC3Bb,SAASuG,IACpB,IAAMC,EAAO,UAAMlH,kDAAN,SADe,EAEFkD,mBAAS,IAFP,mBAErBmL,EAFqB,KAEdC,EAFc,OAGFpL,mBAAS,IAHP,mBAGrBgJ,EAHqB,KAGdC,EAHc,OAIQjJ,oBAAS,GAJjB,mBAIrBmE,EAJqB,KAITC,EAJS,OAKEpE,oBAAS,GALX,mBAKrB+B,EALqB,KAKZC,EALY,OAMFhC,mBAAS,IANP,mBAMrBC,EANqB,KAMdC,EANc,OAOG1D,IAAvBK,EAPoB,EAOpBA,WAAYgB,EAPQ,EAORA,OACdwG,EAAaxC,mBACbwJ,EAAYxJ,mBACZyJ,EAAUzJ,mBACVtB,EAAUC,cAXY,4CAa5B,0CAAAC,EAAA,sDAAwB8D,EAAxB,+BAAiC,GAC7BrE,EAAS,IACT8B,GAAW,GACLhE,EAAQ,CACVA,MAAK,yCACOuG,EADP,iCAKT1H,EAAWC,sDAAuCkB,GAAO,EAAM,QAAQjB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACxEmF,QAAQC,IAAI7I,GACO,MAAhBA,EAAKC,OAFgE,mBAGjD,MAAhBD,EAAKC,OAH4D,gCAI1DY,IAJ0D,OAKhE0C,EAAQG,KAAK,UALmD,OAOpER,EAASlD,EAAKG,KAAKC,SAPiD,uBASpE6L,EAASjM,EAAKG,KAAKH,KAAKgM,OACxB9I,EAAS,IAV2D,4CAA5E,uDAaA8B,GAAW,GAtBf,4CAb4B,+BAsCbuJ,IAtCa,2EAsC5B,0CAAA9K,EAAA,sDAAwB8D,EAAxB,+BAAiC,GAC7BrE,EAAS,IACT8B,GAAW,GACLhE,EAAQ,CACVA,MAAK,yCACOuG,EADP,oEAIT1H,EAAWC,sDAAuCkB,GAAO,EAAM,QAAQjB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACrD,MAAhBzD,EAAKC,OADgE,mBAEjD,MAAhBD,EAAKC,OAF4D,gCAG1DY,IAH0D,OAIhE0C,EAAQG,KAAK,UAJmD,OAMpER,EAASlD,EAAKG,KAAKC,SANiD,uBAQpEgO,EAASpO,EAAKG,KAAKH,KAAKmO,OACxBjL,EAAS,IAT2D,4CAA5E,uDAYA8B,GAAW,GApBf,4CAtC4B,sBA6D5B,SAASyC,EAAaxC,GAClBA,EAAEC,iBACF,IAAIsJ,EAAsC,KAA5BH,EAAUlJ,QAAQtD,MAAnB,oBAAgDwM,EAAUlJ,QAAQtD,OAAS,GACpFlB,EAAkC,KAA1B2N,EAAQnJ,QAAQtD,MAAjB,mBAA6CyM,EAAQnJ,QAAQtD,MAA7D,KAAuE,GAElF0M,EADU,oBAAgBlH,EAAWlC,QAAQtD,MAAnC,YAA4C2M,GAA5C,OAAqD7N,EAArD,MAId,SAAS2F,EAAarB,GAElB,GADAA,EAAEC,iBACCwC,OAAOC,QAAQ,0CAA2C,CACzD,IAAMnH,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5BX,EAAW,GAAD,OAAImH,EAAJ,YAAexG,GAAM,IAAI,EAAM,UAAUT,KAAnD,uCAAwD,WAAMC,GAAN,SAAAyD,EAAA,yDACjC,MAAhBzD,EAAKC,OAD4C,mBAE7B,MAAhBD,EAAKC,OAFwC,gCAGtCY,IAHsC,OAI5C0C,EAAQG,KAAK,UAJ+B,OAMhDR,EAASlD,EAAKG,KAAKC,SAN6B,uBAQhDgH,GAAeD,GACfjE,EAAS,IATuC,4CAAxD,uDAYA8B,GAAW,IAInB,SAAS6I,EAAmB5I,GACxBA,EAAEC,iBACF,IACIuJ,EADuC,SAA5BxJ,EAAE4B,OAAOC,QAAQ7G,OACV,QAAU,WAChC,GAAGyH,OAAOC,QAAP,+BAAuC8G,EAAvC,gBAA6D,CAC5DzJ,GAAW,GACX9B,EAAS,IACT,IAAM1C,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5BX,EAAW,GAAD,OAAImH,EAAJ,yBAA4BxG,GAAM,IAAI,EAAM,OAAOT,KAA7D,uCAAkE,WAAMC,GAAN,SAAAyD,EAAA,yDAC3C,MAAhBzD,EAAKC,OADsD,mBAEvC,MAAhBD,EAAKC,OAFkD,gCAGhDY,IAHgD,OAItD0C,EAAQG,KAAK,UAJyC,OAM1DR,EAASlD,EAAKG,KAAKC,SANuC,uBAQ1DgH,GAAeD,GACfjE,EAAS,IATiD,4CAAlE,uDAYA8B,GAAW,IASnB,OALApB,qBAAU,WACN2K,IAlHwB,mCAmHxBrC,KACD,CAAC/E,IAGA,qCACI,uCACA,sBAAK7E,UAAU,OAAf,UACKW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACnC,cAAC,IAAD,CAAMH,GAAG,YAAYR,UAAU,kBAA/B,0BACA,cAACoD,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAAU8B,EAAjC,SACI,eAAC/B,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACF,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsB,EAAYW,SAAUP,EAActB,SAAUpB,EAASgD,YAAY,uBAG1G,cAACF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,eAACF,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKsI,EAAWrG,SAAUP,EAApD,UACI,wBAAQ5F,MAAM,GAAd,wBACA,wBAAQA,MAAM,OAAd,oBACA,wBAAQA,MAAM,QAAd,6BAIZ,cAACgG,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,eAACF,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKuI,EAAStG,SAAUP,EAAlD,UACI,wBAAQ5F,MAAM,GAAd,sBAEImK,EAAM7D,KAAI,SAAAxH,GACN,OAAO,wBAAQkB,MAAOlB,EAAKF,KAApB,SAA2BE,EAAKF,iBAM3D,cAACoH,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACM,EAAA,EAAD,CAAQT,QAAQ,UAAU5B,KAAK,SAASsC,SAAUpB,EAAlD,6BAMRoJ,EAAMlG,OAAS,EACf,cAAC7C,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAU5F,UAAU,OAA1C,SAEQ6L,EAAMhG,KAAI,SAAAwF,GACN,GAAGA,EAAKnN,KAAOH,eAAekB,QAAQ,MAClC,OAAO,cAAC,EAAD,CAAoBoM,KAAMA,EAAMrH,aAAcA,EAAcuH,mBAAoBA,GAArEF,EAAKnN,SAMvC,qBAAK8B,UAAU,mDAAf,SACI,mDC7Kb,SAAS8F,IACpB,IAAIpB,EAAO,UAAMlH,kDAAN,UACPoB,EAAS,OAFe,EAGPmH,cAAbxE,EAHoB,EAGpBA,KAAMrD,EAHc,EAGdA,GAHc,EAIEwC,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKQhC,oBAAS,GALjB,mBAKrBmE,EALqB,KAKTC,EALS,OAMFpE,mBAAS,IANP,mBAMrBC,EANqB,KAMdC,EANc,OAOUF,mBAAS,IAPnB,mBAOrBsF,EAPqB,KAORC,EAPQ,OAQYvF,mBAAS,IARrB,mBAQrB0L,EARqB,KAQPC,EARO,OASkB3L,mBAAS,IAT3B,mBASrB4L,EATqB,KASJC,EATI,OAUU7L,mBAAS,IAVnB,mBAUrB8L,EAVqB,KAURC,EAVQ,OAWF/L,mBAAS,IAXP,mBAWrBgJ,EAXqB,KAWdC,EAXc,KAYtBvD,EAAU7D,mBACVmK,EAAWnK,mBACXD,EAAcC,mBACdC,EAAcD,mBACdoK,EAAqBpK,mBACrByJ,GAAUzJ,mBACVtB,GAAUC,cAlBY,GAmBGhE,IAAvBK,GAnBoB,GAmBpBA,WAAYgB,GAnBQ,GAmBRA,OAiGpB,OA/FA+C,qBAAU,WAGN,GA6BAV,EAAS,IACT8B,GAAW,GAOXnF,GAAWC,sDANG,CACVkB,MAAK,+DAKgD,EAAM,QAAQjB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACrD,MAAhBzD,EAAKC,OADgE,mBAEjD,MAAhBD,EAAKC,OAF4D,gCAG1DY,KAH0D,OAIhE0C,GAAQG,KAAK,UAJmD,OAMpER,EAASlD,EAAKG,KAAKC,SANiD,uBAQpE6L,EAASjM,EAAKG,KAAKH,KAAKgM,OACxB9I,EAAS,IAT2D,4CAA5E,uDAYA8B,GAAW,GAjDC,SAATnB,EAAiB,CAChBX,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAQ,CACVA,MAAK,kDACYR,EADZ,8DAKTX,GAAWC,sDAAuCkB,GAAO,EAAM,QAAQjB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACrD,MAAhBzD,EAAKC,OADgE,mBAEjD,MAAhBD,EAAKC,OAF4D,gCAG1DY,KAH0D,OAIhE0C,GAAQG,KAAK,UAJmD,OAMpER,EAASlD,EAAKG,KAAKC,SANiD,uBAQpEmI,EAAevI,EAAKG,KAAKH,KAAK2N,KAAKlN,MACnCsO,EAAe/O,EAAKG,KAAKH,KAAK2N,KAAKhN,MACnCkO,EAAmB7O,EAAKG,KAAKH,KAAK2N,KAAKhO,UACvCgP,EAAgB3O,EAAKG,KAAKH,KAAK2N,KAAKjN,OACpCwC,EAAS,IAZ2D,4CAA5E,uDAeA8B,GAAW,MAEhB,IAmEC,qCACI,+BAAMnB,EAAKkF,OAAO,GAAGC,cAAgBnF,EAAKoF,MAAM,GAAhD,WACEhG,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,cAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SA5C/B,SAAsBV,GAClBA,EAAEC,iBACFF,GAAW,GACX9B,EAAS,IAET,IAAMlC,EAAQ,CACVrB,SAAUiF,EAAYO,QAAQtD,MAC9BpB,KAAMiI,EAAQvD,QAAQtD,MACtBnB,MAAOsO,EAAS7J,QAAQtD,MACxBlB,KAAM2N,GAAQnJ,QAAQtD,OAGO,KAA9BiD,EAAYK,QAAQtD,OAAqD,KAArCoN,EAAmB9J,QAAQtD,QAC9Db,EAAMpB,SAAWkF,EAAYK,QAAQtD,MACrCb,EAAMkO,gBAAkBD,EAAmB9J,QAAQtD,OAG3C,SAATgC,IACCmD,EAAO,UAAMA,GAAN,OAAgBxG,GACvBU,EAAS,OAGbrB,GAAWmH,EAAShG,GAAO,EAAME,GAAQnB,KAAzC,uCAA8C,WAAMC,GAAN,SAAAyD,EAAA,yDACvB,MAAhBzD,EAAKC,OADkC,mBAEnB,MAAhBD,EAAKC,OAF8B,gCAG5BY,KAH4B,OAIlC0C,GAAQG,KAAK,UAJqB,OAMtCR,EAASlD,EAAKG,KAAKC,SANmB,uBAQtCgH,GAAeD,GACfjE,EAAS,IACTK,GAAQG,KAAK,SAVyB,4CAA9C,uDAcAsB,GAAW,IAQP,SACI,eAAC6C,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAK2C,EAASQ,aAAcZ,EAAarC,WAAW,EAAME,SAAUpB,EAASiB,UAAU,OAErH,eAACN,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,QAAQkC,IAAKiJ,EAAU9F,aAAcwF,EAAcvI,SAAUpB,EAASiB,UAAU,OAEvG,eAACN,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKnB,EAAasE,aAAc0F,EAAiBzI,SAAUpB,EAASiB,UAAU,SAGhH,cAAC6B,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,eAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKuI,GAASnI,SAAUpB,EAASlD,MAAOiN,EAAa9G,SAAW,SAAA/C,GAAC,OAAI8J,EAAe9J,EAAE4B,OAAOhF,QAAvH,UACI,wBAAQA,MAAM,GAAGsN,QAAM,EAAvB,yBAEInD,EAAM7D,KAAI,SAAAxH,GACN,OAAO,wBAAsBkB,MAAOlB,EAAKF,KAAlC,SAAyCE,EAAKF,MAAjCE,EAAKH,kBAOjD,eAACkF,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,WAAWkC,IAAKjB,EAAaqB,SAAUpB,SAGlE,cAAC8C,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,oCACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,WAAWkC,IAAKkJ,EAAoB9I,SAAUpB,YAI7E,cAACmB,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,OAAO6D,SAAUpB,EAAjD,qBACGA,GAAW,cAAC,IAAD,CAAMjC,GAAG,QAAQR,UAAU,iBAAiB6D,SAAUpB,EAAtD,4BCtKnB,SAASqK,IACpB,IAAIpI,EAAO,UAAMlH,kDAAN,UADmB,EAGAkD,oBAAS,GAHT,mBAGvB+B,EAHuB,KAGdC,EAHc,OAIMhC,oBAAS,GAJf,mBAIvBmE,EAJuB,KAIXC,EAJW,OAKJpE,mBAAS,IALL,mBAKvBC,EALuB,KAKhBC,EALgB,OAMQF,mBAAS,IANjB,mBAMvBsF,EANuB,KAMVC,EANU,OAOUvF,mBAAS,IAPnB,mBAOvB0L,EAPuB,KAOTC,EAPS,OAQgB3L,mBAAS,IARzB,mBAQvB4L,EARuB,KAQNC,EARM,KASxBnG,EAAU7D,mBACVmK,EAAWnK,mBACXD,EAAcC,mBACdC,EAAcD,mBACdoK,EAAqBpK,mBACrBtB,EAAUC,cAdc,EAeChE,IAAvBK,EAfsB,EAetBA,WAAYgB,EAfU,EAeVA,OACdL,EAAKH,eAAekB,QAAQ,MAoElC,OAlEAqC,qBAAU,YAIV,WACIV,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAQ,CACVA,MAAK,8CACYR,EADZ,0DAKTX,EAAWC,sDAAuCkB,GAAO,EAAM,QAAQjB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACrD,MAAhBzD,EAAKC,OADgE,mBAEjD,MAAhBD,EAAKC,OAF4D,gCAG1DY,IAH0D,OAIhE0C,EAAQG,KAAK,UAJmD,OAMpER,EAASlD,EAAKG,KAAKC,SANiD,uBAQpEmI,EAAevI,EAAKG,KAAKH,KAAK2N,KAAKlN,MACnCoO,EAAmB7O,EAAKG,KAAKH,KAAK2N,KAAKhO,UACvCgP,EAAgB3O,EAAKG,KAAKH,KAAK2N,KAAKjN,OACpCwC,EAAS,IAX2D,4CAA5E,uDAcA8B,GAAW,GA1BXqK,KACD,IAiEC,qCACI,yCACEpM,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,cAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAxC/B,SAAsBV,GAClBA,EAAEC,iBACFF,GAAW,GACX9B,EAAS,IACT8D,EAAO,UAAMA,GAAN,OAAgBxG,GAEvB,IAAMQ,EAAQ,CACVrB,SAAUiF,EAAYO,QAAQtD,MAC9BpB,KAAMiI,EAAQvD,QAAQtD,MACtBnB,MAAOsO,EAAS7J,QAAQtD,MACxBlB,KAAMN,eAAekB,QAAQ,SAGA,KAA9BuD,EAAYK,QAAQtD,OAAqD,KAArCoN,EAAmB9J,QAAQtD,QAC9Db,EAAMpB,SAAWkF,EAAYK,QAAQtD,MACrCb,EAAMkO,gBAAkBD,EAAmB9J,QAAQtD,OAGvDhC,EAAWmH,EAAShG,GAAO,EAhElB,OAgEgCjB,KAAzC,uCAA8C,WAAMC,GAAN,SAAAyD,EAAA,yDACvB,MAAhBzD,EAAKC,OADkC,mBAEnB,MAAhBD,EAAKC,OAF8B,gCAG5BY,IAH4B,OAIlC0C,EAAQG,KAAK,UAJqB,OAMtCR,EAASlD,EAAKG,KAAKC,SANmB,uBAQtCgH,GAAeD,GACfjE,EAAS,IACTK,EAAQG,KAAK,KAVyB,4CAA9C,uDAcAsB,GAAW,IAQP,SACI,eAAC6C,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAK2C,EAASQ,aAAcZ,EAAarC,WAAW,EAAME,SAAUpB,EAASiB,UAAU,OAErH,eAACN,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKnB,EAAasE,aAAc0F,EAAiBzI,SAAUpB,EAASiB,UAAU,SAGhH,cAAC6B,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,QAAQkC,IAAKiJ,EAAU9F,aAAcwF,EAAcvI,SAAUpB,EAASiB,UAAU,YAI/G,eAACN,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,WAAWkC,IAAKjB,EAAaqB,SAAUpB,SAGlE,cAAC8C,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,oCACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,WAAWkC,IAAKkJ,EAAoB9I,SAAUpB,YAI7E,cAACmB,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,OAAO6D,SAAUpB,EAAjD,qBACGA,GAAW,cAAC,IAAD,CAAMjC,GAAG,IAAIR,UAAU,iBAAiB6D,SAAUpB,EAAlD,4B,qBC3HnB,SAASqB,EAAKhE,GAAQ,IAG7BkN,EAGAlN,EAHAkN,IACAC,EAEAnN,EAFAmN,YACAC,EACApN,EADAoN,cAL4B,EAQRxM,oBAAS,GARD,mBAQzByG,EARyB,KAQnBC,EARmB,KAS1BnG,EAAUC,cAiBhB,OACI,mCACI,cAAC4B,EAAA,EAAD,CAAM9C,UAAU,gBAAhB,SACI,eAAC8C,EAAA,EAAKG,KAAN,WACI,qBAAKjD,UAAU,iCAAf,SACI,gCACI,eAAC8C,EAAA,EAAKqK,MAAN,WACKH,EAAIzL,KADT,MACkByL,EAAII,MAEG,UAAnBJ,EAAIK,YAAuD,SAA7BjI,OAAOmE,SAASkC,UAChD,cAACtH,EAAA,EAAD,CAAOhB,QAAQ,SAASnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYtC,QAASkL,EAAa3I,UAAS0I,EAAI9O,GAAxH,oBACwB,UAAtB8O,EAAIM,eAA0D,SAA7BlI,OAAOmE,SAASkC,UAA0C,UAAnBuB,EAAIK,YAC9E,cAAClJ,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYtC,QAASmL,EAAe5I,UAAS0I,EAAI9O,GAA3H,uBAC+B,SAA7BkH,OAAOmE,SAASkC,UAClB,cAACtH,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYtC,QA7BlH,SAAoBY,GAChB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,oBAA0BlD,KA2ByGoG,UAAS0I,EAAI9O,GAAxH,kBAG+B,SAA7BkH,OAAOmE,SAASkC,UAClB,cAACtH,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYtC,QA5BlH,SAAsBY,GAClB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,oBAA0BlD,KA0B2GoG,UAAS0I,EAAI9O,GAA1H,sBAG+B,kBAA7BkH,OAAOmE,SAASkC,UAClB,cAACtH,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYtC,QA3BlH,SAA0BY,GACtB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,6BAAmClD,KAyBsGoG,UAAS0I,EAAI9O,GAA9H,6BAGJ,cAAC4E,EAAA,EAAKyK,SAAN,CAAevN,UAAU,kBAAzB,SACMgN,EAAIQ,WAEV,qBAAKvN,MAAO,CAACwN,UAAW,aAAxB,SACI,cAAC,IAAD,CAAeC,OAASV,EAAIxG,cAIxC,cAAC1D,EAAA,EAAK6K,KAAN,UACI,cAAC/J,EAAA,EAAD,CAAQT,QAAQ,OAAOnD,UAAU,SAAS+B,QAAS,kBAAMqF,GAAQ,SAAAK,GAAQ,OAAKA,MAA9E,SACKN,EAAO,eAAiB,mBAGjC,cAACO,EAAA,EAAD,CAAUC,GAAIR,EAAd,SACI,qBAAKnH,UAAU,OAAf,SACI,cAAC,IAAD,CAAeV,SAAU0N,EAAIY,YAAaC,oBAAoB,eCjE3E,SAASpJ,IACpB,IAAMC,EAAO,UAAMlH,kDAAN,QADe,EAEJkD,mBAAS,IAFL,mBAErBoN,EAFqB,KAEfC,EAFe,OAGQrN,oBAAS,GAHjB,mBAGrBmE,EAHqB,KAGTC,EAHS,OAIEpE,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKFhC,mBAAS,IALP,mBAKrBC,EALqB,KAKdC,EALc,OAMG1D,IAAvBK,EANoB,EAMpBA,WAAYgB,EANQ,EAMRA,OACdwG,EAAaxC,mBACbwJ,EAAYxJ,mBACZtB,EAAUC,cATY,SAWb8M,IAXa,2EAW5B,0CAAA7M,EAAA,sDAAuB8D,EAAvB,+BAAgC,GAC5BrE,EAAS,IACT8B,GAAW,GACLhE,EAAQ,CACVA,MAAK,wCACMuG,EADN,kHAIT1H,EAAWC,sDAA+CkB,GAAO,EAAM,QAAQjB,KAA/E,uCAAoF,WAAMC,GAAN,SAAAyD,EAAA,yDAC7D,MAAhBzD,EAAKC,OADwE,mBAEzD,MAAhBD,EAAKC,OAFoE,gCAGlEY,IAHkE,OAIxE0C,EAAQG,KAAK,UAJ2D,OAM5ER,EAASlD,EAAKG,KAAKC,SANyD,uBAQ5EiQ,EAAQrQ,EAAKG,KAAKH,KAAKoQ,MACvBlN,EAAS,IATmE,4CAApF,uDAYA8B,GAAW,GApBf,4CAX4B,sBAkC5B,SAASyC,EAAaxC,GAClBA,EAAEC,iBAEF,IAAIqL,EAAe,GACY,cAA5BlC,EAAUlJ,QAAQtD,QAAuB0O,GAAgB,qBAC7B,WAA5BlC,EAAUlJ,QAAQtD,QAAoB0O,GAAgB,kBAGzDD,EAFU,qBAAiBjJ,EAAWlC,QAAQtD,MAApC,aAA8C0O,EAA9C,MAKd,SAAShB,EAAYtK,GAEjB,GADAA,EAAEC,iBACCwC,OAAOC,QAAP,wCAAwD,CACvD,IAAMnH,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5BoI,QAAQC,IAAIrI,GACZgQ,EAAa,QAAShQ,IAK9B,SAASgP,EAAcvK,IACnBA,EAAEC,iBACCwC,OAAOC,QAAP,4CAEC6I,EAAa,UADFvL,EAAE4B,OAAOC,QAAQtG,IAKpC,SAASgQ,EAAa3M,EAAMrD,GACxBwE,GAAW,GACX9B,EAAS,IACTrD,EAAW,GAAD,OAAImH,EAAJ,YAAenD,EAAf,YAAuBrD,GAAM,IAAI,EAAM,OAAOT,KAAxD,uCAA6D,WAAMC,GAAN,SAAAyD,EAAA,yDACtC,MAAhBzD,EAAKC,OADiD,mBAElC,MAAhBD,EAAKC,OAF6C,gCAG3CY,IAH2C,OAIjD0C,EAAQG,KAAK,UAJoC,OAMrDR,EAASlD,EAAKG,KAAKC,SANkC,uBAQrDgH,GAAeD,GACfjE,EAAS,IAT4C,4CAA7D,uDAYA8B,GAAW,GAOf,OAJApB,qBAAU,WACN0M,MACD,CAACnJ,IAGA,qCACI,6BACmC,SAA7BO,OAAOmE,SAASkC,SAAsB,OACT,SAA7BrG,OAAOmE,SAASkC,SAAsB,oBACT,kBAA7BrG,OAAOmE,SAASkC,SAA+B,mBAC/C,KAEN,sBAAKzL,UAAU,OAAf,UACKW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IAEF,SAA7ByE,OAAOmE,SAASkC,UAChB,cAAC,IAAD,CAAMjL,GAAG,WAAWR,UAAU,kBAA9B,yBAEJ,cAACoD,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAAU8B,EAAjC,SACI,eAAC/B,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACF,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsB,EAAYW,SAAUP,EAActB,SAAUpB,EAASgD,YAAY,uBAG1G,cAACF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,eAACF,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKsI,EAAWrG,SAAUP,EAApD,UACI,wBAAQ5F,MAAM,GAAd,wBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAIZ,cAACgG,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACM,EAAA,EAAD,CAAQT,QAAQ,UAAU5B,KAAK,SAASsC,SAAUpB,EAAlD,6BAMRqL,EAAKnI,OAAS,EACVmI,EAAKjI,KAAI,SAAAmH,GACL,OAAO,cAAC,EAAD,CAAmBA,IAAKA,EAAKC,YAAaA,EAAaC,cAAeA,GAA3DF,EAAI9O,OAG9B,qBAAK8B,UAAU,mDAAf,SACI,mD,yBCjIb,SAAS8F,KACpB,IAAIpB,EAAU,iCACV9F,EAAS,OAFe,EAGPmH,cAAbxE,EAHoB,EAGpBA,KAAMrD,EAHc,EAGdA,GAHc,EAIEwC,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKQhC,oBAAS,GALjB,mBAKrBmE,EALqB,KAKTC,EALS,OAMFpE,mBAAS,IANP,mBAMrBC,EANqB,KAMdC,EANc,OAOYF,mBAAS,IAPrB,mBAOrByN,EAPqB,KAOPC,EAPO,OAQU1N,mBAAS,IARnB,mBAQrBwF,EARqB,KAQRC,EARQ,OASkBzF,qBATlB,mBASrB2N,EATqB,KASJC,EATI,OAUkB5N,qBAVlB,mBAUrB6N,EAVqB,KAUJC,EAVI,OAWwB9N,mBAAS,IAXjC,mBAWrB+N,EAXqB,KAWDC,EAXC,OAYgBhO,qBAZhB,mBAYrBiO,EAZqB,KAYLC,EAZK,QAagBlO,qBAbhB,qBAarBmO,GAbqB,MAaLC,GAbK,SAcFpO,mBAAS,IAdP,qBAetBqO,IAfsB,YAeXxM,oBACX8D,GAAU9D,mBACVyM,GAAUzM,mBACV0M,GAAS1M,mBACT2M,GAAS3M,mBACT4M,GAAiB5M,mBACjBtB,GAAUC,cArBY,GAsBGhE,IAAvBK,GAtBoB,GAsBpBA,WAAYgB,GAtBQ,GAsBRA,OAqFpB,OAtEA+C,qBAAU,WACN,GAAY,SAATC,EAAiB,CAChBX,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAQ,CACVA,MAAK,iDACWR,EADX,mFAKTX,GAAWC,sDAA+CkB,GAAO,EAAM,QAAQjB,KAA/E,uCAAoF,WAAMC,GAAN,SAAAyD,EAAA,yDAC7D,MAAhBzD,EAAKC,OADwE,mBAEzD,MAAhBD,EAAKC,OAFoE,gCAGlEY,KAHkE,OAIxE0C,GAAQG,KAAK,UAJ2D,OAM5ER,EAASlD,EAAKG,KAAKC,SANyD,uBAQ5EsQ,EAAgB1Q,EAAKG,KAAKH,KAAKsP,IAAII,OACnCjH,EAAezI,EAAKG,KAAKH,KAAKsP,IAAIxG,MAClCkI,EAAsBhR,EAAKG,KAAKH,KAAKsP,IAAIY,aACzCU,EAA+C,cAA5B5Q,EAAKG,KAAKH,KAAKsP,IAAIzL,MACtCiN,EAA+C,cAA5B9Q,EAAKG,KAAKH,KAAKsP,IAAIzL,MACtCqN,EAAkBlR,EAAKG,KAAKH,KAAKsP,IAAIoC,SACrCN,GAAkBpR,EAAKG,KAAKH,KAAKsP,IAAIqC,SACrCzO,EAAS,IAfmE,4CAApF,uDAkBA8B,GAAW,MAEhB,IAyCC,qCACI,+BAAMnB,EAAKkF,OAAO,GAAGC,cAAgBnF,EAAKoF,MAAM,GAAhD,UACEhG,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,eAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SA1C/B,SAAsBV,GAClBA,EAAEC,iBACFF,GAAW,GACX9B,EAAS,IAET,IAAM0O,EAAUN,GAAQnM,QAAQyH,QAAU,YAAc,YAClD5L,EAAQ,CACV0O,MAAO2B,GAASlM,QAAQtD,MACxBiH,KAAMH,GAAQxD,QAAQtD,MACtBqO,YAAauB,GAAetM,QAAQ0M,MAAMhQ,MAC1CgC,KAAM+N,EACNF,QAASH,GAAOpM,QAAQtD,MACxB8P,QAASH,GAAOrM,QAAQtD,OAGhB,SAATgC,IACCmD,EAAO,UAAMA,GAAN,OAAgBxG,GACvBU,EAAS,OAGbrB,GAAWmH,EAAShG,GAAO,EAAME,GAAQnB,KAAzC,uCAA8C,WAAMC,GAAN,SAAAyD,EAAA,yDACvB,MAAhBzD,EAAKC,OADkC,mBAEnB,MAAhBD,EAAKC,OAF8B,gCAG5BY,KAH4B,OAIlC0C,GAAQG,KAAK,UAJqB,OAMtCR,EAASlD,EAAKG,KAAKC,SANmB,uBAQtCgH,GAAeD,GACfjE,EAAS,IACTK,GAAQG,KAAK,QAVyB,4CAA9C,uDAcAsB,GAAW,IAQP,UACI,eAAC4C,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsL,GAAUnI,aAAcuH,EAAcxK,WAAW,EAAME,SAAUpB,EAASiB,UAAU,OAEvH,eAACN,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,WAAWC,KAAM,EAAGrD,IAAK4C,GAASO,aAAcV,EAAarC,SAAUpB,EAASiB,UAAU,OAE/G,eAACN,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,uBACA,eAACH,EAAA,EAAK8H,MAAN,CAAYsE,QAAM,EAACjO,KAAK,QAAxB,UACI,cAAC6B,EAAA,EAAK8H,MAAMuE,MAAZ,CAAkBlO,KAAK,QAAQpD,KAAK,OAAOD,GAAG,OAAOuF,IAAKuL,GAAS5D,eAAgBiD,IACnF,cAACjL,EAAA,EAAK8H,MAAM3H,MAAZ,CAAkBmM,QAAQ,OAA1B,0BAEJ,eAACtM,EAAA,EAAK8H,MAAN,CAAYsE,QAAM,EAACjO,KAAK,QAAxB,UACI,cAAC6B,EAAA,EAAK8H,MAAMuE,MAAZ,CAAkBlO,KAAK,QAAQpD,KAAK,OAAOD,GAAG,OAAOkN,eAAgBmD,IACrE,cAACnL,EAAA,EAAK8H,MAAM3H,MAAZ,CAAkBmM,QAAQ,OAA1B,6BAGR,eAACtM,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,2BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,SAASkC,IAAKwL,GAAQrI,aAAc+H,SAG/D,cAACpJ,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,2BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,SAASkC,IAAKyL,GAAQtI,aAAciI,gBAKvE,cAACtJ,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,0BACA,qBAAKrF,GAAG,SAAR,SACI,cAAC,KAAD,CAAYyR,QAlIxB,CACZC,QAAS,CACP,CAAC,CAAE,KAAQ,IAAM,CAAE,KAAQ,KAC3B,CAAE,OAAQ,SAAU,YAAa,UACjC,CAAC,CAAE,MAAS,IAAM,CAAE,WAAc,KAClC,CAAC,CAAE,OAAU,SAAW,CAAE,OAAU,QACpC,CAAC,CAAE,OAAU,KAAO,CAAE,OAAU,KAAO,aAAc,cACrD,CAAC,CAAE,KAAQ,WAAa,CAAE,KAAQ,UAAW,CAAE,OAAU,MAAQ,CAAE,OAAU,OAC7E,CAAE,YAAa,CAAE,MAAS,KAC1B,CAAE,OAAQ,QAAS,QAAS,WAC5B,CAAE,WAwHkDnM,IAAK0L,GAAgB5P,MAAOkP,cAK1E,cAAC7K,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,OAAO6D,SAAUpB,EAAjD,qBACGA,GAAW,cAAC,IAAD,CAAMjC,GAAG,OAAOR,UAAU,iBAAiB6D,SAAUpB,EAArD,0BCjKf,SAASqB,GAAKhE,GAAQ,IAG7BwJ,EAGAxJ,EAHAwJ,YACAuG,EAEA/P,EAFA+P,QACAC,EACAhQ,EADAgQ,aAGEC,EAAYzG,EAAYyG,UACxB9O,EAAUC,cAQhB,OACI,mCACI,cAAC+C,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAiB6L,EAAU5R,KAA3B,KAAmC4R,EAAU3R,MAA7C,IAE6B,eAArB2R,EAAUpS,QACV,cAACwG,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASyL,EAAU7R,GAAIiN,WAAU7B,EAAYpL,GAAI0N,cAAY,cAAc7J,QAAS+N,EAA1K,4BAGqB,gBAArBC,EAAUpS,QACV,cAACwG,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASyL,EAAU7R,GAAIiN,WAAU7B,EAAYpL,GAAI0N,cAAY,YAAY7J,QAAS+N,EAAxK,uBAGqB,cAArBC,EAAUpS,QACV,qCACI,cAACwG,EAAA,EAAD,CAAOhB,QAAQ,SAASnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASyL,EAAU7R,GAAI0N,cAAY,SAAST,WAAU7B,EAAYpL,GAAI6D,QAAS+N,EAApK,oBACA,cAAC3L,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASyL,EAAU7R,GAAI0N,cAAY,SAAST,WAAU7B,EAAYpL,GAAI6D,QAAS+N,EAArK,uBAGR,cAAC3L,EAAA,EAAD,CAAOhB,QAAQ,UAAUlD,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASyL,EAAU7R,GAAIiN,WAAU7B,EAAYpL,GAAI6D,QAzBtI,SAAsBY,GAClB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GACtB8R,EAAgBrN,EAAE4B,OAAOC,QAAQT,IACvC9C,EAAQG,KAAR,4BAAkClD,EAAlC,iBAA6C2R,EAA7C,gBAA4DG,KAsBhD,2BCpCL,SAASC,GAAUnQ,GAAQ,IAC9BoQ,EAAepQ,EAAfoQ,WAER,OACI,mCACI,cAAC9M,EAAA,EAAD,CAAMpD,UAAU,OAAhB,SACI,eAACsF,EAAA,EAAD,WACA,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOhC,MAAO2Q,EAAW9C,MAAOvJ,UAAU,OAEjE,eAACT,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,WAAWC,KAAM,EAAGvH,MAAO2Q,EAAW1J,KAAM3C,UAAU,OAE3E,eAACT,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,uBACA,eAACH,EAAA,EAAK8H,MAAN,CAAYsE,QAAM,EAACjO,KAAK,QAAxB,UACI,cAAC6B,EAAA,EAAK8H,MAAMuE,MAAZ,CAAkBlO,KAAK,QAAQpD,KAAK,OAAOD,GAAG,OAAOoM,QAA6B,cAApB4F,EAAW3O,KAAsBsC,UAAU,IACzG,cAACT,EAAA,EAAK8H,MAAM3H,MAAZ,CAAkBmM,QAAQ,OAA1B,0BAEJ,eAACtM,EAAA,EAAK8H,MAAN,CAAYsE,QAAM,EAACjO,KAAK,QAAxB,UACI,cAAC6B,EAAA,EAAK8H,MAAMuE,MAAZ,CAAkBlO,KAAK,QAAQpD,KAAK,OAAOD,GAAG,OAAOoM,QAA6B,cAApB4F,EAAW3O,KAAsBsC,UAAU,IACzG,cAACT,EAAA,EAAK8H,MAAM3H,MAAZ,CAAkBmM,QAAQ,OAA1B,6BAGR,eAACtM,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,2BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,SAAShC,MAAO2Q,EAAWd,QAASvL,UAAU,SAGzE,cAAC0B,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,2BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,SAAShC,MAAO2Q,EAAWb,QAASxL,UAAU,eAKjF,cAAC0B,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,0BACA,qBAAKrF,GAAG,SAAR,SACI,cAAC,IAAD,CAAeoB,SAAW4Q,EAAWtC,YAAcC,oBAAoB,kBC5CpF,SAASsC,KACpB,IAAMzL,EAAO,UAAMlH,kDAAN,6BACL4S,EAAUrK,cAAVqK,MAF8B,EAGZ1P,mBAAS,IAHG,mBAGxBE,GAHwB,aAIRF,oBAAS,GAJD,mBAItBgC,GAJsB,aAKFhC,mBAAS,IALP,mBAK/BwP,EAL+B,KAKnBG,EALmB,OAMQ3P,mBAAS,IANjB,mBAM/B4P,EAN+B,KAMdC,EANc,KAOhCtP,EAAUC,cAPsB,EAQPhE,IAAvBK,EAR8B,EAQ9BA,WAAYgB,EARkB,EAQlBA,OA+BpB,SAASuR,EAAanN,GAClB,GAAGyC,OAAOC,QAAP,qDAAqE,CACpE,IAAM1H,EAASgF,EAAE4B,OAAOC,QAAQ7G,OAC1BqS,EAAgBrN,EAAE4B,OAAOC,QAAQT,IAEvCrB,GAAW,GACX9B,EAAS,IACTrD,EAAW,GAAD,OAAImH,EAAJ,YAAesL,GAAiB,CAAErS,OAAQA,IAAU,EAAM,OAAOF,KAA3E,uCAAgF,WAAMC,GAAN,SAAAyD,EAAA,yDACzD,MAAhBzD,EAAKC,OADoE,mBAErD,MAAhBD,EAAKC,OAFgE,gCAG9DY,IAH8D,OAIpE0C,EAAQG,KAAK,UAJuD,OAMxER,EAASlD,EAAKG,KAAKC,SANqD,uBAQxE8C,EAAS,IACTwE,OAAOmE,SAASC,SATwD,4CAAhF,uDAYA9G,GAAW,IAQnB,OAJApB,qBAAU,YApDV,WACIV,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAQ,CACVA,MAAM,qDAAD,OAC0B0R,EAD1B,qJAKWA,EALX,2EAST7S,EAAWC,sDAA+CkB,GAAO,EAAM,QAAQjB,KAA/E,uCAAoF,WAAMC,GAAN,SAAAyD,EAAA,yDAC7D,MAAhBzD,EAAKC,OADwE,mBAEzD,MAAhBD,EAAKC,OAFoE,gCAGlEY,IAHkE,OAIxE0C,EAAQG,KAAK,UAJ2D,OAM5ER,EAASlD,EAAKG,KAAKC,SANyD,uBAQ5EuS,EAAc3S,EAAKG,KAAKH,KAAKsP,KAC7BuD,EAAmB7S,EAAKG,KAAKH,KAAK4S,iBAClC1P,EAAS,IAVmE,4CAApF,uDAaA8B,GAAW,GA2BX8N,KACD,IAGC,qCACI,oBAAIxQ,UAAU,OAAd,6BACA,qBAAIA,UAAU,eAAe9B,GAAG,QAAQG,KAAK,UAA7C,UACI,oBAAI2B,UAAU,WAAW3B,KAAK,eAA9B,SACI,mBAAG2B,UAAU,kBAAkB9B,GAAG,mBAAmBsD,cAAY,MAAMjB,KAAK,gBAAgBlC,KAAK,MAAMqD,gBAAc,eAAe+O,gBAAc,OAAlJ,4BAEJ,oBAAIzQ,UAAU,WAAW3B,KAAK,eAA9B,SACI,mBAAG2B,UAAU,WAAW9B,GAAG,iBAAiBsD,cAAY,MAAMjB,KAAK,cAAclC,KAAK,MAAMqD,gBAAc,aAAa+O,gBAAc,QAArI,6BAGR,sBAAKzQ,UAAU,cAAc9B,GAAG,eAAhC,UACI,qBAAK8B,UAAU,4BAA4B9B,GAAG,eAAeG,KAAK,WAAWyD,kBAAgB,mBAA7F,SAEQwO,EAAgB3K,OAAS,EACzB,cAAC7C,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAU5F,UAAU,OAA1C,SAEQsQ,EAAgBzK,KAAI,SAAAyD,GAChB,OAAO,cAAC,GAAD,CAA2BA,YAAaA,EAAauG,QAASzK,OAAOmE,SAASkC,SAAUqE,aAAcA,GAA3FxG,EAAYpL,SAK1C,qBAAK8B,UAAU,mDAAf,SACI,+CAIZ,qBAAKA,UAAU,gBAAgB9B,GAAG,aAAaG,KAAK,WAAWyD,kBAAgB,iBAA/E,SACI,cAACmO,GAAD,CAAuBC,WAAYA,GAAnBE,WClGrB,SAAStM,GAAKhE,GAAQ,IAG7B4Q,EAEA5Q,EAFA4Q,SACA1M,EACAlE,EADAkE,aAEE/C,EAAUC,cANgB,EAORR,oBAAS,GAPD,mBAOzByG,EAPyB,KAOnBC,EAPmB,KAchC,OACI,mCACI,cAACnD,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAiBwM,EAASlK,KACtB,cAACrC,EAAA,EAAD,CAAOhB,QAAQ,SAASnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASoM,EAASxS,GAAIyS,aAAYD,EAASE,MAAO7O,QAASiC,EAAhJ,oBACA,cAACG,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASoM,EAASxS,GAAIyS,aAAYD,EAASE,MAAO7O,QAXxJ,SAAoBY,GAChB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GACtBkS,EAAQzN,EAAE4B,OAAOC,QAAQ4L,MAC/BnP,EAAQG,KAAR,eAAqBgP,EAArB,iBAAmClS,KAQvB,kBACA,cAACiG,EAAA,EAAD,CAAOhB,QAAQ,YAAYlD,MAAO,CAACmE,MAAO,SAA1C,SAAqDsM,EAASnP,OAC9D,uBACA,eAACqC,EAAA,EAAD,CAAQT,QAAQ,OAAOnD,UAAU,SAAS+B,QAAS,kBAAMqF,GAAQ,SAAAK,GAAQ,OAAKA,MAA9E,UAA2FN,EAAO,OAAS,OAA3G,cACA,cAACO,EAAA,EAAD,CAAUC,GAAIR,EAAd,SACI,6BAEQuJ,EAAS7R,QAAQ8G,OAAS,GAC1B+K,EAAS7R,QAAQgH,KAAI,SAAAgL,GACjB,OAAO,6BACC,mBAAG7Q,WAA6B,IAAjB6Q,EAAOtR,MAAiB,eAAiB,cAAxD,SAAwEsR,EAAOrK,uBC3B5G,SAAS/B,KACpB,IAAMC,EAAO,UAAMlH,kDAAN,aADe,EAEMkD,mBAAS,IAFf,mBAErBoQ,EAFqB,KAEVC,EAFU,OAGQrQ,oBAAS,GAHjB,mBAGrBmE,EAHqB,KAGTC,EAHS,OAIEpE,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKFhC,mBAAS,IALP,mBAKrBC,EALqB,KAKdC,EALc,OAMG1D,IAAvBK,EANoB,EAMpBA,WAAYgB,EANQ,EAMRA,OACdwG,EAAaxC,mBACbyO,EAAUzO,mBACVtB,EAAUC,cACRkP,EAAUrK,cAAVqK,MAVoB,SAYba,IAZa,2EAY5B,0CAAA9P,EAAA,sDAA4B8D,EAA5B,+BAAqC,GACjCrE,EAAS,IACT8B,GAAW,GACLhE,EAAQ,CACVA,MAAK,6CACWuG,EADX,kGAKT1H,EAAWC,sDAA+CkB,GAAO,EAAM,QAAQjB,KAA/E,uCAAoF,WAAMC,GAAN,SAAAyD,EAAA,yDAChFmF,QAAQC,IAAI7I,GACO,MAAhBA,EAAKC,OAFwE,mBAGzD,MAAhBD,EAAKC,OAHoE,gCAIlEY,IAJkE,OAKxE0C,EAAQG,KAAK,UAL2D,OAO5ER,EAASlD,EAAKG,KAAKC,SAPyD,uBAS5EiT,EAAarT,EAAKG,KAAKH,KAAKoT,WAC5BlQ,EAAS,IAVmE,4CAApF,uDAaA8B,GAAW,GAtBf,4CAZ4B,sBAqC5B,SAASyC,EAAaxC,GAClBA,EAAEC,iBACF,IAAIrB,EAAkC,KAA1ByP,EAAQnO,QAAQtD,MAAjB,kBAA4CyR,EAAQnO,QAAQtD,OAAS,GAEhF0R,EADU,qBAAiBlM,EAAWlC,QAAQtD,MAApC,qBAAsD6Q,EAAtD,aAAgE7O,EAAhE,MAId,SAASyC,EAAarB,GAElB,GADAA,EAAEC,iBACCwC,OAAOC,QAAQ,0CAA2C,CACzD,IAAMnH,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5BX,EAAW,GAAD,OAAImH,EAAJ,YAAexG,GAAM,IAAI,EAAM,UAAUT,KAAnD,uCAAwD,WAAMC,GAAN,SAAAyD,EAAA,yDACjC,MAAhBzD,EAAKC,OAD4C,mBAE7B,MAAhBD,EAAKC,OAFwC,gCAGtCY,IAHsC,OAI5C0C,EAAQG,KAAK,UAJ+B,OAMhDR,EAASlD,EAAKG,KAAKC,SAN6B,uBAQhDgH,GAAeD,GACfjE,EAAS,IATuC,4CAAxD,uDAYA8B,GAAW,IAQnB,OAJApB,qBAAU,WACN2P,MACD,CAACpM,IAGA,qCACI,mDACA,sBAAK7E,UAAU,OAAf,UACKW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACnC,cAAC,IAAD,CAAMH,GAAE,eAAW4P,EAAX,QAAyBpQ,UAAU,kBAA3C,8BACA,cAACoD,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAAU8B,EAAjC,SACI,eAAC/B,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACF,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsB,EAAYW,SAAUP,EAActB,SAAUpB,EAASgD,YAAY,wCAG1G,cAACF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,eAACF,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKuN,EAAStL,SAAUP,EAAlD,UACI,wBAAQ5F,MAAM,GAAd,sBACA,wBAAQA,MAAM,SAAd,2BACA,wBAAQA,MAAM,WAAd,oCAIZ,cAACgG,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACM,EAAA,EAAD,CAAQT,QAAQ,UAAU5B,KAAK,SAASsC,SAAUpB,EAAlD,6BAMRqO,EAAUnL,OAAS,EACnB,qCACI,qBAAI3F,UAAU,OAAd,iBAA0B8Q,EAAU,GAAG9D,IAAII,SAC3C,cAACtK,EAAA,EAAD,CAAM9C,UAAU,gBAAhB,SAEI8Q,EAAUjL,KAAI,SAAA6K,GACV,GAAGA,EAASxS,KAAOH,eAAekB,QAAQ,MACtC,OAAO,cAAC,GAAD,CAAwByR,SAAUA,EAAU1M,aAAcA,GAA/C0M,EAASxS,YAO3C,qBAAK8B,UAAU,mDAAf,SACI,mD,sBCpHb,SAASkR,GAAYpR,GAAQ,IAEpC5B,EAGA4B,EAHA5B,GACA2S,EAEA/Q,EAFA+Q,OACAM,EACArR,EADAqR,mBAGJ,OACI,qCACI,cAAC5L,EAAA,EAAD,CAAKC,GAAG,IAAIxF,UAAU,cAAcoR,aAAYlT,EAAhD,SACI,eAACkF,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,WAAWwK,IAAI,IAAI1N,WAAW,EAAMD,UAAU,EAAMkD,aAAciK,EAAOrK,YAGlG,cAACjB,EAAA,EAAD,CAAKC,GAAG,IAAIxF,UAAU,cAAcoR,aAAYlT,EAAhD,SACI,eAACkF,EAAA,EAAKE,MAAN,WACI,uBACA,eAACF,EAAA,EAAK8H,MAAN,CAAYsE,QAAM,EAACjO,KAAK,QAAxB,UACI,cAAC6B,EAAA,EAAK8H,MAAMuE,MAAZ,CAAkBlO,KAAK,WAAWpD,KAAK,QAAQD,GAAE,kBAAaA,GAAMkN,eAAgByF,EAAOtR,QAC3F,cAAC6D,EAAA,EAAK8H,MAAM3H,MAAZ,CAAkBmM,QAAO,kBAAaxR,GAAtC,+BAEJ,cAACiG,EAAA,EAAD,CAAOhB,QAAQ,SAASpB,QAASoP,EAAoBlR,MAAO,CAACoE,OAAQ,WAAY+M,aAAYlT,EAA7F,4BClBL,SAAS4H,KACpB,IAAIpB,EAAU,sCACV9F,EAAS,OAFe,EAGAmH,cAApBxE,EAHoB,EAGpBA,KAAMrD,EAHc,EAGdA,GAAIkS,EAHU,EAGVA,MAHU,EAIE1P,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKQhC,oBAAS,GALjB,mBAKrBmE,EALqB,KAKTC,EALS,OAMFpE,mBAAS,IANP,mBAMrBC,EANqB,KAMdC,EANc,OAOEF,mBAAS,IAPX,mBAOrB7B,EAPqB,KAOZyS,EAPY,OAQU5Q,mBAAS,IARnB,mBAQrBwF,EARqB,KAQRC,EARQ,OASczF,qBATd,mBASrB6Q,EATqB,KASNC,EATM,OAUkB9Q,qBAVlB,mBAUrB+Q,EAVqB,KAUJC,EAVI,OAWYhR,qBAXZ,mBAWrBiR,EAXqB,KAWPC,EAXO,KAYtBvL,EAAU9D,mBACVsP,EAAYtP,mBACZuP,EAAWvP,mBACXtB,GAAUC,cAfY,GAgBGhE,IAAvBK,GAhBoB,GAgBpBA,WAAYgB,GAhBQ,GAgBRA,OAhBQ,SAqGb4S,GArGa,iFAqG5B,WAAkCxO,GAAlC,eAAAxB,EAAA,sDACU8J,EAAQtI,EAAE4B,OAAOC,QAAQyG,MAC/B8G,KAAM1H,QAAQF,SAASC,iBAAT,sCAAyDa,EAAzD,QAAqE,SAAC+G,GAChFA,EAAKC,YACN,SAAUC,GACNA,GAAKtR,EAASsR,EAAIpU,SACrBwT,GAAW,SAAAa,GAAW,OAAIA,EAAY7K,QAAO,SAAC8K,EAAKC,GAAN,OAAcA,GAAOpH,WAN1E,4CArG4B,sBA+G5B,OA7FA3J,qBAAU,WACN,GAAY,SAATC,EAAiB,CAChBX,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAQ,CACVA,MAAK,0DACoBR,EADpB,0GAMTX,GAAWC,sDAA+CkB,GAAO,EAAM,QAAQjB,KAA/E,uCAAoF,WAAMC,GAAN,SAAAyD,EAAA,yDAC7D,MAAhBzD,EAAKC,OADwE,mBAEzD,MAAhBD,EAAKC,OAFoE,gCAGlEY,KAHkE,OAIxE0C,GAAQG,KAAK,UAJ2D,OAM5ER,EAASlD,EAAKG,KAAKC,SANyD,uBAQ5E8C,EAAS,IACTgR,EAAgBlU,EAAKG,KAAKH,KAAKgT,SAAS4B,QACxCnM,EAAezI,EAAKG,KAAKH,KAAKgT,SAASlK,MACvCgL,EAAkD,WAAjC9T,EAAKG,KAAKH,KAAKgT,SAASnP,MACzCmQ,EAAoD,aAAjChU,EAAKG,KAAKH,KAAKgT,SAASnP,MAC3C+P,EAAW5T,EAAKG,KAAKH,KAAKgT,SAAS7R,SAbyC,4CAApF,uDAgBA6D,GAAW,MAEhB,IAiEC,qCACI,+BAAMnB,EAAKkF,OAAO,GAAGC,cAAgBnF,EAAKoF,MAAM,GAAhD,wBACEhG,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,cAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAlE/B,SAAsBV,GAClBA,EAAEC,iBACFF,GAAW,GACX9B,EAAS,IAET,IAAM2R,EAAeV,EAAUhP,QAAQyH,QAAU,SAAW,WACxDkI,EAAa,GACjBT,KAAM1H,QAAQxL,GAAS,SAACgS,GACpB,IAAM5F,EAAQpM,EAAQ4T,QAAQ5B,GACxBrK,EAAO2D,SAASuI,cAAT,+CAA+DzH,EAA/D,MAAyE0H,WAAW,GAAGA,WAAW,GAAGpT,MAC5GqT,EAAYzI,SAASuI,cAAT,+CAA+DzH,EAA/D,MAAyE0H,WAAW,GAAGA,WAAW,GAAGA,WAAW,GAAGrI,QAErIkI,EAAWpR,KAAK,CAAEoF,KAAMA,EAAMjH,MAAOqT,OAGzC,IAAMlU,EAAQ,CACVkS,MAAOR,EACP7O,KAAMgR,EACN/L,KAAMH,EAAQxD,QAAQtD,MACtB+S,OAAQR,EAASjP,QAAQtD,MACzBsT,SAAU9U,eAAekB,QAAQ,MACjC6T,SAAU/U,eAAekB,QAAQ,MACjCJ,QAAS2T,GAGD,SAATjR,IACCmD,EAAO,UAAMA,GAAN,OAAgBxG,GACvBU,EAAS,OAGbrB,GAAWmH,EAAShG,GAAO,EAAME,GAAQnB,KAAzC,uCAA8C,WAAMC,GAAN,SAAAyD,EAAA,yDACvB,MAAhBzD,EAAKC,OADkC,mBAEnB,MAAhBD,EAAKC,OAF8B,gCAG5BY,KAH4B,OAIlC0C,GAAQG,KAAK,UAJqB,OAMtCR,EAASlD,EAAKG,KAAKC,SANmB,uBAQtCgH,GAAeD,GACfjE,EAAS,IACTK,GAAQG,KAAR,oBAA0BgP,IAVY,4CAA9C,uDAcA1N,GAAW,IAsBP,SACI,eAAC6C,EAAA,EAAD,CAAKC,GAAG,KAAR,UACI,cAACF,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,oBAAIxF,UAAU,OAAd,sBACA,eAACoD,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,WAAWwK,IAAI,IAAI5N,IAAK4C,EAASO,aAAcV,EAAavC,WAAW,EAAME,SAAUpB,EAASiB,UAAU,OAE/H,eAACN,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,uBACA,eAACH,EAAA,EAAK8H,MAAN,CAAYsE,QAAM,EAACjO,KAAK,QAAxB,UACI,cAAC6B,EAAA,EAAK8H,MAAMuE,MAAZ,CAAkBlO,KAAK,QAAQpD,KAAK,OAAOD,GAAG,SAASuF,IAAKoO,EAAWzG,eAAgBmG,EAAe1N,SAAUpB,IAChH,cAACW,EAAA,EAAK8H,MAAM3H,MAAZ,CAAkBmM,QAAQ,SAA1B,uBAEJ,eAACtM,EAAA,EAAK8H,MAAN,CAAYsE,QAAM,EAACjO,KAAK,QAAxB,UACI,cAAC6B,EAAA,EAAK8H,MAAMuE,MAAZ,CAAkBlO,KAAK,QAAQpD,KAAK,OAAOD,GAAG,WAAWkN,eAAgBqG,EAAiB5N,SAAUpB,IACpG,cAACW,EAAA,EAAK8H,MAAM3H,MAAZ,CAAkBmM,QAAQ,WAA1B,8BAIZ,cAACnK,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,SAASkC,IAAKqO,EAAUiB,IAAI,IAAIC,IAAI,MAAMpM,aAAc+K,EAAc9N,SAAUpB,EAASiB,UAAU,YAIlI,uBACA,oBAAI1D,UAAU,OAAd,qBACA,cAAC4D,EAAA,EAAD,CAAQ5D,UAAU,OAAOmD,QAAQ,OAAO5B,KAAK,SAASQ,QApD9E,WACI,IAAMkR,EAAY,CAAEzM,KAAM,GAAIjH,OAAO,GACrC+R,GAAW,SAAAa,GAAW,6BAAQA,GAAR,CAAqBc,QAkDvB,wBACA,cAAC7P,EAAA,EAAKkC,IAAN,CAAUpH,GAAG,cAAb,SAEQW,EAAQgH,KAAI,SAACgL,EAAQ5F,GACjB,OAAO,cAAC,GAAD,CAAwB/M,GAAI+M,EAAOkG,mBAAoBA,GAAoBN,OAAQA,GAAlE5F,aAM5C,cAACrH,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,OAAO6D,SAAUpB,EAAjD,qBACGA,GAAW,cAAC,IAAD,CAAMjC,GAAE,oBAAe4P,GAASpQ,UAAU,iBAAiB6D,SAAUpB,EAArE,4BClKnB,SAASqB,GAAKhE,GAAQ,IAG7BiQ,EAGAjQ,EAHAiQ,UAIE9O,GADFnB,EAFAkE,aAEAlE,EADAyL,mBAEYrK,eAOhB,OACI,mCACI,cAAC+C,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAiB6L,EAAU5R,KAA3B,KAAmC4R,EAAU3R,MAA7C,IAEI,cAAC+F,EAAA,EAAD,CAAOhB,QAAQ,UAAUlD,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASyL,EAAU7R,GAAI6D,QAV5G,SAAsBY,GAClB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,4BAAkClD,KAQtB,oBACA,cAACiG,EAAA,EAAD,CAAOhB,QAAQ,YAAYnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,SAAUE,UAASyL,EAAU7R,GAAxF,SAA6F6R,EAAUpS,gBClB5G,SAAS8G,KACpB,IAAMC,EAAU,sCADY,EAEQhE,mBAAS,IAFjB,mBAErBwS,EAFqB,KAETC,EAFS,OAGQzS,oBAAS,GAHjB,mBAGrBmE,EAHqB,KAGTC,EAHS,OAIEpE,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKFhC,mBAAS,IALP,mBAKrBC,EALqB,KAKdC,EALc,OAMG1D,IAAvBK,EANoB,EAMpBA,WAAYgB,EANQ,EAMRA,OACdwG,EAAaxC,mBACbwJ,EAAYxJ,mBACZtB,EAAUC,cATY,SAWbkS,IAXa,2EAW5B,0CAAAjS,EAAA,sDAA6B8D,EAA7B,+BAAsC,GAClCrE,EAAS,IACT8B,GAAW,GACLhE,EAAQ,CACVA,MAAK,8CACYuG,EADZ,gDAKT1H,EAAWC,sDAA+CkB,GAAO,EAAM,QAAQjB,KAA/E,uCAAoF,WAAMC,GAAN,SAAAyD,EAAA,yDAC7D,MAAhBzD,EAAKC,OADwE,mBAEzD,MAAhBD,EAAKC,OAFoE,gCAGlEY,IAHkE,OAIxE0C,EAAQG,KAAK,UAJ2D,OAM5ER,EAASlD,EAAKG,KAAKC,SANyD,uBAQ5EqV,EAAczV,EAAKG,KAAKH,KAAKwV,YAC7BtS,EAAS,IATmE,4CAApF,uDAYA8B,GAAW,GArBf,4CAX4B,sBAmC5B,SAASyC,EAAaxC,GAClBA,EAAEC,iBACF,IAAIsJ,EAAsC,KAA5BH,EAAUlJ,QAAQtD,MAAnB,oBAAgDwM,EAAUlJ,QAAQtD,OAAS,GAExF6T,EADU,oBAAgBrO,EAAWlC,QAAQtD,MAAnC,YAA4C2M,EAA5C,MAId,SAASlI,EAAarB,GAElB,GADAA,EAAEC,iBACCwC,OAAOC,QAAQ,0CAA2C,CACzD,IAAMnH,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5BX,EAAW,GAAD,OAAImH,EAAJ,YAAexG,GAAM,IAAI,EAAM,UAAUT,KAAnD,uCAAwD,WAAMC,GAAN,SAAAyD,EAAA,yDACjC,MAAhBzD,EAAKC,OAD4C,mBAE7B,MAAhBD,EAAKC,OAFwC,gCAGtCY,IAHsC,OAI5C0C,EAAQG,KAAK,UAJ+B,OAMhDR,EAASlD,EAAKG,KAAKC,SAN6B,uBAQhDgH,GAAeD,GACfjE,EAAS,IATuC,4CAAxD,uDAYA8B,GAAW,IAInB,SAAS6I,EAAmB5I,GACxBA,EAAEC,iBACF,IACIuJ,EADuC,SAA5BxJ,EAAE4B,OAAOC,QAAQ7G,OACV,QAAU,WAChC,GAAGyH,OAAOC,QAAP,+BAAuC8G,EAAvC,qBAAkE,CACjEzJ,GAAW,GACX9B,EAAS,IACT,IAAM1C,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5BX,EAAW,GAAD,OAAImH,EAAJ,yBAA4BxG,GAAM,IAAI,EAAM,OAAOT,KAA7D,uCAAkE,WAAMC,GAAN,SAAAyD,EAAA,yDAC3C,MAAhBzD,EAAKC,OADsD,mBAEvC,MAAhBD,EAAKC,OAFkD,gCAGhDY,IAHgD,OAItD0C,EAAQG,KAAK,UAJyC,OAM1DR,EAASlD,EAAKG,KAAKC,SANuC,uBAQ1DgH,GAAeD,GACfjE,EAAS,IATiD,4CAAlE,uDAYA8B,GAAW,IAQnB,OAJApB,qBAAU,WACN8R,MACD,CAACvO,IAGA,qCACI,2CACA,sBAAK7E,UAAU,OAAf,UACKW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACnC,cAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAAU8B,EAAjC,SACI,eAAC/B,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACF,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsB,EAAYW,SAAUP,EAActB,SAAUpB,EAASgD,YAAY,iDAG1G,cAACF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACM,EAAA,EAAD,CAAQT,QAAQ,UAAU5B,KAAK,SAASsC,SAAUpB,EAAlD,6BAMRyQ,EAAWvN,OAAS,EACpB,cAAC7C,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAU5F,UAAU,OAA1C,SAEQkT,EAAWrN,KAAI,SAAAkK,GACX,GAAGA,EAAU7R,KAAOH,eAAekB,QAAQ,MACvC,OAAO,cAAC,GAAD,CAAyB8Q,UAAWA,EAAW/L,aAAcA,EAAcuH,mBAAoBA,GAApFwE,EAAU7R,SAM5C,qBAAK8B,UAAU,mDAAf,SACI,mD,cC9Hb,SAASqT,GAAWvT,GAAQ,IAC/BwT,EAAmBxT,EAAnBwT,WAAYC,EAAOzT,EAAPyT,GAEpB,OACI,+BACI,+BAAKA,EAAK,EAAV,QACA,6BAAKD,EAAW5C,WAChB,6BAAK4C,EAAWE,SAChB,6BAAKF,EAAW/T,WCJb,SAASuG,KAAS,IAAD,EACPC,cAAbxE,EADoB,EACpBA,KAAMrD,EADc,EACdA,GADc,EAEFwC,mBAAS,IAFP,mBAEdE,GAFc,aAGEF,oBAAS,GAHX,mBAGrB+B,EAHqB,KAGZC,EAHY,OAIoBhC,mBAAS,IAJ7B,mBAIrB+S,EAJqB,KAIHC,EAJG,OAKQhT,mBAAS,IALjB,mBAKrB4S,EALqB,KAKTK,EALS,OAMEjT,mBAAS,IANX,mBAMrBmP,EANqB,KAMZ+D,EANY,KAOtB3S,EAAUC,cAPY,EAQGhE,IAAvBK,EARoB,EAQpBA,WAAYgB,EARQ,EAQRA,OAuFpB,OAXA+C,qBAAU,YA1EV,WACIV,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAQ,CACVA,MAAM,4CAAD,OACiBR,EADjB,6fAoBTX,EAAWC,sDAA+CkB,GAAO,EAAM,QAAQjB,KAA/E,uCAAoF,WAAMC,GAAN,SAAAyD,EAAA,yDAChFmF,QAAQC,IAAI7I,GACO,MAAhBA,EAAKC,OAFwE,mBAGzD,MAAhBD,EAAKC,OAHoE,gCAIlEY,IAJkE,OAKxE0C,EAAQG,KAAK,UAL2D,OAO5ER,EAASlD,EAAKG,KAAKC,SAPyD,uBAS5E8C,EAAS,IACT8S,EAAoBhW,EAAKG,KAAKH,KAAKqS,WAVyC,4CAApF,uDAcArN,GAAW,GAqCXmR,GACGzO,OAAOmE,SAAStE,SAnCvB,SAA+B6O,GAC3BlT,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAQ,CACVA,MAAM,mDAAD,OACwBoV,EADxB,mRAaTvW,EAAWC,sDAA+CkB,GAAO,EAAM,QAAQjB,KAA/E,uCAAoF,WAAMC,GAAN,SAAAyD,EAAA,yDAC7D,MAAhBzD,EAAKC,OADwE,mBAEzD,MAAhBD,EAAKC,OAFoE,gCAGlEY,IAHkE,OAIxE0C,EAAQG,KAAK,UAJ2D,OAM5ER,EAASlD,EAAKG,KAAKC,SANyD,uBAQ5E8C,EAAS,IACT+S,EAAcjW,EAAKG,KAAKH,KAAKqW,kBAT+C,4CAApF,uDAaArR,GAAW,GAMPsR,CAAsB5O,OAAOmE,SAAStE,OAAOyG,MAAM,KAAK,IACxDkI,EAAWxO,OAAOmE,SAAStE,OAAOyG,MAAM,KAAK,GAAGuI,UAAU,KAE1DL,EAAW,gBAEhB,IAIC,qCACI,+BACMrS,EAAKkF,OAAO,GAAGC,cAAgBnF,EAAKoF,MAAM,GADhD,aAGQ8M,EAAiB9V,QACjB,cAACwG,EAAA,EAAD,CAAOhB,QAAqC,aAA5BsQ,EAAiB9V,OAAwB,UAAwC,YAA5B8V,EAAiB9V,OAAuB,SAAW,YAAaqC,UAAU,OAA/I,SAAuJyT,EAAiB9V,YAGhL,qBAAIqC,UAAU,eAAe9B,GAAG,QAAQG,KAAK,UAA7C,UACI,oBAAI2B,UAAU,WAAW3B,KAAK,eAA9B,SACI,mBAAG2B,UAAU,kBAAkB9B,GAAG,mBAAmBsD,cAAY,MAAMjB,KAAK,gBAAgBlC,KAAK,MAAMqD,gBAAc,eAAe+O,gBAAc,OAAlJ,mCAEJ,oBAAIzQ,UAAU,WAAW3B,KAAK,eAA9B,SACI,mBAAG2B,UAAU,WAAW9B,GAAG,iBAAiBsD,cAAY,MAAMjB,KAAK,cAAclC,KAAK,MAAMqD,gBAAc,aAAa+O,gBAAc,QAArI,qCAGR,sBAAKzQ,UAAU,cAAc9B,GAAG,eAAhC,UACI,qBAAK8B,UAAU,4BAA4B9B,GAAG,eAAeG,KAAK,WAAWyD,kBAAgB,mBAA7F,SACI,eAACwD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAD,CAAMpD,UAAU,OAAhB,UACI,eAACoD,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,8BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOqF,aAAc6M,EAAiBS,eAAiBT,EAAiBS,eAAiB,GAAKvQ,WAAW,EAAME,UAAWpB,EAASiB,UAAU,OAEpK,eAACN,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOqF,aAAc6M,EAAiBtV,KAAOsV,EAAiBtV,KAAO,GAAK0F,UAAWpB,EAASiB,UAAU,OAE/H,eAACN,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,QAAQqF,aAAc6M,EAAiBrV,MAAQqV,EAAiBrV,MAAQ,GAAKyF,UAAWpB,EAASiB,UAAU,SAGtI,cAAC6B,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,0BACA,uBACA,eAACH,EAAA,EAAK8H,MAAN,CAAYsE,QAAM,EAACjO,KAAK,QAAxB,UACI,cAAC6B,EAAA,EAAK8H,MAAMuE,MAAZ,CAAkBlO,KAAK,QAAQpD,KAAK,OAAOD,GAAG,UAAUkN,eAAgBqI,EAAiBU,aAAgD,QAAjCV,EAAiBU,YAAwBtQ,UAAWpB,IAC5J,cAACW,EAAA,EAAK8H,MAAM3H,MAAZ,CAAkBmM,QAAQ,UAA1B,wBAEJ,eAACtM,EAAA,EAAK8H,MAAN,CAAYsE,QAAM,EAACjO,KAAK,QAAxB,UACI,cAAC6B,EAAA,EAAK8H,MAAMuE,MAAZ,CAAkBlO,KAAK,QAAQpD,KAAK,OAAOD,GAAG,YAAYkN,eAAgBqI,EAAiBU,aAAgD,QAAjCV,EAAiBU,YAAuBtQ,UAAWpB,IAC7J,cAACW,EAAA,EAAK8H,MAAM3H,MAAZ,CAAkBmM,QAAQ,YAA1B,kCAKhB,eAACtM,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,6BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOqF,aAAc6M,EAAiBW,aAAeX,EAAiBW,aAAe,GAAKvQ,UAAWpB,EAASiB,UAAU,SAGnJ,cAAC6B,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOqF,aAAc6M,EAAiBY,YAAcZ,EAAiBY,YAAc,GAAKxQ,UAAWpB,EAASiB,UAAU,YAIrJ,eAACN,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,+BACA,cAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,WAAWD,aAAc6M,EAAiBa,gBAAkBb,EAAiBa,gBAAkB,GAAIzQ,UAAWpB,EAASiB,UAAU,OAEtJ,eAACN,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOqF,aAAc6M,EAAiBc,oBAAsBd,EAAiBc,oBAAsB,GAAI1Q,UAAWpB,SAG7I,cAAC8C,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOqF,aAAc6M,EAAiBe,kBAAoBf,EAAiBe,kBAAoB,GAAI3Q,UAAWpB,SAGzI,cAAC8C,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOqF,aAAc6M,EAAiBgB,iBAAmBhB,EAAiBgB,iBAAmB,GAAI5Q,UAAWpB,iBAMnJ,eAAC8C,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,cAACkP,GAAA,EAAD,CAAOC,IAAI,oBAAoB3U,UAAU,UAAU4U,IAAI,QACvD,uBACA,oBAAGrU,KAAMkT,EAAiBoB,IAA8B,OAAxBpB,EAAiBoB,GAAcpB,EAAiBoB,GAAK,IAAMC,SAAUrB,EAAiBoB,IAA8B,OAAxBpB,EAAiBoB,GAAxC,aAA4DpB,EAAiBtV,MAAS,KAA3L,UACI,mBAAG6B,UAAU,6BAA6BmC,cAAY,SAD1D,QAC4E,sBAAMnC,UAAU,cAAhB,yCAKxF,qBAAKA,UAAU,gBAAgB9B,GAAG,aAAaG,KAAK,WAAWyD,kBAAgB,iBAA/E,SAEQwR,EAAW3N,OAAS,EACpB,wBAAO3F,UAAU,oBAAjB,UACI,gCACI,+BACI,oBAAIC,MAAO,CAAC2F,MAAO,OAAnB,iBACA,0CACA,wCACA,oBAAI3F,MAAO,CAAC2F,MAAO,OAAnB,wBAGR,gCAEQ0N,EAAWzN,KAAI,SAACkP,EAAQ9J,GACpB,OAAO,cAAC,GAAD,CAAkCqI,WAAYyB,EAAQxB,GAAItI,GAAnC8J,EAAO7W,SAIjD,gCACI,+BACI,oBAAI2M,QAAQ,IAAZ,SAAgB,mDAChB,6BAAI,iCAASyI,EAAW0B,QAAO,SAACC,EAAKF,GAAN,OAAiBE,EAAMF,EAAOxV,QAAO,eAKhF,qBAAKS,UAAU,mDAAf,SACI,kDAKhB,cAAC,IAAD,CAAMQ,GAAIqP,EAAS7P,UAAU,iBAAiB6D,UAAWpB,EAAzD,qBCvOG,SAASqB,GAAKhE,GAAQ,IAE7BoV,EAEApV,EAFAoV,SACAlR,EACAlE,EADAkE,aAEE/C,EAAUC,cAOhB,OACI,mCACI,cAAC+C,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAiBgR,EAAS/W,KACtB,cAACgG,EAAA,EAAD,CAAOhB,QAAQ,SAASnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS4Q,EAAShX,GAAI6D,QAASiC,EAApH,oBACA,cAACG,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS4Q,EAAShX,GAAI6D,QAV5H,SAAoBY,GAChB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,yBAA+BlD,KAQnB,yBCfL,SAASuG,KACpB,IAAMC,EAAO,UAAMlH,kDAAN,aACPuH,EAAaxC,mBAFS,EAGE7B,oBAAS,GAHX,mBAGrB+B,EAHqB,KAGZC,EAHY,OAIFhC,mBAAS,IAJP,mBAIrBC,EAJqB,KAIdC,EAJc,OAKMF,mBAAS,IALf,mBAKrByU,EALqB,KAKVC,EALU,OAMGlY,IAAvBK,EANoB,EAMpBA,WAAYgB,EANQ,EAMRA,OACd0C,EAAUC,cAEhB,SAASiE,EAAaxC,GAClBA,EAAEC,iBAGFyS,EADU,qBAAiBtQ,EAAWlC,QAAQtD,MAApC,OAId,SAASyE,EAAarB,GAIlB,GAHAA,EAAEC,iBACFF,GAAW,GACX9B,EAAS,IACNwE,OAAOC,QAAQ,0CAA2C,CACzD,IAAMnH,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5BX,EAAW,GAAD,OAAImH,EAAJ,YAAexG,GAAM,IAAI,EAAM,UAAUT,KAAnD,uCAAwD,WAAMC,GAAN,SAAAyD,EAAA,yDACjC,MAAhBzD,EAAKC,OAD4C,mBAE7B,MAAhBD,EAAKC,OAFwC,gCAGtCY,IAHsC,OAI5C0C,EAAQG,KAAK,UAJ+B,OAMhDR,EAASlD,EAAKG,KAAKC,SAN6B,uBAQhDsH,OAAOmE,SAASC,SAChB5I,EAAS,IATuC,4CAAxD,uDAYA8B,GAAW,QAEXA,GAAW,GAInB,SAAS2S,IAA0B,IAAdpQ,EAAa,uDAAJ,GAC1BvC,GAAW,GACX9B,EAAS,IACT,IAAMlC,EAAQ,CACVA,MAAK,4BAAwBuG,EAAxB,oBAET1H,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,IAH2D,OAIjE0C,EAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrEsX,EAAa1X,EAAKG,KAAKH,KAAKyX,WAC5BvU,EAAS,IAT4D,4CAA7E,uDAYA8B,GAAW,GAMf,OAHApB,qBAAU,WACN+T,MACD,IAEC,qCACI,0CACA,sBAAKrV,UAAU,OAAf,UACKW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACnC,cAAC,IAAD,CAAMH,GAAG,gBAAgBR,UAAU,kBAAnC,8BACA,cAACoD,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAAU8B,EAAjC,SACI,eAAC/B,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACF,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsB,EAAYW,SAAUP,EAActB,SAAUpB,EAASgD,YAAY,uBAG1G,cAACrC,EAAA,EAAKE,MAAN,UACI,cAACM,EAAA,EAAD,CAAQT,QAAQ,UAAU5B,KAAK,SAASsC,SAAUpB,EAAlD,2BAKJ0S,EAAUxP,OAAS,EACnB,cAAC7C,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAS5F,UAAU,OAAzC,SAEQmV,EAAUtP,KAAI,SAAAqP,GACV,OAAO,cAAC,GAAD,CAAwBA,SAAUA,EAAUlR,aAAcA,GAA/CkR,EAAShX,SAKvC,qBAAK8B,UAAU,mDAAf,SACI,mDC9Fb,SAAS8F,KACpB,IAAIpB,EAAO,UAAMlH,kDAAN,cACPoB,EAAS,OAFe,EAGPmH,cAAbxE,EAHoB,EAGpBA,KAAMrD,EAHc,EAGdA,GAHc,EAIEwC,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKQhC,oBAAS,GALjB,mBAKrBmE,EALqB,KAKTC,EALS,OAMFpE,mBAAS,IANP,mBAMrBC,EANqB,KAMdC,EANc,OAOUF,mBAAS,IAPnB,mBAOrBsF,EAPqB,KAORC,EAPQ,KAQtBG,EAAU7D,mBACVtB,EAAUC,cATY,EAUGhE,IAAvBK,EAVoB,EAUpBA,WAAYgB,EAVQ,EAURA,OA0DpB,OAxDA+C,qBAAU,WACN,GAAY,SAATC,EAAiB,CAChBX,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAQ,CACVA,MAAK,sDACgBR,EADhB,uCAKTX,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,IAH2D,OAIjE0C,EAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrEmI,EAAevI,EAAKG,KAAKH,KAAKwX,SAAS/W,MACvCyC,EAAS,IAT4D,4CAA7E,uDAYA8B,GAAW,MAEhB,IAiCC,qCACI,+BAAMnB,EAAKkF,OAAO,GAAGC,cAAgBnF,EAAKoF,MAAM,GAAhD,eACEhG,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,cAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAlC/B,SAAsBV,GAClBA,EAAEC,iBACFF,GAAW,GACX9B,EAAS,IAET,IAAMlC,EAAQ,CAAEP,KAAMiI,EAAQvD,QAAQtD,OAE1B,SAATgC,IACCmD,EAAO,UAAMA,GAAN,OAAgBxG,GACvBU,EAAS,OAGbrB,EAAWmH,EAAShG,GAAO,EAAME,GAAQnB,KAAzC,uCAA8C,WAAMC,GAAN,SAAAyD,EAAA,yDACvB,MAAhBzD,EAAKC,OADkC,mBAEnB,MAAhBD,EAAKC,OAF8B,gCAG5BY,IAH4B,OAIlC0C,EAAQG,KAAK,UAJqB,OAMtCR,EAASlD,EAAKG,KAAKC,SANmB,uBAQtCgH,GAAeD,GACfjE,EAAS,IACTK,EAAQG,KAAK,aAVyB,4CAA9C,uDAcAsB,GAAW,IAQP,SACI,eAAC6C,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAK2C,EAASQ,aAAcZ,EAAarC,WAAW,EAAME,SAAUpB,EAASiB,UAAU,OAErH,cAACE,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,OAAO6D,SAAUpB,EAAjD,qBACGA,GAAW,cAAC,IAAD,CAAMjC,GAAG,YAAYR,UAAU,iBAAiB6D,SAAUpB,EAA1D,4BChFnB,SAASqB,GAAKhE,GAAQ,IAE7BwV,EAEAxV,EAFAwV,WACAtR,EACAlE,EADAkE,aAEE/C,EAAUC,cAOhB,OACI,mCACI,cAAC+C,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAiBoR,EAAWnX,KACxB,cAACgG,EAAA,EAAD,CAAOhB,QAAQ,SAASnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASgR,EAAWpX,GAAI6D,QAASiC,EAAtH,oBACA,cAACG,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASgR,EAAWpX,GAAI6D,QAV9H,SAAoBY,GAChB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,2BAAiClD,KAQrB,yBCfL,SAASuG,KACpB,IAAMC,EAAO,UAAMlH,kDAAN,eACPuH,EAAaxC,mBAFS,EAGE7B,oBAAS,GAHX,mBAGrB+B,EAHqB,KAGZC,EAHY,OAIFhC,mBAAS,IAJP,mBAIrBC,EAJqB,KAIdC,EAJc,OAKUF,mBAAS,IALnB,mBAKrB6U,EALqB,KAKRC,EALQ,OAMGtY,IAAvBK,EANoB,EAMpBA,WAAYgB,EANQ,EAMRA,OACd0C,EAAUC,cAEhB,SAASiE,EAAaxC,GAClBA,EAAEC,iBAGF6S,EADU,qBAAiB1Q,EAAWlC,QAAQtD,MAApC,OAId,SAASyE,EAAarB,GAIlB,GAHAA,EAAEC,iBACFF,GAAW,GACX9B,EAAS,IACNwE,OAAOC,QAAQ,0CAA2C,CACzD,IAAMnH,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5BX,EAAW,GAAD,OAAImH,EAAJ,YAAexG,GAAM,IAAI,EAAM,UAAUT,KAAnD,uCAAwD,WAAMC,GAAN,SAAAyD,EAAA,yDACjC,MAAhBzD,EAAKC,OAD4C,mBAE7B,MAAhBD,EAAKC,OAFwC,gCAGtCY,IAHsC,OAI5C0C,EAAQG,KAAK,UAJ+B,OAMhDR,EAASlD,EAAKG,KAAKC,SAN6B,uBAQhDsH,OAAOmE,SAASC,SAChB5I,EAAS,IATuC,4CAAxD,uDAYA8B,GAAW,QAEXA,GAAW,GAInB,SAAS+S,IAA4B,IAAdxQ,EAAa,uDAAJ,GAC5BvC,GAAW,GACX9B,EAAS,IACT,IAAMlC,EAAQ,CACVA,MAAK,8BAA0BuG,EAA1B,oBAET1H,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,IAH2D,OAIjE0C,EAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrE0X,EAAe9X,EAAKG,KAAKH,KAAK6X,aAC9B3U,EAAS,IAT4D,4CAA7E,uDAYA8B,GAAW,GAMf,OAHApB,qBAAU,WACNmU,MACD,IAEC,qCACI,4CACA,sBAAKzV,UAAU,OAAf,UACKW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACnC,cAAC,IAAD,CAAMH,GAAG,kBAAkBR,UAAU,kBAArC,gCACA,cAACoD,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAAU8B,EAAjC,SACI,eAAC/B,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACF,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsB,EAAYW,SAAUP,EAActB,SAAUpB,EAASgD,YAAY,uBAG1G,cAACrC,EAAA,EAAKE,MAAN,UACI,cAACM,EAAA,EAAD,CAAQT,QAAQ,UAAU5B,KAAK,SAASsC,SAAUpB,EAAlD,2BAKJ8S,EAAY5P,OAAS,EACrB,cAAC7C,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAS5F,UAAU,OAAzC,SAEQuV,EAAY1P,KAAI,SAAAyP,GACZ,OAAO,cAAC,GAAD,CAA0BA,WAAYA,EAAYtR,aAAcA,GAArDsR,EAAWpX,SAKzC,qBAAK8B,UAAU,mDAAf,SACI,mDC9Fb,SAAS8F,KACpB,IAAIpB,EAAO,UAAMlH,kDAAN,gBACPoB,EAAS,OAFe,EAGPmH,cAAbxE,EAHoB,EAGpBA,KAAMrD,EAHc,EAGdA,GAHc,EAIEwC,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKQhC,oBAAS,GALjB,mBAKrBmE,EALqB,KAKTC,EALS,OAMFpE,mBAAS,IANP,mBAMrBC,EANqB,KAMdC,EANc,OAOUF,mBAAS,IAPnB,mBAOrBsF,EAPqB,KAORC,EAPQ,KAQtBG,EAAU7D,mBACVtB,EAAUC,cATY,EAUGhE,IAAvBK,EAVoB,EAUpBA,WAAYgB,EAVQ,EAURA,OA2DpB,OAzDA+C,qBAAU,WACN,GAAY,SAATC,EAAiB,CAChBX,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAQ,CACVA,MAAK,wDACkBR,EADlB,uCAKTX,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACzEmF,QAAQC,IAAI7I,GACO,MAAhBA,EAAKC,OAFiE,mBAGlD,MAAhBD,EAAKC,OAH6D,gCAI3DY,IAJ2D,OAKjE0C,EAAQG,KAAK,UALoD,OAOrER,EAASlD,EAAKG,KAAKC,SAPkD,uBASrEmI,EAAevI,EAAKG,KAAKH,KAAK4X,WAAWnX,MACzCyC,EAAS,IAV4D,4CAA7E,uDAaA8B,GAAW,MAEhB,IAiCC,qCACI,+BAAMnB,EAAKkF,OAAO,GAAGC,cAAgBnF,EAAKoF,MAAM,GAAhD,eACEhG,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,cAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAlC/B,SAAsBV,GAClBA,EAAEC,iBACFF,GAAW,GACX9B,EAAS,IAET,IAAMlC,EAAQ,CAAEP,KAAMiI,EAAQvD,QAAQtD,OAE1B,SAATgC,IACCmD,EAAO,UAAMA,GAAN,OAAgBxG,GACvBU,EAAS,OAGbrB,EAAWmH,EAAShG,GAAO,EAAME,GAAQnB,KAAzC,uCAA8C,WAAMC,GAAN,SAAAyD,EAAA,yDACvB,MAAhBzD,EAAKC,OADkC,mBAEnB,MAAhBD,EAAKC,OAF8B,gCAG5BY,IAH4B,OAIlC0C,EAAQG,KAAK,UAJqB,OAMtCR,EAASlD,EAAKG,KAAKC,SANmB,uBAQtCgH,GAAeD,GACfjE,EAAS,IACTK,EAAQG,KAAK,eAVyB,4CAA9C,uDAcAsB,GAAW,IAQP,SACI,eAAC6C,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAK2C,EAASQ,aAAcZ,EAAarC,WAAW,EAAME,SAAUpB,EAASiB,UAAU,OAErH,cAACE,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,OAAO6D,SAAUpB,EAAjD,qBACGA,GAAW,cAAC,IAAD,CAAMjC,GAAG,cAAcR,UAAU,iBAAiB6D,SAAUpB,EAA5D,4B,cChFnB,SAASiT,GAAT,GAA+C,IAAzBC,EAAwB,EAAxBA,KAAM1I,EAAkB,EAAlBA,YAAa/O,EAAK,EAALA,GAC9CwG,EAAO,oDAAgDxG,GACvD0X,EAAUrT,mBACVtB,EAAUC,cAHyC,EAI1BhE,IAAvBK,EAJiD,EAIjDA,WAAYgB,EAJqC,EAIrCA,OAiBpB,OACI,mCACI,eAACsX,GAAA,EAAD,CAAOC,KAAK,KAAKH,KAAMA,EAAMI,OAAQ9I,EAArC,UACI,cAAC4I,GAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,GAAA,EAAM1I,MAAP,8BAEJ,cAAC0I,GAAA,EAAM5S,KAAP,UACI,eAACG,EAAA,EAAD,CAAMC,SAtBtB,SAAsBV,GAClBA,EAAEC,iBACFrF,EAAWmH,EAAS,CAAEwR,WAAYN,EAAQ/S,QAAQtD,QAAS,EAAM,OAAO9B,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,IAH2D,OAIjE0C,EAAQG,KAAK,UAJoD,OAMrEC,MAAM3D,EAAKG,KAAKC,SANqD,sBAQrEsH,OAAOmE,SAASC,SARqD,2CAA7E,wDAoBY,UACI,eAACpG,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKmS,EAASlS,UAAU,OAEtD,cAACE,EAAA,EAAD,CAAQT,QAAQ,UAAU5B,KAAK,SAA/B,4BCjCT,SAASuC,GAAKhE,GAAQ,IAE7BqW,EAGArW,EAHAqW,SAEA5K,GACAzL,EAFAkE,aAEAlE,EADAyL,oBAJ4B,EAMR7K,oBAAS,GAND,mBAMzBiV,EANyB,KAMnBS,EANmB,OAOE1V,mBAAS,UAPX,mBAOzB2V,EAPyB,KAU1BpV,GAV0B,KAUhBC,eAYhB,OACI,qCACI,cAAC+C,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAiBiS,EAASjB,SAA1B,MAAuCiB,EAAShY,KAAhD,IAAsD,uCAAUgY,EAAS7X,WAAnB,OAClD,cAAC6F,EAAA,EAAD,CAAOhB,QAASgT,EAASxK,WAAa,YAAc,UAAY1L,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS6R,EAASjY,GAAI6D,QAASwJ,EAA3I,SAAgK4K,EAASxK,WAAa,UAAY,aAClM,cAACxH,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS6R,EAASjY,GAAI6D,QAV5H,SAAsBY,GAClB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,2BAAiClD,KAQrB,qBAEKiY,EAASD,YACV,cAAC/R,EAAA,EAAD,CAAOhB,QAAQ,SAASnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS6R,EAASjY,GAAI6D,QAtB5G,kBAAMqU,GAAQ,IAsBb,oBAEJ,cAACjS,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS6R,EAASjY,GAAI6D,QApB5H,SAAoBY,GAChB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,yBAA+BlD,KAkBnB,uBAGR,cAAC,GAAD,CAAOyX,KAAMA,EAAM1I,YA1BP,kBAAMmJ,GAAQ,IA0BmBlY,GAAIiY,EAASjY,GAAIqD,KAAM8U,OClCjE,SAAS5R,KACpB,IAAMC,EAAU,qCADY,EAEMhE,mBAAS,IAFf,mBAErB4V,EAFqB,KAEVC,EAFU,OAGM7V,mBAAS,IAHf,mBAGrByU,EAHqB,KAGVC,EAHU,OAIU1U,mBAAS,IAJnB,mBAIrB6U,EAJqB,KAIRC,EAJQ,OAKQ9U,oBAAS,GALjB,mBAKrBmE,EALqB,KAKTC,EALS,OAMEpE,oBAAS,GANX,mBAMrB+B,EANqB,KAMZC,EANY,OAOFhC,mBAAS,IAPP,mBAOrBC,EAPqB,KAOdC,EAPc,OAQG1D,IAAvBK,EARoB,EAQpBA,WAAYgB,EARQ,EAQRA,OACdwG,EAAaxC,mBACbiU,EAAcjU,mBACdkU,EAAgBlU,mBAChBtB,EAAUC,cAZY,SAcbwV,IAda,2EAc5B,0CAAAvV,EAAA,sDAA4B8D,EAA5B,+BAAqC,GACjCrE,EAAS,IACT8B,GAAW,GACLhE,EAAQ,CACVA,MAAK,6CACWuG,EADX,wMAOT1H,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,IAH2D,OAIjE0C,EAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrEsX,EAAa1X,EAAKG,KAAKH,KAAKyX,WAC5BK,EAAe9X,EAAKG,KAAKH,KAAK6X,aAC9BgB,EAAa7Y,EAAKG,KAAKH,KAAK4Y,WAC5B1V,EAAS,IAX4D,4CAA7E,uDAcA8B,GAAW,GAzBf,4CAd4B,sBA0C5B,SAASyC,EAAaxC,GAClBA,EAAEC,iBACF,IAAIsS,EAA0C,KAA9BsB,EAAY3T,QAAQtD,MAArB,uBAAqDiX,EAAY3T,QAAQtD,MAAzE,KAAmF,GAC9F+V,EAA8C,KAAhCmB,EAAc5T,QAAQtD,MAAvB,yBAAyDkX,EAAc5T,QAAQtD,MAA/E,KAAyF,GAG1GmX,EAFU,qBAAiB3R,EAAWlC,QAAQtD,MAApC,YAA6C2V,GAA7C,OAAwDI,EAAxD,MAKd,SAAStR,EAAarB,GAElB,GADAA,EAAEC,iBACCwC,OAAOC,QAAQ,0CAA2C,CACzD,IAAMnH,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5BX,EAAW,GAAD,OAAImH,EAAJ,YAAexG,GAAM,IAAI,EAAM,UAAUT,KAAnD,uCAAwD,WAAMC,GAAN,SAAAyD,EAAA,yDACjC,MAAhBzD,EAAKC,OAD4C,mBAE7B,MAAhBD,EAAKC,OAFwC,gCAGtCY,IAHsC,OAI5C0C,EAAQG,KAAK,UAJ+B,OAMhDR,EAASlD,EAAKG,KAAKC,SAN6B,uBAQhDgH,GAAeD,GACfjE,EAAS,IATuC,4CAAxD,uDAYA8B,GAAW,IAInB,SAAS6I,EAAmB5I,GACxBA,EAAEC,iBACF,IACIuJ,EADuC,SAA5BxJ,EAAE4B,OAAOC,QAAQ7G,OACV,QAAU,WAChC,GAAGyH,OAAOC,QAAP,+BAAuC8G,EAAvC,qBAAkE,CACjEzJ,GAAW,GACX9B,EAAS,IACT,IAAM1C,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5BX,EAAW,GAAD,OAAImH,EAAJ,yBAA4BxG,GAAM,IAAI,EAAM,OAAOT,KAA7D,uCAAkE,WAAMC,GAAN,SAAAyD,EAAA,yDAC3C,MAAhBzD,EAAKC,OADsD,mBAEvC,MAAhBD,EAAKC,OAFkD,gCAGhDY,IAHgD,OAItD0C,EAAQG,KAAK,UAJyC,OAM1DR,EAASlD,EAAKG,KAAKC,SANuC,uBAQ1DgH,GAAeD,GACfjE,EAAS,IATiD,4CAAlE,uDAYA8B,GAAW,IAQnB,OAJApB,qBAAU,WACNoV,MACD,CAAC7R,IAGA,qCACI,0CACA,sBAAK7E,UAAU,OAAf,UACKW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACnC,cAAC,IAAD,CAAMX,UAAU,kBAAkBQ,GAAG,gBAArC,8BACA,cAAC4C,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAAU8B,EAAjC,SACI,eAAC/B,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACF,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsB,EAAYW,SAAUP,EAActB,SAAUpB,EAASgD,YAAY,6CAG1G,cAACF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,eAACF,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAK+S,EAAa9Q,SAAUP,EAAtD,UACI,wBAAQ5F,MAAM,GAAd,0BAEI4V,EAAUtP,KAAI,SAAAqP,GACV,OAAO,wBAAQ3V,MAAO2V,EAAS/W,KAAxB,SAA+B+W,EAAS/W,iBAMnE,cAACoH,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,eAACF,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKgT,EAAe/Q,SAAUP,EAAxD,UACI,wBAAQ5F,MAAM,GAAd,4BAEIgW,EAAY1P,KAAI,SAAAyP,GACZ,OAAO,wBAAQ/V,MAAO+V,EAAWnX,KAA1B,SAAiCmX,EAAWnX,iBAMvE,cAACoH,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACM,EAAA,EAAD,CAAQT,QAAQ,UAAU5B,KAAK,SAASsC,SAAUpB,EAAlD,6BAMR6T,EAAU3Q,OAAS,EACnB,cAAC7C,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAU5F,UAAU,OAA1C,SAEQsW,EAAUzQ,KAAI,SAAAsQ,GACV,GAAGA,EAASjY,KAAOH,eAAekB,QAAQ,MACtC,OAAO,cAAC,GAAD,CAAwBkX,SAAUA,EAAUnS,aAAcA,EAAcuH,mBAAoBA,GAAjF4K,EAASjY,SAM3C,qBAAK8B,UAAU,mDAAf,SACI,mDC7Jb,SAAS8F,KACpB,IAAIpB,EAAO,UAAMlH,kDAAN,cACPoB,EAAS,OAFe,EAGPmH,cAAbxE,EAHoB,EAGpBA,KAAMrD,EAHc,EAGdA,GAHc,EAIEwC,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKFhC,mBAAS,IALP,mBAKrBC,EALqB,KAKdC,EALc,OAMMF,mBAAS,IANf,mBAMrByU,EANqB,KAMVC,EANU,OAOU1U,mBAAS,IAPnB,mBAOrB6U,EAPqB,KAORC,EAPQ,OAQF9U,mBAAS,IARP,mBAQrBmL,EARqB,KAQdC,EARc,OASkBpL,mBAAS,IAT3B,mBASrBiW,EATqB,KASJC,EATI,OAUkBlW,mBAAS,IAV3B,mBAUrBmW,EAVqB,KAUJC,EAVI,OAWsBpW,mBAAS,IAX/B,mBAWrBqW,EAXqB,KAWFC,EAXE,OAYctW,mBAAS,IAZvB,mBAYrBuW,EAZqB,KAYNC,GAZM,QAaUxW,mBAAS,IAbnB,qBAarByW,GAbqB,MAaRC,GAbQ,SAcGla,IAAvBK,GAdoB,GAcpBA,WAAYgB,GAdQ,GAcRA,OACd0C,GAAUC,cACVkF,GAAU7D,mBACV8U,GAAa9U,mBACb+U,GAAa/U,mBACbgV,GAAoBhV,mBACpBmK,GAAWnK,mBACXiV,GAAkBjV,mBAClBkV,GAAiBlV,mBACjBmV,GAAanV,mBACboV,GAAiBpV,mBACjBqV,GAAcrV,mBACdsV,GAActV,mBACduV,GAAWvV,mBACXwV,GAAiBxV,mBACjByV,GAAczV,mBACdwJ,GAAYxJ,mBACZ0V,GAAc1V,mBACdiU,GAAcjU,mBACdkU,GAAgBlU,mBAChB2V,GAAU3V,mBAlCY,8CAoC5B,sBAAApB,EAAA,sDACIP,EAAS,IACT8B,GAAW,GAQXnF,GAAWC,sDAPG,CACVkB,MAAK,8GAMiD,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,KAH2D,OAIjE0C,GAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrEsX,EAAa1X,EAAKG,KAAKH,KAAKyX,WAC5BK,EAAe9X,EAAKG,KAAKH,KAAK6X,aAC9B3U,EAAS,IAV4D,4CAA7E,uDAaA8B,GAAW,GAvBf,4CApC4B,+BA8DbuJ,KA9Da,8EA8D5B,0CAAA9K,EAAA,sDAAwB8D,EAAxB,+BAAiC,GAC7BrE,EAAS,IACT8B,GAAW,GACLhE,EAAQ,CACVA,MAAK,oDACkBuG,EADlB,oEAIT1H,GAAWC,sDAAuCkB,GAAO,EAAM,QAAQjB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACrD,MAAhBzD,EAAKC,OADgE,mBAEjD,MAAhBD,EAAKC,OAF4D,gCAG1DY,KAH0D,OAIhE0C,GAAQG,KAAK,UAJmD,OAMpER,EAASlD,EAAKG,KAAKC,SANiD,uBAQpEgO,EAASpO,EAAKG,KAAKH,KAAKya,kBACxBvX,EAAS,IAT2D,4CAA5E,uDAYA8B,EAAoB,WAATnB,GApBf,4CA9D4B,sBAiM5B,OARAD,qBAAU,YAzLkB,oCA0LxB8W,GACAnM,KACY,QAAT1K,GA5CP,WACIX,EAAS,IACT8B,GAAW,GAEX,IAAMhE,EAAQ,CACVA,MAAK,kDACgBR,EADhB,uRAKTX,GAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACzEmF,QAAQC,IAAI7I,GACO,MAAhBA,EAAKC,OAFiE,mBAGlD,MAAhBD,EAAKC,OAH6D,gCAI3DY,KAJ2D,OAKjE0C,GAAQG,KAAK,UALoD,OAOrER,EAASlD,EAAKG,KAAKC,SAPkD,uBASrE8Y,EAAmBlZ,EAAKG,KAAKH,KAAKyY,UAClCe,GAAiBxZ,EAAKG,KAAKH,KAAKyY,SAASxY,QACzCmZ,EAAmBpZ,EAAKG,KAAKH,KAAKyY,SAASjB,UAC3C8B,EAAqBtZ,EAAKG,KAAKH,KAAKyY,SAASb,YAC7C8B,GAAe1Z,EAAKG,KAAKH,KAAKyY,SAASkC,kBACvCpM,GAAS,iBAAD,OAAkBvO,EAAKG,KAAKH,KAAKyY,SAASjY,GAA1C,OACR0C,EAAS,IAf4D,4CAA7E,uDAkBA8B,GAAW,GAiBP4V,KAEL,IAGC,qCACI,+BAAM/W,EAAKkF,OAAO,GAAGC,cAAgBnF,EAAKoF,MAAM,GAAhD,eAEa,WAATpF,GACA,gCACI,cAAC4C,EAAA,EAAD,CAAOhB,QAAQ,UAAUlD,MAAO,CAAEoE,OAAQ,WAAYC,UAASqS,EAAgBzY,GAAI6D,QAxBnG,SAAwBY,GACpB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,GAAQG,KAAR,oBAA0BlD,KAsBd,sBACA,cAACiG,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOsE,UAASqS,EAAgBzY,GAAI+B,MAAO,CAAEoE,OAAQ,WAAYtC,QApBpH,SAAsBY,GAClB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,GAAQG,KAAR,kBAAwBlD,KAkBZ,oBACA,cAACiG,EAAA,EAAD,CAAOhB,QAAQ,SAASnD,UAAU,OAAOsE,UAASqS,EAAgBzY,GAAI+B,MAAO,CAAEoE,OAAQ,WAAYtC,QAAS,WAAQd,GAAQG,KAAK,cAAjI,kBACA,0BAGNT,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,cAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAzH/B,SAAsBV,GAClBA,EAAEC,iBACFhC,EAAS,IACT8B,GAAW,GAEX,IAAMyR,EAAckD,GAAWxU,QAAQyH,QAAU,UAAY,oBACzD5L,EAAQ,CACRwV,eAAgBqD,GAAkB1U,QAAQtD,MAC1CnB,MAAOsO,GAAS7J,QAAQtD,MACxBpB,KAAMiI,GAAQvD,QAAQtD,MACtB6U,aAAcoD,GAAgB3U,QAAQtD,MACtC8U,YAAaoD,GAAe5U,QAAQtD,MACpC4U,YAAaA,EACbe,SAAUsB,GAAY3T,QAAQtD,MAC9B+V,WAAYmB,GAAc5T,QAAQtD,MAClCgZ,YAAaR,GAAelV,QAAQtD,MACpCiZ,SAAUP,GAAYpV,QAAQtD,MAC9BkZ,SAAUT,GAAYnV,QAAQtD,MAC9B5B,OAAQoO,GAAUlJ,QAAQtD,MAC1B8L,KAAM6M,GAAQrV,QAAQtD,OAGM,KAA7BmY,GAAW7U,QAAQtD,QAAcb,EAAM4V,gBAAkBoD,GAAW7U,QAAQtD,OAC3C,KAAjCoY,GAAe9U,QAAQtD,QAAcb,EAAM6V,oBAAsBoD,GAAe9U,QAAQtD,OAC1D,KAA9BqY,GAAY/U,QAAQtD,QAAcb,EAAMga,iBAAmBd,GAAY/U,QAAQtD,OACjD,KAA9BsY,GAAYhV,QAAQtD,QAAcb,EAAM+V,iBAAmBoD,GAAYhV,QAAQtD,OACpD,KAA3BuY,GAASjV,QAAQtD,QAAcb,EAAMia,YAAcb,GAASjV,QAAQtD,OAE3D,SAATgC,IACCmD,EAAO,UAAMA,GAAN,OAAgBxG,GACvBU,EAAS,OAGbrB,GAAWmH,EAAShG,GAAO,EAAME,GAAQnB,KAAzC,uCAA8C,WAAMmb,GAAN,SAAAzX,EAAA,yDACrB,MAAlByX,EAAOjb,OADgC,mBAEjB,MAAlBib,EAAOjb,OAF4B,gCAG5BY,KAH4B,OAIlC0C,GAAQG,KAAK,UAJqB,OAMtCR,EAASgY,EAAO/a,KAAKC,SANiB,sBAQtCP,GAAW,GAAD,OAAIC,kDAAJ,iCAA8D0a,GAAQrV,QAAQtD,OAAS,CAAEjB,WAAYsa,EAAO/a,KAAKgb,MAAM,EAAM,OAAOpb,KAA9I,uCAAmJ,WAAMC,GAAN,SAAAyD,EAAA,yDAC5H,MAAhBzD,EAAKC,OADuI,mBAExH,MAAhBD,EAAKC,OAFmI,gCAGjIY,KAHiI,OAIvI0C,GAAQG,KAAK,UAJ0H,OAM3IR,EAASlD,EAAKG,KAAKC,SANwH,uBAQ3I8C,EAAS,IACTK,GAAQG,KAAK,aAT8H,4CAAnJ,uDARsC,2CAA9C,uDAuBAsB,GAAW,IAiEP,SACI,eAAC6C,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,eAACpC,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAK2C,GAASzC,WAAW,EAAME,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKpC,GAAiBhR,OAAS,EAAIgR,EAAgBxY,KAAO,GAAIuF,UAAU,SAGjL,cAAC6B,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,4BACA,eAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKyU,GAASrU,SAAUpB,EAASlD,MAAO4X,GAAazT,UAAU,EAAMgC,SAAU,SAAC/C,GAAD,OAAOyU,GAAezU,EAAE4B,OAAOhF,QAAxI,UACI,wBAAQA,MAAM,GAAGsN,QAAM,EAAvB,yBAEIhB,EAAMhG,KAAI,SAAAwF,GACN,OAAO,yBAAQ9L,MAAO8L,EAAKhO,SAApB,UAA+BgO,EAAKhO,SAApC,OAAkDgO,EAAKhN,KAAvD,qBAO/B,eAAC+E,EAAA,EAAKE,MAAN,CAAYuD,GAAIvB,IAAhB,UACI,cAAClC,EAAA,EAAKG,MAAN,CAAYyV,QAAM,EAACxT,GAAG,IAAtB,yBACA,uBACA,eAACpC,EAAA,EAAK8H,MAAN,CAAYsE,QAAM,EAACjO,KAAK,QAAQvB,UAAU,OAA1C,UACI,cAACoD,EAAA,EAAK8H,MAAMuE,MAAZ,CAAkBlO,KAAK,QAAQpD,KAAK,OAAOD,GAAG,UAAUuF,IAAK4T,GAAYxT,SAAUpB,EAAS2I,iBAAgB0N,OAAOC,KAAKpC,GAAiBhR,OAAS,IAAoC,YAAhCgR,EAAgBxC,cACtK,cAAC/Q,EAAA,EAAK8H,MAAM3H,MAAZ,CAAkBmM,QAAQ,UAA1B,wBAEJ,eAACtM,EAAA,EAAK8H,MAAN,CAAYsE,QAAM,EAACjO,KAAK,QAAxB,UACI,cAAC6B,EAAA,EAAK8H,MAAMuE,MAAZ,CAAkBlO,KAAK,QAAQpD,KAAK,OAAOD,GAAG,UAAUuF,IAAK6T,GAAYzT,SAAUpB,EAAS2I,eAAgB0N,OAAOC,KAAKpC,GAAiBhR,OAAS,GAAoC,sBAAhCgR,EAAgBxC,cACtK,cAAC/Q,EAAA,EAAK8H,MAAM3H,MAAZ,CAAkBmM,QAAQ,UAA1B,qCAGR,eAACtM,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,8BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAK8T,GAAmB1T,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKpC,GAAiBhR,OAAS,EAAIgR,EAAgBzC,eAAiB,GAAIxQ,UAAU,SAGpL,cAAC6B,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,QAAQkC,IAAKiJ,GAAU7I,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKpC,GAAiBhR,OAAS,EAAIgR,EAAgBvY,MAAQ,GAAIsF,UAAU,YAIvK,eAACN,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,6BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAK+T,GAAiB3T,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKpC,GAAiBhR,OAAS,EAAIgR,EAAgBvC,aAAe,GAAI1Q,UAAU,SAGhL,cAAC6B,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKgU,GAAgB5T,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKpC,GAAiBhR,OAAS,EAAIgR,EAAgBtC,YAAc,GAAI3Q,UAAU,YAIlL,eAACN,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,+BACA,cAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,WAAWpD,IAAKiU,GAAY7T,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKpC,GAAiBhR,OAAS,EAAIgR,EAAgBrC,gBAAkB,QAE9J,eAAClR,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,oCACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKkU,GAAgB9T,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKpC,GAAiBhR,OAAS,EAAIgR,EAAgBpC,oBAAsB,UAGxK,cAAChP,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,gCACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKmU,GAAa/T,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKpC,GAAiBhR,OAAS,EAAIgR,EAAgB+B,iBAAmB,UAGlK,cAACnT,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,gCACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKoU,GAAahU,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKpC,GAAiBhR,OAAS,EAAIgR,EAAgBlC,iBAAmB,aAItK,eAACrR,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,2BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKqU,GAAUjU,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKpC,GAAiBhR,OAAS,EAAIgR,EAAgBgC,YAAc,UAG1J,cAACpT,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,2BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsU,GAAgBlU,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKpC,GAAiBhR,OAAS,EAAIgR,EAAgB4B,YAAc,GAAI7U,UAAU,SAG9K,cAAC6B,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKuU,GAAanU,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKpC,GAAiBhR,OAAS,EAAIgR,EAAgB8B,SAAW,GAAI/U,UAAU,YAI5K,eAACN,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,gCACA,eAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKsI,GAAWlI,SAAUpB,EAASlD,MAAO0X,EAAevR,SAAU,SAAC/C,GAAD,OAAOuU,GAAiBvU,EAAE4B,OAAOhF,QAAQmE,UAAU,EAAhJ,UACI,wBAAQnE,MAAM,WAAd,sBACA,wBAAQA,MAAM,YAAd,+BAIZ,cAACgG,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKwU,GAAapU,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKpC,GAAiBhR,OAAS,EAAIgR,EAAgB6B,SAAW,GAAI9U,UAAU,YAI5K,eAACN,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,uBACA,eAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAK+S,GAAa3S,SAAUpB,EAASlD,MAAOsX,EAAiBnT,UAAU,EAAMgC,SAAU,SAAC/C,GAAD,OAAOmU,EAAmBnU,EAAE4B,OAAOhF,QAApJ,UACI,wBAAQA,MAAM,GAAGsN,QAAM,EAAvB,6BAEIsI,EAAUtP,KAAI,SAAAqP,GACV,OAAO,wBAAQ3V,MAAO2V,EAAS/W,KAAxB,SAA+B+W,EAAS/W,kBAMnE,cAACoH,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,yBACA,eAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKgT,GAAe5S,SAAUpB,EAASlD,MAAOwX,EAAmBrT,UAAU,EAAMgC,SAAU,SAAC/C,GAAD,OAAOqU,EAAqBrU,EAAE4B,OAAOhF,QAA1J,UACI,wBAAQA,MAAM,GAAGsN,QAAM,EAAvB,+BAEI0I,EAAY1P,KAAI,SAAAyP,GACZ,OAAO,wBAAQ/V,MAAO+V,EAAWnX,KAA1B,SAAiCmX,EAAWnX,qBAqBhE,WAAToD,GACE,cAACqC,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,OAAO6D,SAAUpB,EAAjD,qBAEDA,GAAW,cAAC,IAAD,CAAMjC,GAAG,YAAYR,UAAU,iBAAiB6D,SAAUpB,EAA1D,4BCxXnB,SAASqB,GAAKhE,GAAQ,IACzBmZ,EAA6BnZ,EAA7BmZ,SAAUC,EAAmBpZ,EAAnBoZ,eACZjY,EAAUC,cAYhB,OACI,mCACI,cAAC+C,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAgB,uCAAhB,IAA+B+U,EAASE,SAAxC,IAAkD,wCAAlD,IAAkEF,EAASG,UAEhD,cAAnBF,GACA,cAAC/U,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS2U,EAAS/a,GAAI6D,QAhBhI,SAAoBY,GAChB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,oBAA0B6X,EAAS9C,SAASjY,GAA5C,iBAAuDA,KAcvC,kBAEJ,cAACiG,EAAA,EAAD,CAAOhB,QAAQ,UAAUlD,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS2U,EAAS/a,GAAI6D,QAb3G,SAAoBY,GAChB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,oBAA0B6X,EAAS9C,SAASjY,GAA5C,iBAAuDA,KAW3C,yBCpBL,SAASuG,KAAS,IACrB4U,EAAetT,cAAfsT,WADoB,GAEf,UAAM7b,kDAAN,aACiBkD,oBAAS,IAHX,mBAGZgC,GAHY,aAIFhC,mBAAS,IAJP,mBAIrBC,EAJqB,KAIdC,EAJc,OAKMF,mBAAS,IALf,mBAKrB4Y,EALqB,KAKVC,EALU,OAMkB7Y,mBAAS,IAN3B,mBAMrBiW,EANqB,KAMJC,EANI,OAOG1Z,IAAvBK,EAPoB,EAOpBA,WAAYgB,EAPQ,EAORA,OACd0C,EAAUC,cAuDhB,OALAI,qBAAU,YAhDV,WACIoB,GAAW,GACX9B,EAAS,IACT,IAAMlC,EAAQ,CACVA,MAAK,0CAAsC2a,EAAtC,oFAET/S,QAAQC,IAAI7H,GACZnB,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACzEmF,QAAQC,IAAI7I,GACO,MAAhBA,EAAKC,OAFiE,mBAGlD,MAAhBD,EAAKC,OAH6D,gCAI3DY,IAJ2D,OAKjE0C,EAAQG,KAAK,UALoD,OAOrER,EAASlD,EAAKG,KAAKC,SAPkD,uBASrEyb,EAAa7b,EAAKG,KAAKH,KAAK8b,mBAC5B5Y,EAAS,IAV4D,4CAA7E,uDAaA8B,GAAW,GA6BX+W,GA1BJ,WACI7Y,EAAS,IACT8B,GAAW,GAEX,IAAMhE,EAAQ,CACVA,MAAK,kDACgB2a,EADhB,uDAKT9b,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,IAH2D,OAIjE0C,EAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrE8Y,EAAmBlZ,EAAKG,KAAKH,KAAKyY,UAClCvV,EAAS,IAT4D,4CAA7E,uDAYA8B,GAAW,GAKX4V,KACD,IAGC,qCACI,2CAAe3B,EAAgBxY,QAC/B,sBAAK6B,UAAU,OAAf,UACKW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IAEJ,cAA3BgW,EAAgBhZ,QAChB,cAAC,IAAD,CAAM6C,GAAE,oBAAe6Y,EAAf,QAAiCrZ,UAAU,kBAAnD,8BAEJ,cAAC,IAAD,CAAMQ,GAAE,2BAAsB6Y,GAAcrZ,UAAU,sBAAtD,kBAEIsZ,EAAU3T,OAAS,EACnB,cAAC7C,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAS5F,UAAU,OAAzC,SAEQsZ,EAAUzT,KAAI,SAAAoT,GACV,OAAO,cAAC,GAAD,CAAwBA,SAAUA,EAAUC,eAAgBvC,EAAgBhZ,QAAjEsb,EAAS/a,SAKvC,qBAAK8B,UAAU,mDAAf,SACI,mDCrFT,SAAS8F,KAAS,IAAD,EACKC,cAAzBxE,EADoB,EACpBA,KAAMrD,EADc,EACdA,GAAImb,EADU,EACVA,WACd3U,EAAO,UAAMlH,kDAAN,uBACPoB,EAAS,OAHe,EAIE8B,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKQhC,oBAAS,GALjB,mBAKrBmE,EALqB,KAKTC,EALS,OAMFpE,mBAAS,IANP,mBAMrBC,EANqB,KAMdC,EANc,OAOkBF,mBAAS,IAP3B,mBAOrBgZ,EAPqB,KAOJC,EAPI,OAQoBjZ,mBAAS,IAR7B,mBAQrBkZ,EARqB,KAQHC,EARG,KAUtBC,GADUvX,mBACAA,oBACVwX,EAAWxX,mBACXtB,EAAUC,cAZY,EAaGhE,IAAvBK,EAboB,EAapBA,WAAYgB,EAbQ,EAaRA,OA8DpB,OA5DA+C,qBAAU,WACN,GAAY,SAATC,EAAiB,CAChBX,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAQ,CACVA,MAAK,8DACwBR,EADxB,sDAKTX,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,IAH2D,OAIjE0C,EAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrE6b,EAAmBjc,EAAKG,KAAKH,KAAKsc,iBAAiBb,UACnDU,EAAoBnc,EAAKG,KAAKH,KAAKsc,iBAAiBZ,WACpDxY,EAAS,IAV4D,4CAA7E,uDAaA8B,GAAW,MAEhB,IAoCC,qCACI,+BAAMnB,EAAKkF,OAAO,GAAGC,cAAgBnF,EAAKoF,MAAM,GAAhD,eACEhG,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,cAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SArC/B,SAAsBV,GAClBA,EAAEC,iBACFF,GAAW,GACX9B,EAAS,IAET,IAAMlC,EAAQ,CACVya,SAAUW,EAAQjX,QAAQtD,MAC1B6Z,UAAWW,EAASlX,QAAQtD,MAC5BsT,SAAU9U,eAAekB,QAAQ,MACjC6T,SAAU/U,eAAekB,QAAQ,OAGrCyF,EAAmB,SAATnD,EAAA,UAAqBmD,GAArB,OAA+BxG,GAA/B,UAAyCwG,GAAzC,OAAmD2U,GACjD,SAAT9X,IAAiB3C,EAAS,OAE7BrB,EAAWmH,EAAShG,GAAO,EAAME,GAAQnB,KAAzC,uCAA8C,WAAMC,GAAN,SAAAyD,EAAA,yDACvB,MAAhBzD,EAAKC,OADkC,mBAEnB,MAAhBD,EAAKC,OAF8B,gCAG5BY,IAH4B,OAIlC0C,EAAQG,KAAK,UAJqB,OAMtCR,EAASlD,EAAKG,KAAKC,SANmB,uBAQtCgH,GAAeD,GACfjE,EAAS,IACTK,EAAQG,KAAR,oBAA0BiY,IAVY,4CAA9C,uDAcA3W,GAAW,IAQP,SACI,eAAC6C,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,eAACpC,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKqW,EAASjW,SAAUpB,EAASmE,aAAc8S,EAAiBhW,UAAU,SAG5G,cAAC6B,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsW,EAAUlW,SAAUpB,EAASmE,aAAcgT,EAAkBlW,UAAU,YAIlH,cAACE,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,OAAO6D,SAAUpB,EAAjD,qBACGA,GAAW,cAAC,IAAD,CAAMjC,GAAE,oBAAe6Y,GAAcrZ,UAAU,iBAAiB6D,SAAUpB,EAA1E,4BCjGnB,SAASqB,GAAKhE,GAAQ,IACzBma,EAAWna,EAAXma,OACFhZ,EAAUC,cAYhB,OACI,mCACI,cAAC+C,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAgB,4BAAI+V,EAAOzM,WAA3B,OAA6CyM,EAAOjN,IAApD,UAAgEiN,EAAOC,OAAOC,iBAC1E,cAAChW,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS2V,EAAO/b,GAAI6D,QAd1H,SAAoBY,GAChB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,kBAAwB6Y,EAAO9D,SAASjY,GAAxC,iBAAmDA,KAYvC,yBChBL,SAASuG,KAAS,IACrB4U,EAAetT,cAAfsT,WADoB,GAEf,UAAM7b,kDAAN,aACiBkD,oBAAS,IAHX,mBAGZgC,GAHY,aAIFhC,mBAAS,IAJP,mBAIrBC,EAJqB,KAIdC,EAJc,OAKIF,mBAAS,IALb,mBAKrB0Z,EALqB,KAKXC,EALW,OAMkB3Z,mBAAS,IAN3B,mBAMrBiW,EANqB,KAMJC,EANI,OAOG1Z,IAAvBK,EAPoB,EAOpBA,WAAYgB,EAPQ,EAORA,OACd0C,EAAUC,cAqDhB,OALAI,qBAAU,YA9CV,WACIoB,GAAW,GACX9B,EAAS,IACT,IAAMlC,EAAQ,CACVA,MAAK,yCAAqC2a,EAArC,4GAET9b,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,IAH2D,OAIjE0C,EAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrEuc,EAAY3c,EAAKG,KAAKH,KAAK4c,kBAC3B1Z,EAAS,IAT4D,4CAA7E,uDAYA8B,GAAW,GA6BX+W,GA1BJ,WACI7Y,EAAS,IACT8B,GAAW,GAEX,IAAMhE,EAAQ,CACVA,MAAK,kDACgB2a,EADhB,+CAKT9b,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,IAH2D,OAIjE0C,EAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrE8Y,EAAmBlZ,EAAKG,KAAKH,KAAKyY,UAClCvV,EAAS,IAT4D,4CAA7E,uDAYA8B,GAAW,GAKX4V,KACD,IAGC,qCACI,yCAAa3B,EAAgBxY,QAC7B,sBAAK6B,UAAU,OAAf,UACKW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACnC,cAAC,IAAD,CAAMH,GAAE,kBAAa6Y,EAAb,QAA+BrZ,UAAU,kBAAjD,4BACA,cAAC,IAAD,CAAMQ,GAAE,2BAAsB6Y,GAAcrZ,UAAU,sBAAtD,kBAEIoa,EAASzU,OAAS,EAClB,cAAC7C,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAS5F,UAAU,OAAzC,SAEQoa,EAASvU,KAAI,SAAAoU,GACT,OAAO,cAAC,GAAD,CAAsBA,OAAQA,GAAnBA,EAAO/b,SAKrC,qBAAK8B,UAAU,mDAAf,SACI,mDChFT,SAAS8F,KAAS,IAAD,EACKC,cAAzBxE,EADoB,EACpBA,KAAMrD,EADc,EACdA,GAAImb,EADU,EACVA,WACd3U,EAAO,UAAMlH,kDAAN,qBACPoB,EAAS,OAHe,EAIE8B,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKQhC,oBAAS,GALjB,mBAKrBmE,EALqB,KAKTC,EALS,OAMFpE,mBAAS,IANP,mBAMrBC,EANqB,KAMdC,EANc,OAOcF,qBAPd,mBAOrB6Z,EAPqB,KAONC,EAPM,KAQtBC,EAAYlY,mBACZtB,EAAUC,cATY,EAUGhE,IAAvBK,EAVoB,EAUpBA,WAAYgB,EAVQ,EAURA,OA4DpB,OA1DA+C,qBAAU,WACN,GAAY,SAATC,EAAiB,CAChBX,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAQ,CACVA,MAAK,4DACsBR,EADtB,yCAKTX,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,IAH2D,OAIjE0C,EAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrE0c,EAAiB9c,EAAKG,KAAKH,KAAKgd,eAAeR,QAC/CtZ,EAAS,IAT4D,4CAA7E,uDAYA8B,GAAW,MAEhB,IAmCC,qCACI,+BAAMnB,EAAKkF,OAAO,GAAGC,cAAgBnF,EAAKoF,MAAM,GAAhD,aACEhG,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,cAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SApC/B,SAAsBV,GAClBA,EAAEC,iBACFF,GAAW,GACX9B,EAAS,IAET,IAAMlC,EAAQ,CACVwb,OAAQO,EAAU5X,QAAQtD,MAC1BsT,SAAU9U,eAAekB,QAAQ,MACjC6T,SAAU/U,eAAekB,QAAQ,OAGrCyF,EAAmB,SAATnD,EAAA,UAAqBmD,GAArB,OAA+BxG,GAA/B,UAAyCwG,GAAzC,OAAmD2U,GACjD,SAAT9X,IAAiB3C,EAAS,OAE7BrB,EAAWmH,EAAShG,GAAO,EAAME,GAAQnB,KAAzC,uCAA8C,WAAMC,GAAN,SAAAyD,EAAA,yDACvB,MAAhBzD,EAAKC,OADkC,mBAEnB,MAAhBD,EAAKC,OAF8B,gCAG5BY,IAH4B,OAIlC0C,EAAQG,KAAK,UAJqB,OAMtCR,EAASlD,EAAKG,KAAKC,SANmB,uBAQtCgH,GAAeD,GACfjE,EAAS,IACTK,EAAQG,KAAR,kBAAwBiY,IAVc,4CAA9C,uDAcA3W,GAAW,IAQP,SACI,eAAC6C,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,qBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,SAASwR,IAAI,IAAItP,IAAKgX,EAAW5W,SAAUpB,EAASmE,aAAc2T,EAAe7W,UAAU,OAElH,cAACE,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,OAAO6D,SAAUpB,EAAjD,qBACGA,GAAW,cAAC,IAAD,CAAMjC,GAAE,kBAAa6Y,GAAcrZ,UAAU,iBAAiB6D,SAAUpB,EAAxE,4BClFnB,SAASqB,GAAKhE,GAAQ,IAE7B6a,EAEA7a,EAFA6a,SACA3W,EACAlE,EADAkE,aAEE/C,EAAUC,cAYhB,OACI,mCACI,cAAC+C,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAgB,wBAAQlE,UAAU,OAAlB,SAA0B2a,EAASnN,WAAnD,IAAuEmN,EAASpZ,KAAhF,MAAyFoZ,EAASxc,KAAlG,KAAyG,yBAAQ6B,UAAU,OAAlB,cAA2B2a,EAAShd,OAApC,OACrG,cAACwG,EAAA,EAAD,CAAOhB,QAAQ,SAASlD,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASqW,EAASzc,GAAI6D,QAASiC,EAAnG,oBACA,cAACG,EAAA,EAAD,CAAOhB,QAAQ,UAAUnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASqW,EAASzc,GAAI6D,QAf5H,SAAoBY,GAChB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,yBAA+BlD,KAanB,kBACA,cAACiG,EAAA,EAAD,CAAOhB,QAAQ,YAAYnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAASqW,EAASzc,GAAI6D,QAX9H,SAAsBY,GAClB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,2BAAiClD,KASrB,2BCpBL,SAASuG,KACpB,IAAMC,EAAO,UAAMlH,kDAAN,cADe,EAEEkD,oBAAS,GAFX,mBAErB+B,EAFqB,KAEZC,EAFY,OAGFhC,mBAAS,IAHP,mBAGrBC,EAHqB,KAGdC,EAHc,OAIQF,oBAAS,GAJjB,mBAIrBmE,EAJqB,KAITC,EAJS,OAKQpE,mBAAS,IALjB,mBAKrBka,EALqB,KAKTC,EALS,OAMG3d,IAAvBK,EANoB,EAMpBA,WAAYgB,EANQ,EAMRA,OACdwG,EAAaxC,mBACbwJ,EAAYxJ,mBACZyO,EAAUzO,mBACVtB,EAAUC,cAEhB,SAASiE,EAAaxC,GAClBA,EAAEC,iBACF,IAAIjF,EAAsC,KAA5BoO,EAAUlJ,QAAQtD,MAAnB,qBAAiDwM,EAAUlJ,QAAQtD,MAAnE,KAA6E,GACtFgC,EAAkC,KAA1ByP,EAAQnO,QAAQtD,MAAjB,mBAA6CyR,EAAQnO,QAAQtD,MAA7D,KAAuE,GAC9EjB,EAAgD,eAAnCP,eAAekB,QAAQ,QAAvB,iBAA4DlB,eAAekB,QAAQ,cAAnF,KAAsG,GAGvH6b,EAFU,qBAAiB/V,EAAWlC,QAAQtD,MAApC,YAA6C5B,GAA7C,OAAsD4D,GAAtD,OAA6DjD,EAA7D,MAKd,SAAS0F,EAAarB,GAIlB,GAHAA,EAAEC,iBACFhC,EAAS,IACT8B,GAAW,GACR0C,OAAOC,QAAQ,6CAA6C,CAC3D,IAAMnH,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5BX,EAAW,GAAD,OAAImH,EAAJ,YAAexG,GAAM,IAAI,EAAM,UAAUT,KAAnD,uCAAwD,WAAMC,GAAN,SAAAyD,EAAA,yDACjC,MAAhBzD,EAAKC,OAD4C,mBAE7B,MAAhBD,EAAKC,OAFwC,gCAGtCY,IAHsC,OAI5C0C,EAAQG,KAAK,UAJ+B,OAMhDR,EAASlD,EAAKG,KAAKC,SAN6B,uBAQhDgH,GAAeD,GACfjE,EAAS,IATuC,4CAAxD,uDAYA8B,GAAW,QAGXA,GAAW,GA3CS,SA+CboY,IA/Ca,2EA+C5B,0CAAA3Z,EAAA,sDAA6B8D,EAA7B,+BAAsC,GAClCrE,EAAS,IACT8B,GAAW,GACLhE,EAAQ,CACVA,MAAK,sDACoBuG,EADpB,6FAKT1H,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACzEmF,QAAQC,IAAI7I,GACO,MAAhBA,EAAKC,OAFiE,mBAGlD,MAAhBD,EAAKC,OAH6D,gCAI3DY,IAJ2D,OAKjE0C,EAAQG,KAAK,UALoD,OAOrER,EAASlD,EAAKG,KAAKC,SAPkD,uBASrE+c,EAAcnd,EAAKG,KAAKH,KAAKqd,oBAC7Bna,EAAS,IAV4D,4CAA7E,uDAaA8B,GAAW,GAtBf,4CA/C4B,sBAgF5B,OARApB,qBAAU,WACgC,eAAnCvD,eAAekB,QAAQ,QACtB6b,IAEAA,EAAc,SAAD,OAAU/c,eAAekB,QAAQ,cAAjC,SAElB,CAAC4F,IAGA,qCACI,4CACA,sBAAK7E,UAAU,OAAf,UACKW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACnC,cAAC,IAAD,CAAMX,UAAU,kBAAkBQ,GAAE,gBAApC,8BACA,cAAC4C,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAAU8B,EAAjC,SACI,eAAC/B,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACF,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsB,EAAYW,SAAUP,EAActB,SAAUpB,EAASgD,YAAY,uBAG1G,cAACF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,eAACF,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKsI,EAAWrG,SAAUP,EAApD,UACI,wBAAQ5F,MAAM,GAAd,wBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,OAAd,yBAIZ,cAACgG,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,eAACF,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKuN,EAAStL,SAAUP,EAAlD,UACI,wBAAQ5F,MAAM,GAAd,sBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,WAAd,6BAIZ,cAACgG,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACM,EAAA,EAAD,CAAQT,QAAQ,UAAU5B,KAAK,SAASsC,SAAUpB,EAAlD,6BAMRmY,GAAcA,EAAWjV,OAAS,EAClC,cAAC7C,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAU5F,UAAU,OAA1C,SAEQ4a,EAAW/U,KAAI,SAAA8U,GACX,OAAO,cAAC,GAAD,CAAwBA,SAAUA,EAAU3W,aAAcA,GAA/C2W,EAASzc,SAKvC,qBAAK8B,UAAU,mDAAf,SACI,mDCvIb,SAASgb,GAAT,GAAkC,IAAfC,EAAc,EAAdA,WAAc,EACVva,mBAAS,IADC,mBACrCwa,EADqC,KAC1BC,EAD0B,OAEbje,IAAvBK,EAFoC,EAEpCA,WAAYgB,EAFwB,EAExBA,OACd0C,EAAUC,cAiChB,OAJAI,qBAAU,YA3BV,WACI,IAAM5C,EAAQ,CACVA,MAAK,2DACyBuc,EADzB,sNAYT1d,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMmb,GAAN,SAAAzX,EAAA,yDACzEmF,QAAQC,IAAIqS,GACS,MAAlBA,EAAOjb,OAF+D,mBAGhD,MAAlBib,EAAOjb,OAH2D,gCAI3DY,IAJ2D,OAKjE0C,EAAQG,KAAK,UALoD,6BAQrE+Z,EAAavC,EAAO/a,KAAKH,KAAKwd,UAAU5T,QAAO,SAAA8T,GAAQ,OAA8B,OAA1BA,EAASC,iBARC,2CAA7E,uDAcAC,KACD,IAGC,mCAEI,cAACxY,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAU5F,UAAU,OAA1C,SACI,cAACiE,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SAEQ+X,EAAUvV,OAAS,GACnBuV,EAAUrV,KAAI,SAAAuV,GACV,OAAO,mCAECA,EAASG,cACT,eAACtX,EAAA,EAAUC,KAAX,WAAgB,uCAAUkX,EAASI,SAAnC,KAAgDJ,EAASG,aAAzD,IAAuE,uBAAvE,IAA+EH,EAASK,MACpF,cAACtX,EAAA,EAAD,CAAOhB,QAAUiY,EAASM,aAAe,UAAY,SAAWzb,MAAO,CAACmE,MAAO,SAAWE,UAAS8W,EAASld,GAA5G,SAAkHkd,EAASM,aAAe,WAAa,2BC7ChL,SAAS5V,KACpB,IAAIpB,EAAO,UAAMlH,kDAAN,cACPoB,EAAS,OAFe,EAGPmH,cAAbxE,EAHoB,EAGpBA,KAAMrD,EAHc,EAGdA,GAHc,EAIEwC,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKFhC,mBAAS,IALP,mBAKrBC,EALqB,KAKdC,EALc,OAMFF,mBAAS,IANP,mBAMrBib,EANqB,KAMdC,EANc,OAOgBlb,oBAAS,GAPzB,mBAOrBmb,EAPqB,KAOLC,EAPK,OAQUpb,mBAAS,IARnB,mBAQrBqb,EARqB,KAQRC,EARQ,OASctb,mBAAS,GATvB,mBASrB6Z,EATqB,KASNC,EATM,OAUkB9Z,mBAAS,IAV3B,mBAUrBub,EAVqB,KAUJC,EAVI,OAWGhf,IAAvBK,EAXoB,EAWpBA,WAAYgB,EAXQ,EAWRA,OACd0C,EAAUC,cACV8P,EAAUzO,mBACV4Z,EAAU5Z,mBACVuX,EAAUvX,mBACVwX,EAAWxX,mBACX6Z,EAAW7Z,mBACXkY,GAAYlY,mBA2FlB,OAJAjB,qBAAU,WACM,QAATC,GAjCP,WACIX,EAAS,IACT8B,GAAW,GAEX,IAAMhE,EAAQ,CACVA,MAAK,0DACwBR,EADxB,0JAOTX,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,IAH2D,OAIjE0C,EAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQlEJ,EAAKG,KAAKH,KAAK2e,iBAAiBC,UAAU,IACzC9B,EAAiB9c,EAAKG,KAAKH,KAAK2e,iBAAiBC,UAAU,GAAGpC,QAElE8B,EAAete,EAAKG,KAAKH,KAAK2e,iBAAiB9a,MAC/C2a,EAAmBxe,EAAKG,KAAKH,KAAK2e,kBAClCP,EAA2D,kBAAzCpe,EAAKG,KAAKH,KAAK2e,iBAAiB9a,MAAqE,aAAzC7D,EAAKG,KAAKH,KAAK2e,iBAAiB9a,MAC9GX,EAAS,IAd4D,4CAA7E,uDAiBA8B,EAAoB,WAATnB,GAIQgb,KACpB,IAGC,qCACI,+BAAMhb,EAAKkF,OAAO,GAAGC,cAAgBnF,EAAKoF,MAAM,GAAhD,eACEhG,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,cAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SA7F/B,SAAsBV,GAClBA,EAAEC,iBACFhC,EAAS,IACT8B,GAAW,GAEX,IAAI8Z,EAAc,CACdjb,KAAMyP,EAAQnO,QAAQtD,MACtB4Z,SAAUW,EAAQjX,QAAQtD,MAC1B6Z,UAAWW,EAASlX,QAAQtD,MAC5Bkc,MAAOW,EAASvZ,QAAQtD,OAGzBoc,EAAMhW,OAAS,IAAG6W,EAAYC,KAAOd,EAAM,IAC3ClB,GAAU5X,UAAS2Z,EAAYtC,OAASO,GAAU5X,QAAQtD,OAE7DmF,EAAmB,QAATnD,EAAA,UAAoBmD,GAApB,OAA8BxG,GAA9B,UAAwCwG,GAAxC,OAAkD3G,eAAekB,QAAQ,eACvE,SAATsC,IAAiB3C,EAAS,OAE7BrB,EAAWmH,EAAS8X,GAAa,EAAM5d,GAAQnB,KAA/C,uCAAoD,WAAMmb,GAAN,SAAAzX,EAAA,yDAC3B,MAAlByX,EAAOjb,OADsC,mBAEvB,MAAlBib,EAAOjb,OAFkC,gCAGlCY,IAHkC,OAIxC0C,EAAQG,KAAK,UAJ2B,OAM5CR,EAASgY,EAAO/a,KAAKC,SANuB,uBAQ5C8C,EAAS,IACTK,EAAQG,KAAK,aAT+B,4CAApD,uDAaAsB,GAAW,IA8DP,SACI,eAAC6C,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,eAACpC,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,eAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKuN,EAASzR,MAAOwc,EAAarY,UAAU,EAAMgC,SAjExG,SAAoB/C,GAChBqZ,EAAerZ,EAAE4B,OAAOhF,OACxBuc,EAA4C,kBAA1B9K,EAAQnO,QAAQtD,OAAuD,aAA1ByR,EAAQnO,QAAQtD,QA+D2CsE,SAAUpB,EAA5G,UACI,wBAAQlD,MAAM,GAAGsN,QAAM,EAAvB,yBACA,wBAAQtN,MAAM,aAAd,wBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,WAAd,8BAIZ,cAACgG,EAAA,EAAD,CAAKC,GAAG,IAAR,SAEQqW,GACA,eAACzY,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,2BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,SAASwR,IAAI,IAAItP,IAAKgX,GAAW/W,UAAU,EAAMkD,aAAc2T,EAAe1W,SAAUpB,SAIvH,cAAC8C,EAAA,EAAD,CAAKC,GAAG,IAAR,SAEQqW,IAAmBpZ,GACnB,eAACW,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,yBACA,uBAAOhC,KAAK,OAAOrD,GAAG,cAAcuF,IAAK0Y,EAASO,OAAQ,CAAC,OAAQ,QAAS,QAAShX,SApFrH,SAAsB/C,GAClBA,EAAEC,iBAEF,IAAM1E,EAAKyE,EAAE4B,OAAOrG,GAChBye,EAAa,IAAIC,WACjBC,EAAela,EAAE4B,OAAOoX,MAAM,GAElCgB,EAAWG,OAAS,WAChBlB,EAAS,GAAD,oBAAKD,GAAL,CAAY,CAAEpa,KAAMsb,EAAatb,KAAMrD,GAAIA,EAAIR,KAAMif,EAAW/D,YAG5E+D,EAAWI,cAAcF,cA8Eb,eAACzZ,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKqW,EAASjW,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKkD,GAAiBtW,OAAS,EAAIsW,EAAgB9C,SAAW,GAAIzV,UAAU,SAGpK,cAAC6B,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsW,EAAUlW,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKkD,GAAiBtW,OAAS,EAAIsW,EAAgB7C,UAAY,GAAI1V,UAAU,YAI1K,eAACN,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,WAAWpD,IAAK2Y,EAAUvY,SAAUpB,EAASmE,aAAckS,OAAOC,KAAKkD,GAAiBtW,OAAS,EAAIsW,EAAgBR,MAAQ,GAAI/X,UAAU,OAGnJ,QAATnC,GAAkBuX,OAAOC,KAAKkD,GAAiBtW,OAAS,GACxDsW,EAAgBK,UAAU3W,OAAS,GACnC,qCACI,oBAAGpF,KAAM0b,EAAgBK,UAAU,GAAGG,MAA8C,OAAtCR,EAAgBK,UAAU,GAAGG,KAAgBR,EAAgBK,UAAU,GAAGG,KAAO,IAAM3H,SAAUmH,EAAgBK,UAAU,GAAGG,MAA8C,OAAtCR,EAAgBK,UAAU,GAAGG,KAAlE,+BAA0GR,EAAgBR,MAA1H,aAAoIQ,EAAgB9d,KAAK6e,QAAQ,IAAK,KAAtK,KAAgL,KAA/T,UACI,mBAAGhd,UAAU,6BAA6BmC,cAAY,SAD1D,QAC4E,sBAAMnC,UAAU,cAAhB,oCAE5E,uBACA,0BAIK,WAATuB,GACA,cAACyZ,GAAD,CAASC,WAAY/c,IAEd,WAATqD,GACE,cAACqC,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,OAAO6D,SAAUpB,EAAjD,oBAEF,cAAC,IAAD,CAAMjC,GAAG,YAAYR,UAAU,iBAAiB6D,SAAUpB,EAA1D,4BC5LP,SAASqB,GAAKhE,GAAQ,IACzBsb,EAAatb,EAAbsb,SACFna,EAAUC,cAOhB,OACI,mCACI,cAAC+C,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAgB,wBAAQlE,UAAU,OAAlB,SAA0Bob,EAAST,SAASnN,WAA5D,IAAgF4N,EAAST,SAASpZ,KAAlG,MAA2G6Z,EAAST,SAASxc,KACzH,cAACgG,EAAA,EAAD,CAAOhB,QAAQ,YAAYnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS8W,EAASld,GAAI6D,QAT9H,SAAsBY,GAClB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,2BAAiClD,KAOrB,2BCVL,SAASuG,KACP,UAAMjH,kDAAN,cAAb,IAD4B,EAEEkD,oBAAS,GAFX,mBAEZgC,GAFY,aAGFhC,mBAAS,IAHP,mBAGrBC,EAHqB,KAGdC,EAHc,OAIQF,oBAAS,GAJjB,mBAIrBmE,EAJqB,aAKMnE,mBAAS,KALf,mBAKrBwa,EALqB,KAKVC,EALU,OAMGje,IAAvBK,EANoB,EAMpBA,WAAYgB,EANQ,EAMRA,OAId0C,GAHasB,mBACDA,mBACFA,mBACArB,eAVY,4CAqC5B,wCAAAC,EAAA,qFAAqC,GACjCP,EAAS,IACT8B,GAAW,GACLhE,EAAQ,CACVA,MAAK,uDACqBX,eAAekB,QAAQ,MAD5C,gVAaT1B,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACzEmF,QAAQC,IAAI7I,GACO,MAAhBA,EAAKC,OAFiE,mBAGlD,MAAhBD,EAAKC,OAH6D,gCAI3DY,IAJ2D,OAKjE0C,EAAQG,KAAK,UALoD,OAOrER,EAASlD,EAAKG,KAAKC,SAPkD,uBASrEqd,EAAazd,EAAKG,KAAKH,KAAKwd,WAC5Bta,EAAS,IAV4D,4CAA7E,uDAaA8B,GAAW,GA9Bf,4CArC4B,sBA0E5B,OAJApB,qBAAU,YAtEkB,mCAuExBga,KACD,CAACzW,IAGA,qCACI,0CACA,sBAAK7E,UAAU,OAAf,UACKW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IAE/Bua,EAAUvV,OAAS,EACnB,cAAC7C,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAU5F,UAAU,OAA1C,SAEQkb,EAAUrV,KAAI,SAAAuV,GACV,OAAO,cAAC,GAAD,CAAwBA,SAAUA,GAAvBA,EAASld,SAKvC,qBAAK8B,UAAU,mDAAf,SACI,mDC3FT,SAAS8F,KAAS,IAAD,EACPC,cAAbxE,EADoB,EACpBA,KAAMrD,EADc,EACdA,GACVwG,EAAO,UAAMlH,kDAAN,qBAAqDU,GAFpC,EAGEwC,oBAAS,GAHX,mBAGrB+B,EAHqB,KAGZC,EAHY,OAIFhC,mBAAS,IAJP,mBAIrBC,EAJqB,KAIdC,EAJc,OAKgBF,oBAAS,GALzB,mBAKrBmb,EALqB,KAKLC,EALK,OAMUpb,mBAAS,IANnB,mBAMrBqb,EANqB,KAMRC,EANQ,OAOctb,mBAAS,GAPvB,mBAOrB6Z,EAPqB,KAONC,EAPM,OAQkB9Z,mBAAS,IAR3B,mBAQrBub,EARqB,KAQJC,EARI,OASGhf,IAAvBK,EAToB,EASpBA,WAAYgB,EATQ,EASRA,OACd0C,EAAUC,cACV8P,EAAUzO,mBACVuX,EAAUvX,mBACVwX,EAAWxX,mBACX6Z,EAAW7Z,mBACXkY,EAAYlY,mBAsElB,OAJAjB,qBAAU,YAjCV,WACIV,EAAS,IACT8B,GAAW,GAEX,IAAMhE,EAAQ,CACVA,MAAK,kDACgBR,EADhB,8OAUTX,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,IAH2D,OAIjE0C,EAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrE0c,EAAiB9c,EAAKG,KAAKH,KAAK0d,SAAST,SAAS2B,UAAU,GAAGpC,QAC/D8B,EAAete,EAAKG,KAAKH,KAAK0d,SAAST,SAASpZ,MAChD2a,EAAmBxe,EAAKG,KAAKH,KAAK0d,SAAST,UAC3CmB,EAA4D,kBAA1Cpe,EAAKG,KAAKH,KAAK0d,SAAST,SAASpZ,MAAsE,aAA1C7D,EAAKG,KAAKH,KAAK0d,SAAST,SAASpZ,MAChHX,EAAS,IAZ4D,4CAA7E,uDAeA8B,GAAW,GAIX6Z,KACD,IAGC,qCACI,iDACE5b,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,cAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAxE/B,SAAsBV,GAClBA,EAAEC,iBACF,IAAMuJ,EAASxJ,EAAEsa,YAAYC,UAAUhf,GACvC,GAAGkH,OAAOC,QAAP,+BAAuC8G,EAAvC,gBAA4D,CAC3DvL,EAAS,IACT8B,GAAW,GAEX,IAAIhE,EAAQ,CACRye,OAAQnM,EAAQnO,QAAQtD,MACxBmc,aAAyB,YAAXvP,EACdsP,MAAOW,EAASvZ,QAAQtD,OAG5BhC,EAAWmH,EAAShG,GAAO,EAAM,QAAQjB,KAAzC,uCAA8C,WAAMmb,GAAN,SAAAzX,EAAA,yDAC1CmF,QAAQC,IAAIqS,GACS,MAAlBA,EAAOjb,OAFgC,mBAGjB,MAAlBib,EAAOjb,OAH4B,gCAI5BY,IAJ4B,OAKlC0C,EAAQG,KAAK,UALqB,OAOtCR,EAASgY,EAAO/a,KAAKC,SAPiB,uBAStC8C,EAAS,IACTK,EAAQG,KAAK,aAVyB,4CAA9C,uDAcAsB,GAAW,KA6CX,SACI,eAAC6C,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,eAACpC,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,eAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKuN,EAASzR,MAAOwc,EAAalY,UAAU,EAAtE,UACI,wBAAQtE,MAAM,GAAGsN,QAAM,EAAvB,yBACA,wBAAQtN,MAAM,gBAAd,2BACA,wBAAQA,MAAM,WAAd,8BAIZ,cAACgG,EAAA,EAAD,CAAKC,GAAG,IAAR,SAEQqW,GACA,eAACzY,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,2BACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,SAASwR,IAAI,IAAItP,IAAKgX,EAAW7T,aAAc2T,EAAe1W,UAAU,YAK3G,eAACT,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKqW,EAASjW,UAAU,EAAM+C,aAAckS,OAAOC,KAAKkD,GAAiBtW,OAAS,EAAIsW,EAAgB9C,SAAW,UAGnJ,cAAC5T,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsW,EAAUlW,UAAU,EAAM+C,aAAckS,OAAOC,KAAKkD,GAAiBtW,OAAS,EAAIsW,EAAgB7C,UAAY,aAIzJ,eAAChW,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,6BACA,cAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,WAAWhD,UAAU,EAAM+C,aAAckS,OAAOC,KAAKkD,GAAiBtW,OAAS,EAAIsW,EAAgBR,MAAQ,QAEhI,eAACrY,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,6BACA,cAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,WAAWpD,IAAK2Y,EAAU1Y,UAAU,EAAMG,SAAUpB,OAG5D,QAATlB,GAAkBuX,OAAOC,KAAKkD,GAAiBtW,OAAS,GACxD,qCACI,oBAAGpF,KAAM0b,EAAgBK,UAAU,GAAGG,MAA8C,OAAtCR,EAAgBK,UAAU,GAAGG,KAAgBR,EAAgBK,UAAU,GAAGG,KAAO,IAAM3H,SAAUmH,EAAgBK,UAAU,GAAGG,MAA8C,OAAtCR,EAAgBK,UAAU,GAAGG,KAAlE,+BAA0GR,EAAgBR,MAA1H,aAAoIQ,EAAgB9d,KAAK6e,QAAQ,IAAK,KAAtK,KAAgL,KAA/T,UACI,mBAAGhd,UAAU,6BAA6BmC,cAAY,SAD1D,QAC4E,sBAAMnC,UAAU,cAAhB,oCAE5E,uBACA,0BAGR,cAAC4D,EAAA,EAAD,CAAQrC,KAAK,SAASrD,GAAG,UAAU8B,UAAU,OAAO6D,SAAUpB,EAA9D,qBACA,cAACmB,EAAA,EAAD,CAAQrC,KAAK,SAASrD,GAAG,SAASiF,QAAQ,SAASnD,UAAU,OAAO6D,SAAUpB,EAA9E,oBACE,cAAC,IAAD,CAAMjC,GAAG,YAAYR,UAAU,iBAA/B,4BCpJP,SAAS8D,GAAKhE,GAAQ,IAG7Bsd,EAGAtd,EAHAsd,UACA/R,EAEAvL,EAFAuL,KACArH,EACAlE,EADAkE,aAEE/C,EAAUC,cAOhB,OACI,mCACI,cAAC+C,EAAA,EAAD,CAAWd,QAAQ,QAAnB,SACI,eAACc,EAAA,EAAUC,KAAX,WAAiBmH,EAAKlN,KAAtB,MAA+BkN,EAAKhO,SAChC,cAAC8G,EAAA,EAAD,CAAOhB,QAAQ,SAASnD,UAAU,OAAOC,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS8Y,EAAUlf,GAAI6D,QAASiC,EAArH,oBACA,cAACG,EAAA,EAAD,CAAOhB,QAAQ,UAAUlD,MAAO,CAACmE,MAAO,QAASC,OAAQ,WAAYC,UAAS8Y,EAAUlf,GAAI6D,QAV5G,SAAoBY,GAChB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+C,EAAQG,KAAR,8BAAoClD,KAQxB,yBCjBL,SAASuG,KACpB,IAAMC,EAAO,UAAMlH,kDAAN,mBADe,EAEAkD,mBAAS,IAFT,mBAErB2c,EAFqB,KAEbC,EAFa,OAGQ5c,mBAAS,IAHjB,mBAGrB6c,EAHqB,KAGTC,EAHS,OAIF9c,mBAAS,IAJP,mBAIrBmL,EAJqB,KAIdC,EAJc,OAKFpL,mBAAS,IALP,mBAKrBC,EALqB,KAKdC,EALc,OAMQF,oBAAS,GANjB,gCAOGxD,KAAvBK,EAPoB,EAOpBA,WAAYgB,EAPQ,EAORA,OACd0C,EAAUC,cARY,4CAU5B,sBAAAC,EAAA,sDACIP,EAAS,IAITrD,EAAWC,sDAHG,CACVkB,MAAK,qBAEiD,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,IAH2D,OAIjE0C,EAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrEwf,EAAU5f,EAAKG,KAAKH,KAAK2f,QACzBzc,EAAS,IAT4D,4CAA7E,uDALJ,4CAV4B,sBA6B5B,SAASoD,EAAarB,GAElB,GADAA,EAAEC,iBACCwC,OAAOC,QAAQ,0CAA2C,CACzD,IAAMnH,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5BoI,QAAQC,IAAR,UAAe7B,EAAf,YAA0BxG,IAC1BX,EAAW,GAAD,OAAImH,EAAJ,YAAexG,GAAM,IAAI,EAAM,UAAUT,KAAnD,uCAAwD,WAAMC,GAAN,SAAAyD,EAAA,yDACjC,MAAhBzD,EAAKC,OAD4C,mBAE7B,MAAhBD,EAAKC,OAFwC,gCAGtCY,IAHsC,OAI5C0C,EAAQG,KAAK,UAJ+B,OAMhDR,EAASlD,EAAKG,KAAKC,SAN6B,uBAQhDsH,OAAOmE,SAASC,SAEhB5I,EAAS,IAVuC,4CAAxD,wDAlCoB,4CAkD5B,0CAAAO,EAAA,sDAAwB8D,EAAxB,+BAAiC,GAC7BrE,EAAS,IACHlC,EAAQ,CACVA,MAAK,yCACOuG,EADP,oEAIT1H,EAAWC,sDAAuCkB,GAAO,EAAM,QAAQjB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACrD,MAAhBzD,EAAKC,OADgE,mBAEjD,MAAhBD,EAAKC,OAF4D,gCAG1DY,IAH0D,OAIhE0C,EAAQG,KAAK,UAJmD,OAMpER,EAASlD,EAAKG,KAAKC,SANiD,uBAQpEgO,EAASpO,EAAKG,KAAKH,KAAKmO,OACxB4R,IACA7c,EAAS,IAV2D,4CAA5E,uDAPJ,4CAlD4B,+BAwEb6c,IAxEa,2EAwE5B,0CAAAtc,EAAA,sDAA4B8D,EAA5B,+BAAqC,GACjCrE,EAAS,IACHlC,EAAQ,CACVA,MAAK,qCAAiCuG,EAAjC,6BAET1H,EAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,IAH2D,OAIjE0C,EAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrE0f,EAAc9f,EAAKG,KAAKH,KAAKggB,oBAC7B9c,EAAS,IAT4D,4CAA7E,uDALJ,4CAxE4B,sBAgG5B,OALAU,qBAAU,YA3FkB,mCA4FxBqc,GA5FwB,mCA6FxB1R,KACD,IAGC,qCACI,gDACA,sBAAKjM,UAAU,OAAf,UACKW,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACnC,cAAC,IAAD,CAAMH,GAAG,qBAAqBR,UAAU,kBAAxC,+BAEIqd,EAAO1X,OAAS,EACZ0X,EAAOxX,KAAI,SAAA2V,GACP,OAAO,qCACH,qBAAIxb,UAAU,OAAd,mBAA4Bwb,KAC5B,cAAC1Y,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAU5F,UAAU,YAA1C,SAEIud,EAAWjW,QAAO,SAAA7D,GAAG,OAAIA,EAAI+X,QAAUA,KAAO3V,KAAI,SAAAuX,GAC9C,OAAO,cAAC,GAAD,CAAyBA,UAAWA,EAAW/R,KAAMQ,EAAMvE,QAAO,SAAAC,GAAC,OAAGA,EAAErJ,KAAOkf,EAAUD,UAAQ,GAAKnZ,aAAcA,GAAzGoZ,EAAUlf,eAOhD,qBAAK8B,UAAU,mDAAf,SACI,mDCtHT,SAAS8F,KACpB,IAAIpB,EAAO,UAAMlH,kDAAN,mBACPoB,EAAS,OAFe,EAGPmH,cAAbxE,EAHoB,EAGpBA,KAAMrD,EAHc,EAGdA,GAHc,EAIEwC,oBAAS,GAJX,mBAIrB+B,EAJqB,KAIZC,EAJY,OAKQhC,oBAAS,GALjB,mBAKrBmE,EALqB,KAKTC,EALS,OAMFpE,mBAAS,IANP,mBAMrBC,EANqB,KAMdC,EANc,OAOUF,mBAAS,IAPnB,mBAOrByW,EAPqB,KAORC,EAPQ,OAQY1W,qBARZ,mBAQrBkd,EARqB,KAQPC,EARO,OASJnd,oBAAS,GATL,mBASrBiV,EATqB,KASfS,EATe,OAUF1V,mBAAS,IAVP,mBAUrBmL,EAVqB,KAUdC,EAVc,OAWApL,mBAAS,IAXT,mBAWrB2c,EAXqB,KAWbC,EAXa,KAYtBQ,EAAWvb,mBACX2V,EAAU3V,mBACVwC,EAAaxC,mBACbtB,GAAUC,cACV+L,GAAc,kBAAMmJ,GAAQ,IAhBN,GAkBKlZ,IAAvBK,GAlBkB,GAkBlBA,WAAYgB,GAlBM,GAkBNA,OAEtB,SAAS4G,GAAaxC,GAClBA,EAAEC,iBAEFqJ,GADU,oBAAgBlH,EAAWlC,QAAQtD,MAAnC,qBAId,SAASiM,GAAa7I,GAClB,IAAMzE,EAAKyE,EAAE4B,OAAOC,QAAQtG,GAC5B+O,KACAmK,EAAelZ,GA7BS,8CA8D5B,sBAAAiD,EAAA,sDACIP,EAAS,IAITrD,GAAWC,sDAHG,CACVkB,MAAK,qBAEiD,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,KAH2D,OAIjE0C,GAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrEwf,EAAU5f,EAAKG,KAAKH,KAAK2f,QACzBzc,EAAS,IAT4D,4CAA7E,uDALJ,4CA9D4B,+BAiFbqL,KAjFa,8EAiF5B,0CAAA9K,EAAA,sDAAwB8D,EAAxB,+BAAiC,iBAC7BrE,EAAS,IACHlC,EAAQ,CACVA,MAAK,yCACOuG,EADP,oEAIT1H,GAAWC,sDAAuCkB,GAAO,EAAM,QAAQjB,KAAvE,uCAA4E,WAAMC,GAAN,SAAAyD,EAAA,yDACrD,MAAhBzD,EAAKC,OADgE,mBAEjD,MAAhBD,EAAKC,OAF4D,gCAG1DY,KAH0D,OAIhE0C,GAAQG,KAAK,UAJmD,OAMpER,EAASlD,EAAKG,KAAKC,SANiD,uBAQpEgO,EAASpO,EAAKG,KAAKH,KAAKmO,OACxBjL,EAAS,IAT2D,4CAA5E,uDAPJ,4CAjF4B,sBAyI5B,OAzGAU,qBAAU,WAIN,GApCwB,oCAiCxBqc,GACA1R,KAEY,SAAT1K,EAAiB,CAChBX,EAAS,IACT8B,GAAW,GACX,IAAMhE,EAAQ,CACVA,MAAK,+DACyBR,EADzB,iDAKTX,GAAWC,sDAAwCkB,GAAO,EAAM,QAAQjB,KAAxE,uCAA6E,WAAMC,GAAN,SAAAyD,EAAA,yDACtD,MAAhBzD,EAAKC,OADiE,mBAElD,MAAhBD,EAAKC,OAF6D,gCAG3DY,KAH2D,OAIjE0C,GAAQG,KAAK,UAJoD,OAMrER,EAASlD,EAAKG,KAAKC,SANkD,uBAQrEsZ,EAAe1Z,EAAKG,KAAKH,KAAKqgB,kBAAkBZ,QAChDU,EAAgBngB,EAAKG,KAAKH,KAAKqgB,kBAAkBvC,OACjD5a,EAAS,IAV4D,4CAA7E,uDAaA8B,GAAW,MAEhB,IA8EC,qCACI,+BAAMnB,EAAKkF,OAAO,GAAGC,cAAgBnF,EAAKoF,MAAM,GAAhD,WACEhG,GAAS,cAACuC,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBxC,IACpC,cAACyC,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAvC/B,SAAsBV,GAClBA,EAAEC,iBACFF,GAAW,GACX9B,EAAS,IAET,IAAIlC,EAAQ,CACRye,OAAQjF,EAAQrV,QAAQtD,MACxBic,MAAOsC,EAASjb,QAAQtD,OAGhB,SAATgC,IACC7C,EAAQ,CAAE8c,MAAOsC,EAASjb,QAAQtD,OAClCmF,EAAO,UAAMA,EAAN,YAAiBxG,GACxBU,EAAS,OAEb0H,QAAQC,IAAI3H,GACZrB,GAAWmH,EAAShG,GAAO,EAAME,GAAQnB,KAAzC,uCAA8C,WAAMC,GAAN,SAAAyD,EAAA,yDAC1CmF,QAAQC,IAAI7I,GACO,MAAhBA,EAAKC,OAFkC,mBAGnB,MAAhBD,EAAKC,OAH8B,gCAI5BY,KAJ4B,OAKlC0C,GAAQG,KAAK,UALqB,OAOtCR,EAASlD,EAAKG,KAAKC,SAPmB,uBAStCgH,GAAeD,GACfjE,EAAS,IACTK,GAAQG,KAAK,kBAXyB,4CAA9C,uDAeAsB,GAAW,IAQP,SACI,eAAC6C,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,eAACpC,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,eAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKyU,EAASrU,SAAUpB,GAAoB,SAATlB,EAAiBhC,MAAO4X,EAAazR,SAAW,SAAA/C,GAAC,OAAIyU,EAAezU,EAAE4B,OAAOhF,QAA1I,UACI,wBAAQA,MAAM,GAAGsN,QAAM,EAAvB,yBAEIhB,EAAMhG,KAAI,SAAAwF,GACN,OAAO,yBAAsB9L,MAAO8L,EAAKnN,GAAlC,UAAuCmN,EAAKlN,KAA5C,MAAqDkN,EAAKhO,WAA7CgO,EAAKnN,eAM7C,cAACqH,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACK,EAAA,EAAD,CAAQ5D,UAAU,iCAAiC+B,QA/I5D,kBAAMqU,GAAQ,WAkJb,cAAC7Q,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,eAACpC,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKG,MAAN,oBACA,eAACH,EAAA,EAAKI,QAAN,CAAcqD,GAAG,SAASpD,IAAKqa,EAAUja,SAAUpB,EAASlD,MAAOqe,EAAclY,SAAW,SAAA/C,GAAC,OAAIkb,EAAgBlb,EAAE4B,OAAOhF,QAA1H,UACI,wBAAQA,MAAM,GAAGsN,QAAM,EAAvB,0BAEIwQ,EAAOxX,KAAI,SAAC2V,EAAOvQ,GACf,OAAO,wBAAoB1L,MAAO0L,EAAM,EAAjC,SAAqCA,EAAM,GAA9BuQ,MAG5B,wBAAQjc,MAAO8d,EAAO1X,OAAS,EAA/B,SAAmC0X,EAAO1X,OAAS,eAKnE,cAAC/B,EAAA,EAAD,CAAQrC,KAAK,SAASvB,UAAU,OAAO6D,SAAUpB,EAAjD,qBACGA,GAAW,cAAC,IAAD,CAAMjC,GAAG,iBAAiBR,UAAU,iBAAiB6D,SAAUpB,EAA/D,yBAGtB,eAACoT,GAAA,EAAD,CAAOC,KAAK,KAAKH,KAAMA,EAAMI,OAAQ9I,GAArC,UACI,cAAC4I,GAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,GAAA,EAAM1I,MAAP,4BAEJ,eAAC0I,GAAA,EAAM5S,KAAP,WACA,cAACG,EAAA,EAAD,CAAMpD,UAAU,OAAOqD,SAAU8B,GAAjC,SACI,eAAC/B,EAAA,EAAKkC,IAAN,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACF,EAAA,EAAKI,QAAN,CAAcjC,KAAK,OAAOkC,IAAKsB,EAAYW,SAAUP,GAActB,SAAUpB,EAASgD,YAAY,uBAG1G,cAACF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAACpC,EAAA,EAAKE,MAAN,UACI,cAACM,EAAA,EAAD,CAAQT,QAAQ,UAAU5B,KAAK,SAASsC,SAAUpB,EAAlD,6BAMRoJ,EAAMlG,OAAS,EACf,cAAC7C,EAAA,EAAD,CAAM7C,MAAO,CAAE2F,MAAO,QAAU5F,UAAU,OAA1C,SAEQ6L,EAAMhG,KAAI,SAAAwF,GACN,OAAO,cAAC,EAAD,CAA0BA,KAAMA,EAAMG,aAAcA,IAAzCH,EAAKhO,eAKnC,qBAAK2C,UAAU,mDAAf,SACI,gDAIZ,cAAC6V,GAAA,EAAMmI,OAAP,UACI,cAACpa,EAAA,EAAD,CAAQT,QAAQ,YAAYpB,QAASkL,GAArC,2BClILgR,OApDf,WACE,OACE,mCACE,cAAC,IAAD,UACE,cAAC5e,EAAD,UACE,eAAC,IAAD,WAEE,cAACI,EAAD,CAAcye,OAAK,EAACC,KAAK,IAAIxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAAS+B,KACrF,cAAC3C,EAAD,CAAcye,OAAK,EAACC,KAAK,eAAexe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASie,KAChG,cAAC7e,EAAD,CAAc0e,KAAK,0BAA0Bxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAAS8P,KACrG,cAAC1Q,EAAD,CAAc0e,KAAK,aAAaxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASke,KACxF,cAAC9e,EAAD,CAAcye,OAAK,EAACC,KAAK,QAAQxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASme,KACzF,cAAC/e,EAAD,CAAc0e,KAAK,mBAAmBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASoe,KAC9F,cAAChf,EAAD,CAAc0e,KAAK,UAAUxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASwJ,KACrF,cAACpK,EAAD,CAAcye,OAAK,EAACC,KAAK,QAAQxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASqe,KACzF,cAACjf,EAAD,CAAc0e,KAAK,mBAAmBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASse,KAC9F,cAAClf,EAAD,CAAc0e,KAAK,WAAWxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASyM,KACtF,cAAC,IAAD,CAAOqR,KAAK,SAASxe,UAAW0C,IAEhC,cAAC5C,EAAD,CAAcye,OAAK,EAACC,KAAK,OAAOxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASue,KACxF,cAACnf,EAAD,CAAc0e,KAAK,kBAAkBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASwe,MAC7F,cAACpf,EAAD,CAAcye,OAAK,EAACC,KAAK,OAAOxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASue,KACxF,cAACnf,EAAD,CAAc0e,KAAK,mBAAmBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASye,MAC9F,cAACrf,EAAD,CAAc0e,KAAK,yBAAyBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAAS0e,MACpG,cAACtf,EAAD,CAAcye,OAAK,EAACC,KAAK,aAAaxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAAS2e,MAC9F,cAACvf,EAAD,CAAc0e,KAAK,wBAAwBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAAS4e,MACnG,cAACxf,EAAD,CAAcye,OAAK,EAACC,KAAK,gBAAgBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASue,KACjG,cAACnf,EAAD,CAAc0e,KAAK,4BAA4Bxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAAS6e,MAEvG,cAACzf,EAAD,CAAcye,OAAK,EAACC,KAAK,YAAYxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAAS8e,MAC7F,cAAC1f,EAAD,CAAc0e,KAAK,uBAAuBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAAS+e,MAClG,cAAC3f,EAAD,CAAcye,OAAK,EAACC,KAAK,cAAcxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASgf,MAC/F,cAAC5f,EAAD,CAAc0e,KAAK,yBAAyBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASif,MACpG,cAAC7f,EAAD,CAAcye,OAAK,EAACC,KAAK,YAAYxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASkf,MAC7F,cAAC9f,EAAD,CAAc0e,KAAK,uBAAuBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASmf,MAClG,cAAC/f,EAAD,CAAcye,OAAK,EAACC,KAAK,wBAAwBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASof,MACzG,cAAChgB,EAAD,CAAc0e,KAAK,mCAAmCxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASqf,MAC9G,cAACjgB,EAAD,CAAcye,OAAK,EAACC,KAAK,sBAAsBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASsf,MACvG,cAAClgB,EAAD,CAAc0e,KAAK,iCAAiCxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASuf,MAC5G,cAACngB,EAAD,CAAcye,OAAK,EAACC,KAAK,YAAYxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASwf,MAC7F,cAACpgB,EAAD,CAAc0e,KAAK,uBAAuBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAASyf,MAClG,cAACrgB,EAAD,CAAcye,OAAK,EAACC,KAAK,YAAYxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAAS0f,MAC7F,cAACtgB,EAAD,CAAc0e,KAAK,wBAAwBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAAS2f,MACnG,cAACvgB,EAAD,CAAcye,OAAK,EAACC,KAAK,iBAAiBxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAAS4f,MAClG,cAACxgB,EAAD,CAAc0e,KAAK,4BAA4Bxe,UAAW,CAAEI,OAAQqe,EAAQje,QAASke,EAAShe,QAAS6f,gBCjFnHC,IAAStgB,OACP,cAAC,IAAMugB,WAAP,UACE,cAAC,GAAD,MAEFjW,SAASkW,eAAe,W","file":"static/js/main.41554d19.chunk.js","sourcesContent":["import React, { useContext } from 'react'\r\n\r\nconst RootContext = React.createContext()\r\n\r\nexport function useRoot() {\r\n    return useContext(RootContext)\r\n} \r\n\r\nfunction login(username, password) {\r\n    const uri = `${process.env.REACT_APP_SSO_URI_API}/auth/login`\r\n    const query = {\r\n        username: username,\r\n        password: password\r\n    }\r\n\r\n    return fetchQuery(uri, query, false, \"POST\").then(data => {\r\n        if(data.status !== 200) throw new Error(data.body.message)\r\n\r\n        sessionStorage.setItem(\"token\",data.body.token)\r\n        sessionStorage.setItem(\"id\",data.body.data.id)\r\n        sessionStorage.setItem(\"username\",data.body.data.username)\r\n        sessionStorage.setItem(\"name\",data.body.data.name)\r\n        sessionStorage.setItem(\"email\",data.body.data.email)\r\n        sessionStorage.setItem(\"role\",data.body.data.role)\r\n        sessionStorage.setItem(\"employeeId\",data.body.data.employeeId)\r\n    })\r\n}\r\n\r\nfunction logout() {\r\n    const uri = `${process.env.REACT_APP_SSO_URI_API}/auth/logout`\r\n    return fetchQuery(uri, {} , true, \"POST\").then(data => {\r\n        if(data.status !== 200) throw new Error(data.body.message)\r\n\r\n        sessionStorage.removeItem(\"token\")\r\n        sessionStorage.removeItem(\"id\")\r\n        sessionStorage.removeItem(\"username\")\r\n        sessionStorage.removeItem(\"name\")\r\n        sessionStorage.removeItem(\"email\")\r\n        sessionStorage.removeItem(\"role\")\r\n        sessionStorage.removeItem(\"employeeId\")\r\n    })\r\n\r\n}\r\n\r\nfunction fetchQuery(uri, query, useToken, method) {\r\n    let options = {\r\n        method: method,\r\n        headers: { \"Content-Type\" : \"application/json\"},\r\n        body: JSON.stringify(query)\r\n    }\r\n\r\n    if(useToken) options.headers = { \"Content-Type\" : \"application/json\", \"Authorization\" : `BEARER ${sessionStorage.getItem(\"token\")}`}\r\n    \r\n    return fetch(uri, options).then(res => res.json().then(data => ({ status: res.status, body: data })))\r\n}\r\n\r\nexport function RootProvider({children}) {\r\n    const value = {\r\n        fetchQuery,\r\n        login,\r\n        logout\r\n    }\r\n\r\n    return (\r\n        <RootContext.Provider value={value}>\r\n            {children}\r\n        </RootContext.Provider>  \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest}) {    \r\n    return (\r\n        <Route\r\n        {...rest}\r\n            render={props => {\r\n                    return sessionStorage.getItem('token') !== null ? \r\n                    <>\r\n                        <Component.topbar {...props} />\r\n                        <div className=\"container-fluid mb-5\" style={{overflowY: \"auto\"}}>\r\n                            <div className=\"row mb-5\">\r\n                                <Component.sidebar {...props} />\r\n                                <main className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n                                    <div className=\"row\" style={{minHeight: \"80vh\"}}>\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"mt-5\">\r\n                                                <Component.content {...props} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </main>\r\n                            </div>\r\n                        </div>\r\n                        <footer className=\"mastfoot text-center bg-dark mb-0 py-1\" style={{position: \"fixed\"}}>\r\n                            <div className=\"inner\">\r\n                            <p>Cover template for <a href=\"https://getbootstrap.com/\">Bootstrap</a>, by <a href=\"https://www.instagram.com/mrizkyridwansyah\">M. Rizky Ridwansyah</a>.</p>\r\n                            </div>\r\n                        </footer>\r\n                    </>\r\n                    : <Redirect to=\"/login\" />\r\n                }\r\n            }\r\n        >\r\n        </Route>\r\n    )\r\n}\r\n","import React, { useState, useEffect }  from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\nexport default function TopBar() {\r\n    const [error, setError] = useState('')\r\n    const [currentUserName, setCurrentUserName] = useState(\"\")\r\n    const [currentUserRole, setCurrentUserRole] = useState(\"\")\r\n    const { logout } = useRoot()\r\n    const history = useHistory()\r\n\r\n    async function handleLogOut() {\r\n        try {\r\n            setError(\"\")            \r\n            await logout();\r\n            history.push('/login')\r\n        } catch(err){\r\n            setError(err.message)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCurrentUserName(sessionStorage.getItem(\"name\"))\r\n        setCurrentUserRole(sessionStorage.getItem(\"role\"))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\r\n                <a className=\"navbar-brand col-md-3 col-lg-2 mr-0 px-3\" href=\"/\">my Apps</a>\r\n                <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <ul className=\"navbar-nav px-3\">\r\n                    <li className=\"nav-item text-nowrap dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> { currentUserName } - { currentUserRole }</a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\" style={{position: \"absolute\"}}>\r\n                            <a className=\"dropdown-item\" href=\"/profile\">Profile</a>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <a className=\"dropdown-item\" onClick={handleLogOut}>Log Out</a>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport '../../App.css';\r\n\r\nexport default function Navigation() {\r\n    return (\r\n        // <>\r\n        //     <nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\" id=\"sidebarMenu\" style={{overflowY : \"auto\"}}>\r\n        //         <div className=\"sidebar-sticky\">\r\n        //             <ul className=\"nav flex-column\">\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link>\r\n        //                         <i className=\"fa fa-bar-chart fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Dashboard</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //             </ul>\r\n        //             {/* Recruitment */}\r\n        //             {/* <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-2 text-muted\">\r\n        //                 <span>E-Reqruitment</span>\r\n        //             </h6>\r\n        //             <ul className=\"nav flex-column\">\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link href=\"/job\">\r\n        //                         <i className=\"fa fa-database fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Job</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link href=\"/qna\">\r\n        //                         <i className=\"fa fa-question-circle fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Setup Online Test</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link href=\"/candidate\">\r\n        //                         <i className=\"fa fa-users fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Candidate</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link href=\"/applications\">\r\n        //                         <i className=\"fa fa-archive fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Applications</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //             </ul> */}\r\n        //             {/* HRIS */}\r\n        //             {/* <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-2 text-muted\">\r\n        //                 <span>Human Resource</span>\r\n        //             </h6>\r\n        //             <ul className=\"nav flex-column\">\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link href=\"/employee\">\r\n        //                         <i className=\"fa fa-users fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Employee</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link href=\"/activity\">\r\n        //                         <i className=\"fa fa-th-list fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Activity</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link href=\"/approval\">\r\n        //                         <i className=\"fa fa-check-circle fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Approval</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //             </ul> */}\r\n        //             {/* Accounting */}\r\n        //             <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-2 text-muted\">\r\n        //                 <span>Accounting</span>\r\n        //             </h6>\r\n        //             <ul className=\"nav flex-column\">\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link>\r\n        //                         <i className=\"fa fa-bank fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Account</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link>\r\n        //                         <i className=\"fa fa-link fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Link Account</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link>\r\n        //                         <i className=\"fa fa-check-circle fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Closing</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link>\r\n        //                         <i className=\"fa fa-file-text fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Report</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //             </ul>\r\n        //             {/* HRIS Setup */}\r\n        //             {/* <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-2 text-muted\">\r\n        //                 <span>Setup Human Resource</span>\r\n        //             </h6>\r\n        //             <ul className=\"nav flex-column\">\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link href=\"/division\">\r\n        //                         <i className=\"fa fa-database fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Division</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link href=\"/department\">\r\n        //                         <i className=\"fa fa-database fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Department</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link href=\"/setupapproval\">\r\n        //                         <i className=\"fa fa-cog fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Approval</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //             </ul> */}\r\n        //             {/* Setting */}\r\n        //             <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-2 text-muted\">\r\n        //                 <span>Settings (Sys-Master)</span>\r\n        //             </h6>\r\n        //             <ul className=\"nav flex-column\">\r\n        //                 {/* <li className=\"nav-item\">\r\n        //                     <Nav.Link href=\"/application\">\r\n        //                         <i className=\"fa fa-cog fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Application</span>\r\n        //                     </Nav.Link>\r\n        //                 </li> */}\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link href=\"/role\">\r\n        //                         <i className=\"fa fa-cog fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Role</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //                 {/* <li className=\"nav-item\">\r\n        //                     <Nav.Link href=\"/access\">\r\n        //                         <i className=\"fa fa-cog fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Access Role</span>\r\n        //                     </Nav.Link>\r\n        //                 </li> */}\r\n        //                 <li className=\"nav-item\">\r\n        //                     <Nav.Link href=\"/user\">\r\n        //                         <i className=\"fa fa-user fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">User</span>\r\n        //                     </Nav.Link>\r\n        //                 </li>\r\n        //             </ul>\r\n        //         </div>\r\n        //     </nav>                    \r\n        // </>\r\n        <>\r\n            <nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\" id=\"sidebarMenu\" style={{overflowY : \"auto\"}}>\r\n                <div className=\"sidebar-sticky\">\r\n                    <ul className=\"nav flex-column\">\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-bar-chart fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Dashboard</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Cash Book */}\r\n                    <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-2 text-muted\">\r\n                        <span>Cash Book</span>\r\n                    </h6>\r\n                    <ul className=\"nav flex-column\">\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-indent fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Penerimaan</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-outdent fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Pengeluaran</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Pembelian */}\r\n                    <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-2 text-muted\">\r\n                        <span>Pembelian</span>\r\n                    </h6>\r\n                    <ul className=\"nav flex-column\">\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-bank fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Pemasok</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-shopping-cart fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Pesanan</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-indent fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Penerimaan</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-undo fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Retur</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-book fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Faktur</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-usd fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Pembayaran</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Penjualan */}\r\n                    <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-2 text-muted\">\r\n                        <span>Penjualan</span>\r\n                    </h6>\r\n                    <ul className=\"nav flex-column\">\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-bank fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Pelanggan</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-outdent fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Pengiriman</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-undo fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Retur</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-book fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Faktur</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-usd fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Penerimaan</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Accounting */}\r\n                    <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-2 text-muted\">\r\n                        <span>Accounting</span>\r\n                    </h6>\r\n                    <ul className=\"nav flex-column\">\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-bank fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Account</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-book fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Jurnal</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-check-circle fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Closing</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-file-text fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Report</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Persediaan */}\r\n                    <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-2 text-muted\">\r\n                        <span>Persediaan</span>\r\n                    </h6>\r\n                    <ul className=\"nav flex-column\">\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-cog fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Satuan Barang</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link>\r\n                                <i className=\"fa fa-archive fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Barang</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Setting Perusahaan */}\r\n                    <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-2 text-muted\">\r\n                        <span>Setup Perusahaan</span>\r\n                    </h6>\r\n                    <ul className=\"nav flex-column\">\r\n                        {/* <li className=\"nav-item\">\r\n                            <Nav.Link href=\"/role\">\r\n                                <i className=\"fa fa-cog fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Data Perusahaan</span>\r\n                            </Nav.Link>\r\n                        </li> */}\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link href=\"/role\">\r\n                                <i className=\"fa fa-database fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Project</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link href=\"/role\">\r\n                                <i className=\"fa fa-list-ol fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Numerator</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link href=\"/role\">\r\n                                <i className=\"fa fa-cog fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Params</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Setting */}\r\n                    <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-2 text-muted\">\r\n                        <span>Settings (Sys-Master)</span>\r\n                    </h6>\r\n                    <ul className=\"nav flex-column\">\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link href=\"/role\">\r\n                                <i className=\"fa fa-cog fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Role</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Nav.Link href=\"/user\">\r\n                                <i className=\"fa fa-user fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">User</span>\r\n                            </Nav.Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>                    \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import { Carousel, Container} from 'react-bootstrap'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Card, Form, Button, Alert } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../RootContext'\r\n\r\nexport default function Login() {\r\n    const usernameRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useRoot()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    if(sessionStorage.getItem(\"token\")) {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        \r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await login(usernameRef.current.value, passwordRef.current.value)\r\n            history.push('/')\r\n        } catch(err) {\r\n            setError(err.message)\r\n            setLoading(false)            \r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex align-items-center justify-content-center mt-5\">\r\n                <Card className=\"w-100 mt-5\" style={{ maxWidth: \"400px\", boxShadow: \"5px 5px 5px #0062cc\"}}>\r\n                    <Card.Body>\r\n                        <h2 className=\"text-center mt-3\">Log In</h2>\r\n                        { error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group>\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control type=\"text\" ref={usernameRef} required autoFocus={true} />\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" ref={passwordRef} required />\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" className=\"w-100\" disabled={loading}>Log In</Button>\r\n                        </Form>\r\n                        <div className=\"w-100 text-center mt-3\">\r\n                            <Link to=\"/forgot-password\">Forgot Password ?</Link>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ListGroup, Badge } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function List(props) {\r\n    const {\r\n        app,\r\n        handleDelete\r\n    } = props\r\n    const history = useHistory()\r\n\r\n    function handleEdit(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/application/edit/${id}`)\r\n    }\r\n\r\n    function handleMenu(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/menu/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>{app.name}\r\n                    <Badge variant=\"danger\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={app.id} onClick={handleDelete}>Delete</Badge>\r\n                    <Badge variant=\"primary\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={app.id} onClick={handleEdit}>Edit</Badge>\r\n                    <Badge variant=\"success\" style={{float: \"right\", cursor: \"pointer\"}} data-id={app.id} onClick={handleMenu}>Menu</Badge>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Col, Button, Card, Alert } from 'react-bootstrap' \r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from './List'\r\n\r\nexport default function Index() {\r\n    const URI_API = `${process.env.REACT_APP_SSO_URI_API}/app`\r\n    const [applications, setApplications] = useState([])\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const { fetchQuery, logout } = useRoot()\r\n    const keywordRef = useRef()\r\n    const history = useHistory()\r\n\r\n    async function getApplications(search = \"\") {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                apps ${search} { id, name, desc }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n            setError(data.body.message)\r\n            } else {\r\n                setApplications(data.body.data.apps)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    async function handleSearch(e) {\r\n        e.preventDefault()\r\n        let search = `(search: \"${keywordRef.current.value}\")`\r\n        getApplications(search)\r\n    }\r\n\r\n    async function handleDelete(e) {\r\n        e.preventDefault()\r\n        if(window.confirm(\"Are you sure want to delete this data?\")) {\r\n            setLoading(true)\r\n            setError(\"\")\r\n            const id = e.target.dataset.id\r\n            fetchQuery(`${URI_API}/${id}`, {}, true, \"DELETE\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setHasChanged(!hasChanged)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getApplications()\r\n    }, [hasChanged])\r\n\r\n    return (\r\n        <>\r\n            <h3>Application</h3>\r\n            <div className=\"mt-4\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Link to=\"/application/add\" className=\"btn btn-primary\">Add New Application</Link>\r\n                    <Form className=\"mt-4\">\r\n                        <Form.Row onSubmit={handleSearch}>\r\n                            <Col md=\"6\">\r\n                                <Form.Group>\r\n                                    <Form.Control type=\"text\" ref={keywordRef} placeholder=\"Search by Name\" onChange={handleSearch} disabled={loading}></Form.Control>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                                <Form.Group>\r\n                                    <Button variant=\"success\" type=\"submit\" disabled={loading}>Search</Button>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form>\r\n                    {\r\n                        applications.length > 0 ?\r\n                        <Card style={{ width: \"30em\"}} className=\"mt-4\">\r\n                            {\r\n                                applications.map(app => {\r\n                                    return <List key={app.id} app={app} handleDelete={handleDelete}></List>\r\n                                })\r\n                            }\r\n                        </Card>\r\n                        : \r\n                        <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                            <span>No Data</span>\r\n                        </div>\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form,Col, Button, Alert } from 'react-bootstrap'\r\nimport { useParams, useHistory, Link } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\nexport default function Forms() {\r\n    let URI_API = `${process.env.REACT_APP_SSO_URI_API}/app/`\r\n    let method = \"POST\"\r\n    const { type, id } = useParams()\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [error, setError] = useState(\"\")    \r\n    const [currentName, setCurrentName] = useState(\"\")\r\n    const [currentDesc, setCurrentDesc] = useState(\"\")\r\n    const nameRef = useRef()\r\n    const descRef = useRef()\r\n    const history = useHistory()\r\n    const { fetchQuery, logout } = useRoot()\r\n\r\n    useEffect(() => {\r\n        if(type === \"edit\") {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            const query = {\r\n                query : `query {\r\n                    app (id: \"${id}\") { id, name, desc }\r\n                }`\r\n            }\r\n    \r\n            fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n                console.log(data)\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setCurrentName(data.body.data.app.name)\r\n                    setCurrentDesc(data.body.data.app.desc)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        const query = {\r\n            name: nameRef.current.value,\r\n            desc: descRef.current.value\r\n        }\r\n        \r\n        if(type === \"edit\") {\r\n            URI_API = `${URI_API}${id}`\r\n            method = \"PUT\"\r\n        }\r\n\r\n        fetchQuery(URI_API, query, true, method).then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setHasChanged(!hasChanged)\r\n                setError(\"\")\r\n                history.push(\"/application\")\r\n            }\r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{ type.charAt(0).toUpperCase() + type.slice(1) } Application</h3>\r\n            { error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <Col md=\"5\">\r\n                    <Form.Group>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={nameRef} defaultValue={currentName} autoFocus={true} disabled={loading} required={true} />\r\n                    </Form.Group>                \r\n                    <Form.Group>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" ref={descRef} defaultValue={currentDesc} rows={3} disabled={loading} required={true} />\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" className=\"mr-2\" disabled={loading}>Submit</Button>\r\n                    { !loading && <Link to=\"/application\" className=\"btn btn-danger\" disabled={loading}>Cancel</Link>}                    \r\n                </Col>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { ListGroup, Badge, Collapse } from 'react-bootstrap'\r\n\r\nexport default function ListMenu(props) {\r\n    const {\r\n        menu,\r\n        menus,\r\n        handleDelete,\r\n        handleEdit\r\n    } = props\r\n    const [open, setOpen] = useState(false)\r\n    const childMenus = menus.filter(x => x.parent === menu.name )\r\n    console.log(childMenus)\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>{menu.name}\r\n                    <Badge variant=\"danger\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} onClick={handleDelete} data-id={menu.id}>Delete</Badge>\r\n                    <Badge variant=\"primary\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} onClick={handleEdit} data-id={menu.id}>Edit</Badge>\r\n                    <Badge variant=\"secondary\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} onClick={() => setOpen(prevOpen => !prevOpen) }>{open ? \"Hide\" : \"Show\"} Detail</Badge>\r\n                    <Collapse in={open}>\r\n                        <ul className=\"mt-2\">\r\n                            {\r\n                                childMenus.map(child => {\r\n                                    return <li key={child.id}>{ child.name }\r\n                                        <Badge variant=\"danger\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={child.id} onClick={handleDelete}>Delete</Badge>\r\n                                        <Badge variant=\"primary\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={child.id} onClick={handleEdit}>Edit</Badge>\r\n                                    </li>\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </Collapse>\r\n                </ListGroup.Item>\r\n            </ListGroup>            \r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Form, Col, Button, Row, Card, Alert } from 'react-bootstrap'\r\nimport { Link, useHistory, useParams} from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport ListMenu from './ListMenu'\r\n\r\nexport default function Menu() {\r\n    let URI_API = `${process.env.REACT_APP_SSO_URI_API}/menu/`\r\n    let method = \"POST\"\r\n    const [menus, setMenus] = useState([])\r\n    const [parentMenus, setParentMenus] = useState([])\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [currentApplication, setCurrentApplication] = useState(\"\")\r\n    const [currentIdMenu, setCurrentIdMenu] = useState(\"\")\r\n    const [currentName, setCurrentName] = useState(\"\")\r\n    const [currentEntry, setCurrentEntry] = useState(\"\")\r\n    const [currentLogo, setCurrentLogo] = useState(\"\")\r\n    const [currentParent, setCurrentParent] = useState(\"\")\r\n    const nameRef = useRef()\r\n    const entryRef = useRef()\r\n    const logoRef = useRef()\r\n    const parentRef = useRef()\r\n    const history = useHistory()\r\n    const { id } = useParams()\r\n    const { fetchQuery, logout } = useRoot()\r\n\r\n    function getMenu() {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query= {\r\n            query: `query{\r\n                app(id: \"${id}\") { id, name },\r\n                menus(idApp: \"${id}\") { id, name, app, entryPoint, logo, parent }              \r\n            }`\r\n        }\r\n        fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, method).then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setCurrentApplication(data.body.data.app.name)\r\n                setMenus(data.body.data.menus)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        \r\n        setLoading(false)\r\n    }\r\n\r\n    function getParentMenu() {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query= {\r\n            query: `query{\r\n                menus(idApp: \"${id}\", parent: true) { id, name, app, entryPoint, logo, parent }              \r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, method).then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setParentMenus(data.body.data.menus)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        \r\n        setLoading(false)\r\n    }\r\n\r\n    function getSingleMenu(idMenu) {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query= {\r\n            query: `query{\r\n                menu(id: \"${idMenu}\") { id, name, app, entryPoint, logo, parent }              \r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, method).then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setCurrentIdMenu(data.body.data.menu.id)\r\n                setCurrentName(data.body.data.menu.name)\r\n                setCurrentEntry(data.body.data.menu.entryPoint)\r\n                setCurrentLogo(data.body.data.menu.logo)\r\n                setCurrentParent(data.body.data.menu.parent)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        \r\n        setLoading(false)\r\n    }\r\n\r\n    function handleEdit(e){\r\n        setEditMode(true)\r\n        const id = e.target.dataset.id\r\n        getSingleMenu(id)\r\n    }\r\n\r\n    function handleDelete(e) {\r\n        if(window.confirm(\"Are you sure want delete this menu?\")) {\r\n            setLoading(true)\r\n            setError(\"\")\r\n            const idMenu = e.target.dataset.id\r\n            fetchQuery(`${URI_API}${idMenu}`, {}, true, \"DELETE\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setHasChanged(!hasChanged)\r\n                    setError(\"\")\r\n                }\r\n            })\r\n            setEditMode(false)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        const query = {\r\n            name: nameRef.current.value,\r\n            entryPoint: entryRef.current.value\r\n        }\r\n\r\n        if(parentRef.current.value !== \"-\") query.parent = parentRef.current.value\r\n        if(logoRef.current.value !== \"\") query.logo = logoRef.current.value\r\n\r\n        if(editMode) {\r\n            URI_API = `${URI_API}${currentIdMenu}`\r\n            method = \"PUT\"\r\n        } else {            \r\n            query.application = id\r\n        }\r\n        fetchQuery(URI_API, query, true, method).then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setError(\"\")\r\n                window.location.reload();\r\n            }\r\n        })\r\n        setEditMode(false)\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMenu()\r\n        getParentMenu()\r\n    }, [hasChanged])\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"mb-4\">Setup Menu { currentApplication }</h3>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>} \r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Col md=\"8\">\r\n                            <Form.Group>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control type=\"text\" ref={nameRef} autoFocus={true} disabled={loading} required={true} defaultValue={currentName} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"8\">\r\n                            <Form.Row>\r\n                                <Col md=\"6\">\r\n                                    <Form.Group>\r\n                                        <Form.Label>Entry Point</Form.Label>\r\n                                        <Form.Control type=\"text\" ref={entryRef} disabled={loading} required={true} defaultValue={currentEntry} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col md=\"6\">\r\n                                    <Form.Group>\r\n                                        <Form.Label>Logo</Form.Label>\r\n                                        <Form.Control type=\"text\" ref={logoRef} disabled={loading} defaultValue={currentLogo} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Form.Row>\r\n                        </Col>\r\n                        <Col md=\"8\">\r\n                            <Form.Group>\r\n                                <Form.Label>Parent Menu</Form.Label>\r\n                                <Form.Control as=\"select\" ref={parentRef} value={currentParent} onChange={ e => setCurrentParent(e.target.value)}>\r\n                                    <option value=\"-\">Select Menu</option>\r\n                                    {\r\n                                        parentMenus.map(parent => {\r\n                                            return <option key={parent.id} value={parent.name}>{parent.name}</option>\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"8\">\r\n                            <Button type=\"submit\" className=\"mr-2\" disabled={loading}>Submit</Button>\r\n                            { !loading && <Link to=\"/application\" className=\"btn btn-danger\" disabled={loading}>Cancel</Link>}                    \r\n                        </Col>\r\n                    </Form>\r\n                </Col>                \r\n                <Col md=\"4\" style={{ borderLeft: \".25em solid\"}}>\r\n                    <h5 className=\"text-muted mb-4\">List Menu { currentApplication }</h5>\r\n                    {\r\n                        menus.length > 0 ?\r\n                        <Card>\r\n                        {\r\n                            menus.map(menu => {\r\n                                if(!menu.parent) {\r\n                                    return <ListMenu key={menu.id} menu={menu} menus={menus} handleDelete={handleDelete} handleEdit={handleEdit}></ListMenu>                        \r\n                                }\r\n                            })\r\n                        }\r\n                        </Card>\r\n                        : \r\n                        <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                            <span>No Data</span>\r\n                        </div>\r\n                    }  \r\n                </Col>            \r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ListGroup, Badge } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function List(props) {\r\n    const {\r\n        role,\r\n        handleDelete\r\n    } = props\r\n    const history = useHistory()\r\n\r\n    function handleEdit(e){\r\n        const id = e.target.dataset.id\r\n        history.push(`/role/edit/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>{role.name}\r\n                    <Badge variant=\"danger\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={role.id} onClick={handleDelete}>Delete</Badge>\r\n                    <Badge variant=\"primary\" style={{float: \"right\", cursor: \"pointer\"}} data-id={role.id} onClick={handleEdit}>Edit</Badge>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Col, Button, Card, Alert } from 'react-bootstrap' \r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from './List'\r\n\r\nexport default function Index() {\r\n    const URI_API = `${process.env.REACT_APP_SSO_URI_API}/role`\r\n    const [roles, setRoles] = useState([])\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const { fetchQuery, logout } = useRoot()\r\n    const keywordRef = useRef()\r\n    const history = useHistory()\r\n\r\n    async function getRoles(search = \"\") {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                roles ${search} { id, name }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setRoles(data.body.data.roles)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    function handleSearch(e) {\r\n        e.preventDefault()\r\n        let search = `(search: \"${keywordRef.current.value}\")`\r\n        getRoles(search)\r\n    }\r\n\r\n    function handleDelete(e) {\r\n        e.preventDefault()\r\n        if(window.confirm(\"Are you sure want to delete this data?\")) {\r\n            setLoading(true)\r\n            setError(\"\")\r\n            const id = e.target.dataset.id\r\n            fetchQuery(`${URI_API}/${id}`, {}, true, \"DELETE\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setHasChanged(!hasChanged)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRoles()\r\n    }, [hasChanged])\r\n\r\n    return (\r\n        <>\r\n            <h3>Roles</h3>\r\n            <div className=\"mt-4\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Link to=\"/role/add\" className=\"btn btn-primary\">Add New Role</Link>\r\n                <Form className=\"mt-4\" onSubmit={handleSearch}>\r\n                    <Form.Row>\r\n                        <Col md=\"5\">\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\" ref={keywordRef} onChange={handleSearch} disabled={loading} placeholder=\"Search by Name\"></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" type=\"submit\" disabled={loading}>Search</Button>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                    {\r\n                        roles.length > 0 ?\r\n                        <Card style={{ width: '25em' }} className=\"mt-4\">\r\n                            { \r\n                                roles.map(role => {\r\n                                    return <List key={role.id} role={role} handleDelete={handleDelete}></List>\r\n                                })\r\n                            }       \r\n                        </Card>\r\n                        : \r\n                        <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                            <span>No Data</span>\r\n                        </div>\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form,Col, Button, Alert } from 'react-bootstrap'\r\nimport { useParams, useHistory, Link } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\nexport default function Forms() {\r\n    let URI_API = `${process.env.REACT_APP_SSO_URI_API}/role/`\r\n    let method = \"POST\"\r\n    const { type, id } = useParams()\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [error, setError] = useState(\"\")    \r\n    const [currentName, setCurrentName] = useState(\"\")\r\n    const nameRef = useRef()\r\n    const history = useHistory()\r\n    const { fetchQuery, logout } = useRoot()\r\n\r\n    useEffect(() => {\r\n        if(type === \"edit\") {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            const query = {\r\n                query : `query {\r\n                    role (id: \"${id}\") { id, name }\r\n                }`\r\n            }\r\n    \r\n            fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setCurrentName(data.body.data.role.name)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        const query = { name: nameRef.current.value }\r\n        \r\n        if(type === \"edit\") {\r\n            URI_API = `${URI_API}${id}`\r\n            method = \"PUT\"\r\n        }\r\n\r\n        fetchQuery(URI_API, query, true, method).then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setHasChanged(!hasChanged)\r\n                setError(\"\")\r\n                history.push(\"/role\")\r\n            }\r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{ type.charAt(0).toUpperCase() + type.slice(1) } Role</h3>\r\n            { error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <Col md=\"5\">\r\n                    <Form.Group>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={nameRef} defaultValue={currentName} autoFocus={true} disabled={loading} required={true} />\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" className=\"mr-2\" disabled={loading}>Submit</Button>\r\n                    { !loading && <Link to=\"/role\" className=\"btn btn-danger\" disabled={loading}>Cancel</Link>}                    \r\n                </Col>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Button, Alert, Badge } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\nexport default function FormAccess() {\r\n    const URI_API = `${process.env.REACT_APP_SSO_URI_API}/access`\r\n    const [applications, setApplications] = useState([])\r\n    const [roles, setRoles] = useState([])\r\n    const [access, setStateAccess] = useState([])\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const { fetchQuery, logout } = useRoot()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getRolesApplication()\r\n    }, [])\r\n\r\n    async function getRolesApplication() {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                roles { id, name },\r\n                apps { id, name, menu { id, name, parent } }\r\n                accessRole {id, role, app, menu }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setStateAccess(data.body.data.accessRole)\r\n                setRoles(data.body.data.roles)\r\n                setApplications(data.body.data.apps)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()       \r\n        setError(\"\")\r\n        setLoading(true) \r\n        const jml = e.target.length\r\n        let arrAccess = []\r\n        for(let i = 0; i < jml - 1; i++) {\r\n            if(e.target[i].name === \"menu[]\") {\r\n                const role = e.target[i].dataset.role            \r\n                const app = e.target[i].dataset.app\r\n                const isChecked = e.target[i].checked\r\n                const menu = e.target[i].value\r\n                if(isChecked) {\r\n                    arrAccess.push({\r\n                        role: role,\r\n                        app: app,\r\n                        menu: menu \r\n                    })\r\n                }\r\n            }\r\n        }        \r\n        const query = { data: arrAccess }\r\n        fetchQuery(URI_API, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setError(\"\")\r\n                window.location.reload()\r\n            }\r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    function setChecked(role, app, menu) {\r\n        return access.filter(x => x.role === role && x.app === app && x.menu === menu).length > 0\r\n    }\r\n    \r\n    function setCheckedRole(e) {\r\n        document.querySelectorAll(\"input[name='menu[]']\").forEach(x => {\r\n            if(x.dataset.role === e.target.dataset.role) {\r\n                x.checked = e.target.checked\r\n            }\r\n        })\r\n        // return ackcess.filter(x => x.role === role && x.app === app && x.menu === menu).length > 0\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"mb-4\">Setup Access Role</h3>\r\n            { error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n            <table className=\"table table-bordered table-hover text-center wrap-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <td rowSpan=\"3\" colSpan=\"2\">#</td>\r\n                        {\r\n                            applications.map(application => {                                                  \r\n                                return <td colSpan={application.menu.filter(x=> x.parent !== null).length} key={application.id} style={{whiteSpace:\"nowrap\"}}>{application.name}</td>\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        {\r\n                            applications.map(application => {\r\n                                const menus = application.menu\r\n                                { if(menus.length === 0)  return <td></td> }\r\n                                return menus.map(menu => {   \r\n                                    { if(menu.parent === null) return <td colSpan={menus.filter(x => x.parent === menu.name).length } key={menu.id} style={{whiteSpace:\"nowrap\"}}>{menu.name}</td>\r\n                                    }\r\n                                })\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        {\r\n                            applications.map(application => {\r\n                                const menus = application.menu\r\n                                { if(menus.length === 0)  return <td></td> }\r\n                                return menus.map(menu => {   \r\n                                    { if(menu.parent !== null) return <td style={{whiteSpace:\"nowrap\"}} key={menu.id}>{menu.name}</td>\r\n                                    }\r\n                                })\r\n                            })\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        roles.map(role => {\r\n                            return <tr>\r\n                                <td style={{whiteSpace: \"nowrap\"}}>{role.name}</td>\r\n                                <td>\r\n                                    <input type=\"checkbox\" style={{marginLeft: \"0\"}} className=\"form-check-input position-static\" data-role={role.name} onChange={setCheckedRole}></input>\r\n                                </td>\r\n                                { \r\n                                    applications.map(application => { \r\n                                        return application.menu.map((menu, index) => {\r\n                                            { if(menu.parent !== null) return <td>\r\n                                                <Form.Check data-role={role.name} data-app={application.name} value={menu.name} name=\"menu[]\" defaultChecked={setChecked(role.name, application.name, menu.name)}></Form.Check>\r\n                                            </td> }\r\n                                        }) \r\n                                    })\r\n                                } \r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n\r\n                </tfoot>\r\n            </table>\r\n            <Button type=\"submit\" disabled={loading}>Mapping Access</Button>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ListGroup, Badge } from 'react-bootstrap'\r\nimport { useHistory} from 'react-router-dom'\r\n\r\nexport default function List(props) {\r\n\r\n    const {\r\n        user,\r\n        from,\r\n        handleDelete,\r\n        handleUpdateStatus,\r\n        handleChoose\r\n    } = props\r\n    const history = useHistory()\r\n\r\n    function handleEdit(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/user/edit/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>{user.name} ({user.role})\r\n                    { \r\n                        window.location.pathname.split(\"/\")[1] === \"setupapproval\" &&  \r\n                        <Badge variant=\"primary\" style={{float: \"right\", cursor: \"pointer\"}} data-id={user.id} onClick={handleChoose} >Choose</Badge>\r\n                    }\r\n                    {\r\n                        window.location.pathname.split(\"/\")[1] !== \"setupapproval\" &&\r\n                        <>\r\n                            <Badge variant={user.activeFlag ? \"secondary\" : \"success\"} className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-status={user.activeFlag} data-id={user.id} onClick={handleUpdateStatus} >{user.activeFlag ? \"Disable\" : \"Activate\"}</Badge>\r\n                            <Badge variant=\"danger\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={user.id} onClick={handleDelete}>Delete</Badge>\r\n                            <Badge variant=\"primary\" style={{float: \"right\", cursor: \"pointer\"}} data-id={user.id} onClick={handleEdit}>Edit</Badge>\r\n                        </>\r\n                    }\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Col, Button, Card, Alert } from 'react-bootstrap' \r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from './List'\r\n\r\nexport default function Index() {\r\n    const URI_API = `${process.env.REACT_APP_SSO_URI_API}/user`\r\n    const [users, setUsers] = useState([])\r\n    const [roles, setRoles] = useState([])\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const { fetchQuery, logout } = useRoot()\r\n    const keywordRef = useRef()\r\n    const statusRef = useRef()\r\n    const roleRef = useRef()\r\n    const history = useHistory()\r\n\r\n    async function getRoles(search = \"\") {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                roles ${search} { id, name }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            console.log(data)\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setRoles(data.body.data.roles)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    async function getUsers(search = \"\") {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                users ${search} { id, username, name, email, role, activeFlag }\r\n            }`\r\n        }\r\n        fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setUsers(data.body.data.users)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    function handleSearch(e) {\r\n        e.preventDefault()\r\n        let active = (statusRef.current.value !== \"\") ? `, active: ${statusRef.current.value}`: \"\"\r\n        let role = (roleRef.current.value !== \"\") ? `, role: \"${roleRef.current.value}\"`: \"\"\r\n        let search = `(search: \"${keywordRef.current.value}\"${active}${role})`\r\n        getUsers(search)\r\n    }\r\n\r\n    function handleDelete(e) {\r\n        e.preventDefault()\r\n        if(window.confirm(\"Are you sure want to delete this data?\")) {\r\n            const id = e.target.dataset.id\r\n            fetchQuery(`${URI_API}/${id}`, {}, true, \"DELETE\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setHasChanged(!hasChanged)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    function handleUpdateStatus(e) {\r\n        e.preventDefault()\r\n        const status = e.target.dataset.status === \"true\"\r\n        let action = status ? \"block\" : \"activate\"\r\n        if(window.confirm(`Are you sure want to ${action} this user?`)) {\r\n            setLoading(true)\r\n            setError(\"\")\r\n            const id = e.target.dataset.id\r\n            fetchQuery(`${URI_API}/updatestatus/${id}`, {}, true, \"PUT\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setHasChanged(!hasChanged)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers()\r\n        getRoles()\r\n    }, [hasChanged])\r\n\r\n    return (\r\n        <>\r\n            <h3>Users</h3>\r\n            <div className=\"mt-4\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Link to=\"/user/add\" className=\"btn btn-primary\">Add New User</Link>\r\n                <Form className=\"mt-4\" onSubmit={handleSearch}>\r\n                    <Form.Row>\r\n                        <Col md=\"5\">\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\" ref={keywordRef} onChange={handleSearch} disabled={loading} placeholder=\"Search by Name\"></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Form.Group>\r\n                                <Form.Control as=\"select\" ref={statusRef} onChange={handleSearch} >\r\n                                    <option value=\"\">All Status</option>\r\n                                    <option value=\"true\">Active</option>\r\n                                    <option value=\"false\">Inactive</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Form.Group>\r\n                                <Form.Control as=\"select\" ref={roleRef} onChange={handleSearch} >\r\n                                    <option value=\"\">All Role</option>\r\n                                    {\r\n                                        roles.map(role => {\r\n                                            return <option value={role.name}>{role.name}</option>                                            \r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" type=\"submit\" disabled={loading}>Search</Button>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                    {                        \r\n                        users.length > 0 ? \r\n                        <Card style={{ width: '40em' }} className=\"mt-4\">\r\n                            { \r\n                                users.map(user => {\r\n                                    if(user.id !== sessionStorage.getItem(\"id\")) {\r\n                                        return <List key={user.id} user={user} handleDelete={handleDelete} handleUpdateStatus={handleUpdateStatus}></List>\r\n                                    }\r\n                                }) \r\n                            }\r\n                        </Card>\r\n                        : \r\n                        <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                            <span>No Data</span>\r\n                        </div>\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form,Col, Button, Alert } from 'react-bootstrap'\r\nimport { useParams, useHistory, Link } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\nexport default function Forms() {\r\n    let URI_API = `${process.env.REACT_APP_SSO_URI_API}/user/`\r\n    let method = \"POST\"\r\n    const { type, id } = useParams()\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [error, setError] = useState(\"\")    \r\n    const [currentName, setCurrentName] = useState(\"\")\r\n    const [currentEmail, setCurrentEmail] = useState(\"\")\r\n    const [currentUsername, setCurrentUsername] = useState(\"\")\r\n    const [currentRole, setCurrentRole] = useState(\"\")\r\n    const [roles, setRoles] = useState([])\r\n    const nameRef = useRef()\r\n    const emailRef = useRef()\r\n    const usernameRef = useRef()\r\n    const passwordRef = useRef()\r\n    const confirmPasswordRef = useRef()\r\n    const roleRef = useRef()\r\n    const history = useHistory()\r\n    const { fetchQuery, logout } = useRoot()\r\n\r\n    useEffect(() => {\r\n        getRoles()\r\n\r\n        if(type === \"edit\") {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            const query = {\r\n                query : `query {\r\n                    user (id: \"${id}\") { id, name, username, email, role }\r\n                }`\r\n            }\r\n    \r\n            fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setCurrentName(data.body.data.user.name)\r\n                    setCurrentRole(data.body.data.user.role)\r\n                    setCurrentUsername(data.body.data.user.username)\r\n                    setCurrentEmail(data.body.data.user.email)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    function getRoles() {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                roles { id, name }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setRoles(data.body.data.roles)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        const query = {\r\n            username: usernameRef.current.value,\r\n            name: nameRef.current.value,\r\n            email: emailRef.current.value,\r\n            role: roleRef.current.value\r\n        }\r\n        \r\n        if(passwordRef.current.value !== \"\" && confirmPasswordRef.current.value !== \"\") {\r\n            query.password = passwordRef.current.value\r\n            query.confirmPassword = confirmPasswordRef.current.value\r\n        }\r\n\r\n        if(type === \"edit\") {\r\n            URI_API = `${URI_API}${id}`\r\n            method = \"PUT\"\r\n        }\r\n\r\n        fetchQuery(URI_API, query, true, method).then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setHasChanged(!hasChanged)\r\n                setError(\"\")\r\n                history.push(\"/user\")\r\n            }\r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{ type.charAt(0).toUpperCase() + type.slice(1) } User</h3>\r\n            { error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <Col md=\"6\">\r\n                    <Form.Group>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={nameRef} defaultValue={currentName} autoFocus={true} disabled={loading} required={true} />\r\n                    </Form.Group>                \r\n                    <Form.Group>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} defaultValue={currentEmail} disabled={loading} required={true} />\r\n                    </Form.Group>                \r\n                    <Form.Row>       \r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control type=\"text\" ref={usernameRef} defaultValue={currentUsername} disabled={loading} required={true} />\r\n                            </Form.Group>                \r\n                        </Col>       \r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Role</Form.Label>\r\n                                <Form.Control as=\"select\" ref={roleRef} disabled={loading} value={currentRole} onChange={ e => setCurrentRole(e.target.value)}>\r\n                                    <option value=\"\" hidden>Select Role</option>\r\n                                    {\r\n                                        roles.map(role => {\r\n                                            return <option key={role.id} value={role.name}>{role.name}</option>\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>                \r\n                        </Col>      \r\n                    </Form.Row>\r\n                    <Form.Row>       \r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" ref={passwordRef} disabled={loading} />\r\n                            </Form.Group>                \r\n                        </Col>       \r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Confirmation Password</Form.Label>\r\n                                <Form.Control type=\"password\" ref={confirmPasswordRef} disabled={loading} />\r\n                            </Form.Group>                \r\n                        </Col>      \r\n                    </Form.Row>\r\n                    <Button type=\"submit\" className=\"mr-2\" disabled={loading}>Submit</Button>\r\n                    { !loading && <Link to=\"/user\" className=\"btn btn-danger\" disabled={loading}>Cancel</Link>}                    \r\n                </Col>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form,Col, Button, Alert } from 'react-bootstrap'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\nexport default function Profile() {\r\n    let URI_API = `${process.env.REACT_APP_SSO_URI_API}/user/`\r\n    let method = \"PUT\"\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [error, setError] = useState(\"\")    \r\n    const [currentName, setCurrentName] = useState(\"\")\r\n    const [currentEmail, setCurrentEmail] = useState(\"\")\r\n    const [currentUsername, setCurrentUsername] = useState(\"\")\r\n    const nameRef = useRef()\r\n    const emailRef = useRef()\r\n    const usernameRef = useRef()\r\n    const passwordRef = useRef()\r\n    const confirmPasswordRef = useRef()\r\n    const history = useHistory()\r\n    const { fetchQuery, logout } = useRoot()\r\n    const id = sessionStorage.getItem(\"id\")\r\n\r\n    useEffect(() => {\r\n        getUser()\r\n    }, [])\r\n\r\n    function getUser() {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                user (id: \"${id}\") { id, name, username, email, role }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setCurrentName(data.body.data.user.name)\r\n                setCurrentUsername(data.body.data.user.username)\r\n                setCurrentEmail(data.body.data.user.email)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError(\"\")\r\n        URI_API = `${URI_API}${id}`\r\n\r\n        const query = {\r\n            username: usernameRef.current.value,\r\n            name: nameRef.current.value,\r\n            email: emailRef.current.value,\r\n            role: sessionStorage.getItem(\"role\")\r\n        }\r\n        \r\n        if(passwordRef.current.value !== \"\" && confirmPasswordRef.current.value !== \"\") {\r\n            query.password = passwordRef.current.value\r\n            query.confirmPassword = confirmPasswordRef.current.value\r\n        }\r\n\r\n        fetchQuery(URI_API, query, true, method).then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setHasChanged(!hasChanged)\r\n                setError(\"\")\r\n                history.push(\"/\")\r\n            }\r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>Profile</h3>\r\n            { error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <Col md=\"6\">\r\n                    <Form.Group>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={nameRef} defaultValue={currentName} autoFocus={true} disabled={loading} required={true} />\r\n                    </Form.Group>\r\n                    <Form.Row>       \r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control type=\"text\" ref={usernameRef} defaultValue={currentUsername} disabled={loading} required={true} />\r\n                            </Form.Group>                \r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" ref={emailRef} defaultValue={currentEmail} disabled={loading} required={true} />\r\n                            </Form.Group>                \r\n                        </Col>      \r\n                    </Form.Row>\r\n                    <Form.Row>       \r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" ref={passwordRef} disabled={loading} />\r\n                            </Form.Group>                \r\n                        </Col>       \r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Confirmation Password</Form.Label>\r\n                                <Form.Control type=\"password\" ref={confirmPasswordRef} disabled={loading} />\r\n                            </Form.Group>                \r\n                        </Col>      \r\n                    </Form.Row>\r\n                    <Button type=\"submit\" className=\"mr-2\" disabled={loading}>Submit</Button>\r\n                    { !loading && <Link to=\"/\" className=\"btn btn-danger\" disabled={loading}>Cancel</Link>}                    \r\n                </Col>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { useHistory} from 'react-router-dom'\r\n\r\nexport default function List(props) {\r\n\r\n    const {\r\n        job,\r\n        handleClose,\r\n        handlePublish\r\n    } = props\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const history = useHistory()\r\n\r\n    function handleEdit(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/job/edit/${id}`)\r\n    }\r\n\r\n    function gotoQuestion(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/qna/list/${id}`)\r\n    }\r\n\r\n    function gotoApplications(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/applications/list/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"col-md-8 mt-3\">\r\n                <Card.Body>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div>\r\n                            <Card.Title>\r\n                                {job.type} - {job.title}\r\n                                {/* Job Action */}\r\n                                { job.closedFlag === \"false\" && window.location.pathname === \"/job\" && \r\n                                <Badge variant=\"danger\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} onClick={handleClose} data-id={job.id}>Closed</Badge> }\r\n                                { job.publishedFlag === \"false\" && window.location.pathname === \"/job\" && job.closedFlag === \"false\" && \r\n                                <Badge variant=\"success\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} onClick={handlePublish} data-id={job.id}>Published</Badge> }\r\n                                { window.location.pathname === \"/job\" &&\r\n                                <Badge variant=\"primary\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} onClick={handleEdit} data-id={job.id}>Edit</Badge> }\r\n\r\n                                {/* QnA Action */}\r\n                                { window.location.pathname === \"/qna\" &&\r\n                                <Badge variant=\"primary\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} onClick={gotoQuestion} data-id={job.id}>Question</Badge> }\r\n\r\n                                {/* Job Application Action */}\r\n                                { window.location.pathname === \"/applications\" &&\r\n                                <Badge variant=\"primary\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} onClick={gotoApplications} data-id={job.id}>Applications</Badge> \r\n                                }\r\n                            </Card.Title>\r\n                            <Card.Subtitle className=\"text-muted mb-2\">\r\n                                { job.createAt }\r\n                            </Card.Subtitle>\r\n                            <div style={{wordBreak: 'break-all'}}>\r\n                                <ReactMarkdown source={ job.desc } />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Card.Text>                        \r\n                        <Button variant=\"link\" className=\"btn-sm\" onClick={() => setOpen(prevOpen => !prevOpen)}>\r\n                            {open ? \"Hide Details\" : \"View Details\"}\r\n                        </Button>\r\n                    </Card.Text>\r\n                    <Collapse in={open}>\r\n                        <div className=\"mt-4\">\r\n                            <ReactMarkdown children={job.requirement} allowDangerousHtml={true} />\r\n                        </div>\r\n                    </Collapse>\r\n                </Card.Body>\r\n            </Card>      \r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Col, Button, Card, Alert } from 'react-bootstrap' \r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from './List'\r\n\r\nexport default function Index() {\r\n    const URI_API = `${process.env.REACT_APP_REQRUITMENT_URI_API}/job`\r\n    const [jobs, setJobs] = useState([])\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const { fetchQuery, logout } = useRoot()\r\n    const keywordRef = useRef()\r\n    const statusRef = useRef()\r\n    const history = useHistory()\r\n\r\n    async function getJobs(search = \"\") {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                jobs ${search} { id, title, desc, requirement, type, minRate, maxRate, publishedFlag, closedFlag, createAt }\r\n            }`\r\n        }\r\n        fetchQuery(process.env.REACT_APP_REQRUITMENT_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setJobs(data.body.data.jobs)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    function handleSearch(e) {\r\n        e.preventDefault()\r\n\r\n        let statusSearch = \"\"\r\n        if(statusRef.current.value === \"published\") statusSearch += \", published: true\"\r\n        if(statusRef.current.value === \"closed\") statusSearch += \", closed: true\"\r\n        let search = `(keyword: \"${keywordRef.current.value}\" ${statusSearch})`\r\n\r\n        getJobs(search)\r\n    }\r\n\r\n    function handleClose(e) {\r\n        e.preventDefault()\r\n        if(window.confirm(`Are you sure want to close this job?`)) {\r\n            const id = e.target.dataset.id\r\n            console.log(id)\r\n            handleUpdate(\"close\", id)\r\n        }\r\n\r\n    }\r\n\r\n    function handlePublish(e) {\r\n        e.preventDefault()\r\n        if(window.confirm(`Are you sure want to publish this job?`)) {\r\n            const id = e.target.dataset.id\r\n            handleUpdate(\"publish\", id)\r\n        }\r\n    }\r\n\r\n    function handleUpdate(type, id) {\r\n        setLoading(true)\r\n        setError(\"\")\r\n        fetchQuery(`${URI_API}/${type}/${id}`, {}, true, \"PUT\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setHasChanged(!hasChanged)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getJobs()\r\n    }, [hasChanged])\r\n\r\n    return (\r\n        <>\r\n            <h3>\r\n                { window.location.pathname === \"/job\" ? \"Jobs\" \r\n                : window.location.pathname === \"/qna\" ? \"Question & Answer\" \r\n                : window.location.pathname === \"/applications\" ? \"Job Applications\" \r\n                : \"\" }\r\n            </h3>\r\n            <div className=\"mt-4\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                {\r\n                    window.location.pathname === \"/job\" &&\r\n                    <Link to=\"/job/add\" className=\"btn btn-primary\">Add New Job</Link>\r\n                }\r\n                <Form className=\"mt-4\" onSubmit={handleSearch}>\r\n                    <Form.Row>\r\n                        <Col md=\"5\">\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\" ref={keywordRef} onChange={handleSearch} disabled={loading} placeholder=\"Search by Name\"></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Form.Group>\r\n                                <Form.Control as=\"select\" ref={statusRef} onChange={handleSearch} >\r\n                                    <option value=\"\">All Status</option>\r\n                                    <option value=\"closed\">Closed</option>\r\n                                    <option value=\"published\">Published</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" type=\"submit\" disabled={loading}>Search</Button>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                    {                        \r\n                        jobs.length > 0 ? \r\n                            jobs.map(job => {\r\n                                return <List key={job.id} job={job} handleClose={handleClose} handlePublish={handlePublish}></List>\r\n                            }) \r\n                        : \r\n                        <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                            <span>No Data</span>\r\n                        </div>\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form,Col, Button, Alert, Row } from 'react-bootstrap'\r\nimport { useParams, useHistory, Link } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport ReactQuill from 'react-quill'\r\n\r\nexport default function Forms() {\r\n    let URI_API = \"http://localhost:2000/api/job/\"\r\n    let method = \"POST\"\r\n    const { type, id } = useParams()\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [error, setError] = useState(\"\")        \r\n    const [currentTitle, setCurrentTitle] = useState(\"\")\r\n    const [currentDesc, setCurrentDesc] = useState(\"\")\r\n    const [currentFullTime, setCurrentFullTime] = useState()\r\n    const [currentPartTime, setCurrentPartTime] = useState()\r\n    const [currentRequirement, setCurrentRequirement] = useState(\"\")\r\n    const [currentMinRate, setCurrentMinRate] = useState()\r\n    const [currentMaxRate, setCurrentMaxRate] = useState()\r\n    const [roles, setRoles] = useState([])\r\n    const titleRef = useRef()\r\n    const descRef = useRef()\r\n    const fullRef = useRef()\r\n    const minRef = useRef()\r\n    const maxRef = useRef()\r\n    const requirementRef = useRef()\r\n    const history = useHistory()\r\n    const { fetchQuery, logout } = useRoot()\r\n    const modules = {\r\n        toolbar: [\r\n          [{ 'font': [] }, { 'size': [] }],\r\n          [ 'bold', 'italic', 'underline', 'strike' ],\r\n          [{ 'color': [] }, { 'background': [] }],\r\n          [{ 'script': 'super' }, { 'script': 'sub' }],\r\n          [{ 'header': '1' }, { 'header': '2' }, 'blockquote', 'code-block' ],\r\n          [{ 'list': 'ordered' }, { 'list': 'bullet'}, { 'indent': '-1' }, { 'indent': '+1' }],\r\n          [ 'direction', { 'align': [] }],\r\n          [ 'link', 'image', 'video', 'formula' ],\r\n          [ 'clean' ]\r\n        ]\r\n      }\r\n      \r\n    useEffect(() => {\r\n        if(type === \"edit\") {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            const query = {\r\n                query : `query {\r\n                    job (id: \"${id}\") { id, title, desc, requirement, type, minRate, maxRate }\r\n                }`\r\n            }\r\n    \r\n            fetchQuery(process.env.REACT_APP_REQRUITMENT_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setCurrentTitle(data.body.data.job.title)\r\n                    setCurrentDesc(data.body.data.job.desc)\r\n                    setCurrentRequirement(data.body.data.job.requirement)\r\n                    setCurrentFullTime(data.body.data.job.type === \"Full Time\")\r\n                    setCurrentPartTime(data.body.data.job.type === \"Part Time\")\r\n                    setCurrentMinRate(data.body.data.job.minRate)\r\n                    setCurrentMaxRate(data.body.data.job.maxRate)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError(\"\")\r\n        \r\n        const typeJob = fullRef.current.checked ? \"Full Time\" : \"Part Time\"\r\n        const query = {\r\n            title: titleRef.current.value,\r\n            desc: descRef.current.value,\r\n            requirement: requirementRef.current.state.value,\r\n            type: typeJob,\r\n            minRate: minRef.current.value,\r\n            maxRate: maxRef.current.value\r\n        }\r\n\r\n        if(type === \"edit\") {\r\n            URI_API = `${URI_API}${id}`\r\n            method = \"PUT\"\r\n        }\r\n\r\n        fetchQuery(URI_API, query, true, method).then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setHasChanged(!hasChanged)\r\n                setError(\"\")\r\n                history.push(\"/job\")\r\n            }\r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{ type.charAt(0).toUpperCase() + type.slice(1) } Job</h3>\r\n            { error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col md=\"5\">\r\n                        <Form.Group>\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control type=\"text\" ref={titleRef} defaultValue={currentTitle} autoFocus={true} disabled={loading} required={true} />\r\n                        </Form.Group>                \r\n                        <Form.Group>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} ref={descRef} defaultValue={currentDesc} disabled={loading} required={true} />\r\n                        </Form.Group>                \r\n                        <Form.Group>\r\n                            <Form.Label>Type</Form.Label>\r\n                            <br />\r\n                            <Form.Check inline type=\"radio\">\r\n                                <Form.Check.Input type=\"radio\" name=\"type\" id=\"full\" ref={fullRef} defaultChecked={currentFullTime} />\r\n                                <Form.Check.Label htmlFor=\"full\">Full Time</Form.Check.Label>                                    \r\n                            </Form.Check>\r\n                            <Form.Check inline type=\"radio\">\r\n                                <Form.Check.Input type=\"radio\" name=\"type\" id=\"part\" defaultChecked={currentPartTime} />\r\n                                <Form.Check.Label htmlFor=\"part\">Part Time</Form.Check.Label> \r\n                            </Form.Check>\r\n                        </Form.Group>                \r\n                        <Form.Row>       \r\n                            <Col md=\"6\">\r\n                                <Form.Group>\r\n                                    <Form.Label>Minimum Rate</Form.Label>\r\n                                    <Form.Control type=\"number\" ref={minRef} defaultValue={currentMinRate}></Form.Control>\r\n                                </Form.Group>                \r\n                            </Col>       \r\n                            <Col md=\"6\">\r\n                                <Form.Group>\r\n                                    <Form.Label>Maximum Rate</Form.Label>\r\n                                    <Form.Control type=\"number\" ref={maxRef} defaultValue={currentMaxRate}></Form.Control>\r\n                                </Form.Group>                \r\n                            </Col>      \r\n                        </Form.Row>\r\n                    </Col>\r\n                    <Col md=\"5\">\r\n                        <Form.Group>\r\n                            <Form.Label>Requirement</Form.Label>\r\n                            <div id=\"editor\">\r\n                                <ReactQuill modules={modules} ref={requirementRef} value={currentRequirement}></ReactQuill>\r\n                            </div>\r\n                        </Form.Group>                \r\n                    </Col>\r\n                </Row>\r\n                <Button type=\"submit\" className=\"mr-2\" disabled={loading}>Submit</Button>\r\n                { !loading && <Link to=\"/job\" className=\"btn btn-danger\" disabled={loading}>Cancel</Link>}                    \r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ListGroup, Badge } from 'react-bootstrap'\r\nimport { useHistory} from 'react-router-dom'\r\n\r\nexport default function List(props) {\r\n\r\n    const {\r\n        application,\r\n        prevUrl,\r\n        handleStatus\r\n    } = props\r\n\r\n    const candidate = application.candidate\r\n    const history = useHistory()\r\n\r\n    function handleDetail(e) {\r\n        const id = e.target.dataset.id        \r\n        const applicationId = e.target.dataset.app        \r\n        history.push(`/candidate/detail/${id}?from=${prevUrl}&app=${applicationId}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>{candidate.name} ({candidate.email})\r\n                    {\r\n                        candidate.status === \"Registered\" && \r\n                        <Badge variant=\"primary\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={candidate.id} data-app={application.id} data-status=\"Interviewed\" onClick={handleStatus}>Call Interview</Badge>\r\n                    }\r\n                    {\r\n                        candidate.status === \"Interviewed\" && \r\n                        <Badge variant=\"primary\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={candidate.id} data-app={application.id} data-status=\"On Review\" onClick={handleStatus}>On Review</Badge>\r\n                    }\r\n                    {\r\n                        candidate.status === \"On Review\" &&\r\n                        <> \r\n                            <Badge variant=\"danger\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={candidate.id} data-status=\"Refuse\" data-app={application.id} onClick={handleStatus}>Refuse</Badge>\r\n                            <Badge variant=\"primary\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={candidate.id} data-status=\"Accept\" data-app={application.id} onClick={handleStatus}>Accept</Badge>\r\n                        </>\r\n                    }\r\n                    <Badge variant=\"success\" style={{float: \"right\", cursor: \"pointer\"}} data-id={candidate.id} data-app={application.id} onClick={handleDetail}>Detail</Badge>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { Form,Col, Row } from 'react-bootstrap'\r\n\r\nexport default function DetailJob(props) {\r\n    const { currentJob } = props\r\n    \r\n    return (\r\n        <>\r\n            <Form className=\"mt-4\">\r\n                <Row>\r\n                <Col md=\"5\">\r\n                    <Form.Group>\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" value={currentJob.title} disabled={true} />\r\n                    </Form.Group>                \r\n                    <Form.Group>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} value={currentJob.desc} disabled={true} />\r\n                    </Form.Group>                \r\n                    <Form.Group>\r\n                        <Form.Label>Type</Form.Label>\r\n                        <br />\r\n                        <Form.Check inline type=\"radio\">\r\n                            <Form.Check.Input type=\"radio\" name=\"type\" id=\"full\" checked={currentJob.type === \"Full Time\"} disabled={true} />\r\n                            <Form.Check.Label htmlFor=\"full\">Full Time</Form.Check.Label>                                    \r\n                        </Form.Check>\r\n                        <Form.Check inline type=\"radio\">\r\n                            <Form.Check.Input type=\"radio\" name=\"type\" id=\"part\" checked={currentJob.type === \"Part Time\"} disabled={true} />\r\n                            <Form.Check.Label htmlFor=\"part\">Part Time</Form.Check.Label> \r\n                        </Form.Check>\r\n                    </Form.Group>                \r\n                    <Form.Row>       \r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Minimum Rate</Form.Label>\r\n                                <Form.Control type=\"number\" value={currentJob.minRate} disabled={true}></Form.Control>\r\n                            </Form.Group>                \r\n                        </Col>       \r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Maximum Rate</Form.Label>\r\n                                <Form.Control type=\"number\" value={currentJob.maxRate} disabled={true}></Form.Control>\r\n                            </Form.Group>                \r\n                        </Col>      \r\n                    </Form.Row>\r\n                </Col>\r\n                <Col md=\"5\">\r\n                    <Form.Group>\r\n                        <Form.Label>Requirement</Form.Label>\r\n                        <div id=\"editor\">\r\n                            <ReactMarkdown children={ currentJob.requirement } allowDangerousHtml={true} />                            \r\n                        </div>\r\n                    </Form.Group>                \r\n                </Col>\r\n            </Row>            \r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState, useEffect } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport List from './List'\r\nimport DetailJob from './DetailJob'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\nexport default function FormApplication() {\r\n    const URI_API = `${process.env.REACT_APP_REQRUITMENT_URI_API}/application/updatestatus`\r\n    const { idjob } = useParams()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const [currentJob, setCurrentJob] = useState({})\r\n    const [jobApplications, setJobApplications] = useState([])\r\n    const history = useHistory()\r\n    const { fetchQuery, logout } = useRoot()\r\n\r\n    function getData() {\r\n        setError(\"\")\r\n        setLoading(false)\r\n        const query = {\r\n            query: `query {\r\n                jobApplications (jobId: \"${idjob}\"){ \r\n                    id, \r\n                    candidate { id, email, name, status } \r\n                },\r\n                job (id: \"${idjob}\") { title, desc, requirement, type, minRate, maxRate }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_REQRUITMENT_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setCurrentJob(data.body.data.job)\r\n                setJobApplications(data.body.data.jobApplications)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    function handleStatus(e) {\r\n        if(window.confirm(`Are you sure want to update this job application?`)) {\r\n            const status = e.target.dataset.status\r\n            const applicationId = e.target.dataset.app        \r\n\r\n            setLoading(true)\r\n            setError(\"\")\r\n            fetchQuery(`${URI_API}/${applicationId}`, { status: status }, true, \"PUT\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setError(\"\")\r\n                    window.location.reload()\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"mb-3\">Job Application</h3>\r\n            <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n                <li className=\"nav-item\" role=\"presentation\">\r\n                    <a className=\"nav-link active\" id=\"applications-tab\" data-toggle=\"tab\" href=\"#applications\" role=\"tab\" aria-controls=\"applications\" aria-selected=\"true\">Applications</a>\r\n                </li>\r\n                <li className=\"nav-item\" role=\"presentation\">\r\n                    <a className=\"nav-link\" id=\"detail-job-tab\" data-toggle=\"tab\" href=\"#detail-job\" role=\"tab\" aria-controls=\"detail-job\" aria-selected=\"false\">Detail Job</a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\" id=\"myTabContent\">\r\n                <div className=\"tab-pane fade show active\" id=\"applications\" role=\"tabpanel\" aria-labelledby=\"applications-tab\">\r\n                {                        \r\n                        jobApplications.length > 0 ? \r\n                        <Card style={{ width: '40em' }} className=\"mt-4\">\r\n                            { \r\n                                jobApplications.map(application => {\r\n                                    return <List key={application.id} application={application} prevUrl={window.location.pathname} handleStatus={handleStatus}></List>\r\n                                })\r\n                            }\r\n                        </Card>\r\n                        : \r\n                        <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                            <span>No Data</span>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"tab-pane fade\" id=\"detail-job\" role=\"tabpanel\" aria-labelledby=\"detail-job-tab\">\r\n                    <DetailJob key={idjob} currentJob={currentJob} ></DetailJob>\r\n                </div>\r\n            </div>    \r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { ListGroup, Badge, Button, Collapse } from 'react-bootstrap'\r\nimport { useHistory} from 'react-router-dom'\r\n\r\nexport default function List(props) {\r\n\r\n    const {\r\n        question,\r\n        handleDelete\r\n    } = props\r\n    const history = useHistory()\r\n    const [open, setOpen] = useState(false)\r\n    function handleEdit(e) {\r\n        const id = e.target.dataset.id\r\n        const idjob = e.target.dataset.idjob\r\n        history.push(`/qna/${idjob}/edit/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>{question.desc} \r\n                    <Badge variant=\"danger\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={question.id} data-idjob={question.jobId} onClick={handleDelete}>Delete</Badge>\r\n                    <Badge variant=\"primary\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={question.id} data-idjob={question.jobId} onClick={handleEdit}>Edit</Badge>\r\n                    <Badge variant=\"secondary\" style={{float: \"right\"}}>{question.type}</Badge>\r\n                    <br />                    \r\n                    <Button variant=\"link\" className=\"btn-sm\" onClick={() => setOpen(prevOpen => !prevOpen )}>{open ? \"Hide\" : \"Show\"} Options</Button>\r\n                    <Collapse in={open}>\r\n                        <ul>\r\n                            {\r\n                                question.options.length > 0 &&\r\n                                question.options.map(option => {\r\n                                    return <li>\r\n                                            <p className={ option.value === true ? \"text-success\" : \"text-danger\"}>{option.desc}</p>\r\n                                        </li>\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </Collapse>\r\n\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Col, Button, Card, Alert } from 'react-bootstrap' \r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from './List'\r\n\r\nexport default function Index() {\r\n    const URI_API = `${process.env.REACT_APP_REQRUITMENT_URI_API}/question`\r\n    const [questions, setQuestions] = useState([])\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const { fetchQuery, logout } = useRoot()\r\n    const keywordRef = useRef()\r\n    const typeRef = useRef()\r\n    const history = useHistory()\r\n    const { idjob } = useParams()\r\n\r\n    async function getQuestions(search = \"\") {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                questions ${search} { id, jobId, job { title }, type, desc, weight, options { id, desc, value } }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_REQRUITMENT_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            console.log(data)\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setQuestions(data.body.data.questions)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    function handleSearch(e) {\r\n        e.preventDefault()\r\n        let type = (typeRef.current.value !== \"\") ? `, type: ${typeRef.current.value}`: \"\"\r\n        let search = `(keyword: \"${keywordRef.current.value}\",jobId: \"${idjob}\" ${type})`\r\n        getQuestions(search)\r\n    }\r\n\r\n    function handleDelete(e) {\r\n        e.preventDefault()\r\n        if(window.confirm(\"Are you sure want to delete this data?\")) {\r\n            const id = e.target.dataset.id\r\n            fetchQuery(`${URI_API}/${id}`, {}, true, \"DELETE\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setHasChanged(!hasChanged)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuestions()\r\n    }, [hasChanged])\r\n\r\n    return (\r\n        <>\r\n            <h3>Question & Answer</h3>\r\n            <div className=\"mt-4\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Link to={ `/qna/${idjob}/add` } className=\"btn btn-primary\">Add New Question</Link>\r\n                <Form className=\"mt-4\" onSubmit={handleSearch}>\r\n                    <Form.Row>\r\n                        <Col md=\"5\">\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\" ref={keywordRef} onChange={handleSearch} disabled={loading} placeholder=\"Search by Description or Weight\"></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Form.Group>\r\n                                <Form.Control as=\"select\" ref={typeRef} onChange={handleSearch} >\r\n                                    <option value=\"\">All Type</option>\r\n                                    <option value=\"Single\">Single Answer</option>\r\n                                    <option value=\"Multiple\">Multiple Answer</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" type=\"submit\" disabled={loading}>Search</Button>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                    {                        \r\n                        questions.length > 0 ?\r\n                        <> \r\n                            <h5 className=\"mt-4\">Job {questions[0].job.title}</h5>\r\n                            <Card className=\"mt-3 col-md-8\">\r\n                            { \r\n                                questions.map(question => {\r\n                                    if(question.id !== sessionStorage.getItem(\"id\")) {\r\n                                        return <List key={question.id} question={question} handleDelete={handleDelete}></List>\r\n                                    }\r\n                                }) \r\n                            }\r\n                        </Card>\r\n                        </>\r\n                        : \r\n                        <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                            <span>No Data</span>\r\n                        </div>\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Form,Col, Button, Alert, Row, Badge } from 'react-bootstrap'\r\n\r\nexport default function FormsOption(props) {\r\n    const { \r\n        id,\r\n        option,\r\n        handleDeleteOption\r\n    } = props\r\n\r\n    return (\r\n        <>           \r\n            <Col md=\"8\" className=\"list-option\" data-index={id}>\r\n                <Form.Group>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control as=\"textarea\" row=\"3\" autoFocus={true} required={true} defaultValue={option.desc} />\r\n                </Form.Group>                \r\n            </Col>\r\n            <Col md=\"4\" className=\"list-option\" data-index={id}>\r\n                <Form.Group>\r\n                    <br />\r\n                    <Form.Check inline type=\"radio\">\r\n                        <Form.Check.Input type=\"checkbox\" name=\"value\" id={`correct_${id}`} defaultChecked={option.value} />\r\n                        <Form.Check.Label htmlFor={`correct_${id}`}>Correct Answer</Form.Check.Label>                                    \r\n                    </Form.Check>\r\n                    <Badge variant=\"danger\" onClick={handleDeleteOption} style={{cursor: \"pointer\"}} data-index={id} >Delete</Badge>\r\n                </Form.Group>   \r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form,Col, Button, Alert, Row } from 'react-bootstrap'\r\nimport { useParams, useHistory, Link } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport Async from 'async'\r\nimport FormOption from './FormsOption'\r\n\r\nexport default function Forms() {\r\n    let URI_API = \"http://localhost:2000/api/question/\"\r\n    let method = \"POST\"\r\n    const { type, id, idjob } = useParams()\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [error, setError] = useState(\"\")    \r\n    const [options, setOptions] = useState([])\r\n    const [currentDesc, setCurrentDesc] = useState(\"\")\r\n    const [currentSingle, setCurrentSingle] = useState()\r\n    const [currentMultiple, setCurrentMultiple] = useState()\r\n    const [currentValue, setCurrentValue] = useState()\r\n    const descRef = useRef()\r\n    const singleRef = useRef()\r\n    const valueRef = useRef()\r\n    const history = useHistory()\r\n    const { fetchQuery, logout } = useRoot()\r\n\r\n    useEffect(() => {\r\n        if(type === \"edit\") {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            const query = {\r\n                query : `query {\r\n                        question (id: \"${id}\") { id, jobId, type, desc, weight, options { desc, value }\r\n                    }\r\n                }`\r\n            }\r\n    \r\n            fetchQuery(process.env.REACT_APP_REQRUITMENT_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setError(\"\")\r\n                    setCurrentValue(data.body.data.question.weight)\r\n                    setCurrentDesc(data.body.data.question.desc)\r\n                    setCurrentSingle(data.body.data.question.type === \"Single\")\r\n                    setCurrentMultiple(data.body.data.question.type === \"Multiple\")\r\n                    setOptions(data.body.data.question.options)\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        const typeQuestion = singleRef.current.checked ? \"Single\" : \"Multiple\"\r\n        let newOptions = []\r\n        Async.forEach(options, (option) => {\r\n            const index = options.indexOf(option)\r\n            const desc = document.querySelector(`div.list-option.col-md-8[data-index=\"${index}\"`).childNodes[0].childNodes[1].value\r\n            const isCorrect = document.querySelector(`div.list-option.col-md-4[data-index=\"${index}\"`).childNodes[0].childNodes[1].childNodes[0].checked\r\n\r\n            newOptions.push({ desc: desc, value: isCorrect })\r\n        })\r\n\r\n        const query = {\r\n            jobId: idjob,\r\n            type: typeQuestion,\r\n            desc: descRef.current.value,\r\n            weight: valueRef.current.value,\r\n            createBy: sessionStorage.getItem(\"id\"),\r\n            updateBy: sessionStorage.getItem(\"id\"),\r\n            options: newOptions\r\n        }\r\n\r\n        if(type === \"edit\") {\r\n            URI_API = `${URI_API}${id}`\r\n            method = \"PUT\"\r\n        }\r\n\r\n        fetchQuery(URI_API, query, true, method).then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setHasChanged(!hasChanged)\r\n                setError(\"\")\r\n                history.push(`/qna/list/${idjob}`)\r\n            }\r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    function handleAddOption() {\r\n        const newObject = { desc: \"\", value: false }\r\n        setOptions(prevOptions => [...prevOptions, newObject ])\r\n    }\r\n\r\n    async function handleDeleteOption(e) {\r\n        const index = e.target.dataset.index  \r\n        Async.forEach(document.querySelectorAll(`div.list-option[data-index=\"${index}\"]`), (list) => {\r\n            list.remove()\r\n        }, function (err) {\r\n            if(err) setError(err.message)\r\n            setOptions(prevOptions => prevOptions.filter((val, ind) => ind != index))\r\n        })        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>{ type.charAt(0).toUpperCase() + type.slice(1) } Question & Answer</h3>\r\n            { error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <Col md=\"12\">\r\n                    <Row>\r\n                        <Col md=\"8\">\r\n                            <h5 className=\"mb-3\">Question</h5>\r\n                            <Form.Group>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control as=\"textarea\" row=\"3\" ref={descRef} defaultValue={currentDesc} autoFocus={true} disabled={loading} required={true} />\r\n                            </Form.Group>                \r\n                            <Form.Row>       \r\n                                <Col md=\"6\">\r\n                                    <Form.Group>\r\n                                        <Form.Label>Type</Form.Label>\r\n                                        <br />\r\n                                        <Form.Check inline type=\"radio\">\r\n                                            <Form.Check.Input type=\"radio\" name=\"type\" id=\"single\" ref={singleRef} defaultChecked={currentSingle} disabled={loading} />\r\n                                            <Form.Check.Label htmlFor=\"single\">Single</Form.Check.Label>                                    \r\n                                        </Form.Check>\r\n                                        <Form.Check inline type=\"radio\">\r\n                                            <Form.Check.Input type=\"radio\" name=\"type\" id=\"multiple\" defaultChecked={currentMultiple} disabled={loading} />\r\n                                            <Form.Check.Label htmlFor=\"multiple\">Multiple</Form.Check.Label> \r\n                                        </Form.Check>\r\n                                    </Form.Group>                \r\n                                </Col>       \r\n                                <Col md=\"6\">\r\n                                    <Form.Group>\r\n                                        <Form.Label>Value</Form.Label>\r\n                                        <Form.Control type=\"number\" ref={valueRef} min=\"0\" max=\"100\" defaultValue={currentValue} disabled={loading} required={true} />\r\n                                    </Form.Group>                \r\n                                </Col>      \r\n                            </Form.Row>\r\n                            <hr />\r\n                            <h5 className=\"mb-3\">Answers</h5>\r\n                            <Button className=\"mb-3\" variant=\"link\" type=\"button\" onClick={handleAddOption}>Add Answer</Button>\r\n                            <Form.Row id=\"form-option\">\r\n                                { \r\n                                    options.map((option, index) => {\r\n                                        return <FormOption key={index} id={index} handleDeleteOption={handleDeleteOption} option={option}></FormOption>\r\n                                    })\r\n                                }\r\n                            </Form.Row>\r\n                        </Col>\r\n                    </Row>\r\n                    <Button type=\"submit\" className=\"mr-2\" disabled={loading}>Submit</Button>\r\n                    { !loading && <Link to={`/qna/list/${idjob}`} className=\"btn btn-danger\" disabled={loading}>Cancel</Link>}                    \r\n                </Col>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ListGroup, Badge } from 'react-bootstrap'\r\nimport { useHistory} from 'react-router-dom'\r\n\r\nexport default function List(props) {\r\n\r\n    const {\r\n        candidate,\r\n        handleDelete,\r\n        handleUpdateStatus\r\n    } = props\r\n    const history = useHistory()\r\n\r\n    function handleDetail(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/candidate/detail/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>{candidate.name} ({candidate.email})\r\n                    {/* <Badge variant=\"primary\" style={{float: \"right\", cursor: \"pointer\"}} data-id={candidate.id} onClick={handleDetail}>Edit</Badge> */}\r\n                    <Badge variant=\"success\" style={{float: \"right\", cursor: \"pointer\"}} data-id={candidate.id} onClick={handleDetail}>Detail</Badge>\r\n                    <Badge variant=\"secondary\" className=\"mr-2\" style={{float: \"right\" }}data-id={candidate.id}>{candidate.status }</Badge>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Col, Button, Card, Alert } from 'react-bootstrap' \r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from './List'\r\n\r\nexport default function Index() {\r\n    const URI_API = \"http://localhost:2000/api/candidate\"\r\n    const [candidates, setCandidates] = useState([])\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const { fetchQuery, logout } = useRoot()\r\n    const keywordRef = useRef()\r\n    const statusRef = useRef()\r\n    const history = useHistory()\r\n\r\n    async function getCandidates(search = \"\") {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                candidates ${search} { id, email, name, status }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_REQRUITMENT_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setCandidates(data.body.data.candidates)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    function handleSearch(e) {\r\n        e.preventDefault()\r\n        let active = (statusRef.current.value !== \"\") ? `, active: ${statusRef.current.value}`: \"\"\r\n        let search = `(search: \"${keywordRef.current.value}\"${active})`\r\n        getCandidates(search)\r\n    }\r\n\r\n    function handleDelete(e) {\r\n        e.preventDefault()\r\n        if(window.confirm(\"Are you sure want to delete this data?\")) {\r\n            const id = e.target.dataset.id\r\n            fetchQuery(`${URI_API}/${id}`, {}, true, \"DELETE\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setHasChanged(!hasChanged)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    function handleUpdateStatus(e) {\r\n        e.preventDefault()\r\n        const status = e.target.dataset.status === \"true\"\r\n        let action = status ? \"block\" : \"activate\"\r\n        if(window.confirm(`Are you sure want to ${action} this candidate?`)) {\r\n            setLoading(true)\r\n            setError(\"\")\r\n            const id = e.target.dataset.id\r\n            fetchQuery(`${URI_API}/updatestatus/${id}`, {}, true, \"PUT\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setHasChanged(!hasChanged)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCandidates()\r\n    }, [hasChanged])\r\n\r\n    return (\r\n        <>\r\n            <h3>Candidate</h3>\r\n            <div className=\"mt-4\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form className=\"mt-4\" onSubmit={handleSearch}>\r\n                    <Form.Row>\r\n                        <Col md=\"5\">\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\" ref={keywordRef} onChange={handleSearch} disabled={loading} placeholder=\"Search by Identity Number, Email or Name\"></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" type=\"submit\" disabled={loading}>Search</Button>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                    {                        \r\n                        candidates.length > 0 ? \r\n                        <Card style={{ width: '40em' }} className=\"mt-4\">\r\n                            { \r\n                                candidates.map(candidate => {\r\n                                    if(candidate.id !== sessionStorage.getItem(\"id\")) {\r\n                                        return <List key={candidate.id} candidate={candidate} handleDelete={handleDelete} handleUpdateStatus={handleUpdateStatus}></List>\r\n                                    }\r\n                                }) \r\n                            }\r\n                        </Card>\r\n                        : \r\n                        <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                            <span>No Data</span>\r\n                        </div>\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function OnlineTest(props) {\r\n    const { detailTest, no } = props\r\n\r\n    return (\r\n        <tr>\r\n            <td>{no + 1}. </td>\r\n            <td>{detailTest.question}</td>\r\n            <td>{detailTest.answer}</td>\r\n            <td>{detailTest.value}</td>\r\n        </tr>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form,Col, Badge, Image, Row, Button } from 'react-bootstrap'\r\nimport { useParams, useHistory, Link } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport DetailOnlineTest from './OnlineTest'\r\n\r\nexport default function Forms() {\r\n    const { type, id } = useParams()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const [currentCandidate, setCurrentCandidate] = useState({})\r\n    const [detailTest, setDetailTest] = useState([])\r\n    const [prevUrl, setPrevUrl] = useState(\"\")\r\n    const history = useHistory()\r\n    const { fetchQuery, logout } = useRoot()\r\n\r\n    function getCandidate() {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query: `query {\r\n                candidate (id: \"${id}\") {\r\n                    id,\r\n                    identityNumber,\r\n                    email,\r\n                    name,\r\n                    placeOfBirth,\r\n                    dateOfBirth,\r\n                    identityAddress,\r\n                    identitySubDistrict,\r\n                    identityDistricts,\r\n                    identityProvince,\r\n                    nationality,\r\n                    photo,\r\n                    cv,\r\n                    status    \r\n                }\r\n              }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_REQRUITMENT_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            console.log(data)\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setError(\"\")\r\n                setCurrentCandidate(data.body.data.candidate)\r\n            }            \r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    function getOnlineResultDetail(appId) {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query: `query {\r\n                onlineTestDetail (id: \"${appId}\") {\r\n                    id,\r\n                    applicationId,\r\n                    questionId,\r\n                    question,\r\n                    answerId,\r\n                    answer,\r\n                    value\r\n                  }                \r\n              }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_REQRUITMENT_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setError(\"\")\r\n                setDetailTest(data.body.data.onlineTestDetail)\r\n            }            \r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCandidate()\r\n        if(window.location.search) {\r\n            getOnlineResultDetail(window.location.search.split(\"=\")[2])\r\n            setPrevUrl(window.location.search.split(\"&\")[0].substring(6))\r\n        } else {\r\n            setPrevUrl(\"/candidate\")\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>\r\n                { type.charAt(0).toUpperCase() + type.slice(1) } Candidate\r\n                {\r\n                    currentCandidate.status && \r\n                    <Badge variant={currentCandidate.status === \"Accepted\" ? \"success\" : currentCandidate.status === \"Refused\" ? \"danger\" : \"secondary\"} className=\"ml-5\">{currentCandidate.status}</Badge>\r\n                }\r\n            </h3>\r\n            <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n                <li className=\"nav-item\" role=\"presentation\">\r\n                    <a className=\"nav-link active\" id=\"applications-tab\" data-toggle=\"tab\" href=\"#applications\" role=\"tab\" aria-controls=\"applications\" aria-selected=\"true\">General Information</a>\r\n                </li>\r\n                <li className=\"nav-item\" role=\"presentation\">\r\n                    <a className=\"nav-link\" id=\"detail-job-tab\" data-toggle=\"tab\" href=\"#detail-job\" role=\"tab\" aria-controls=\"detail-job\" aria-selected=\"false\">Detail Online Test</a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\" id=\"myTabContent\">\r\n                <div className=\"tab-pane fade show active\" id=\"applications\" role=\"tabpanel\" aria-labelledby=\"applications-tab\">\r\n                    <Row>\r\n                        <Col md=\"5\">\r\n                            <Form className=\"mt-4\">\r\n                                <Form.Group>\r\n                                    <Form.Label>Identity Number</Form.Label>\r\n                                    <Form.Control type=\"text\" defaultValue={currentCandidate.identityNumber ? currentCandidate.identityNumber : \"\" } autoFocus={true} disabled={!loading} required={true} />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control type=\"text\" defaultValue={currentCandidate.name ? currentCandidate.name : \"\" } disabled={!loading} required={true} />\r\n                                </Form.Group>\r\n                                <Form.Row>       \r\n                                    <Col md=\"6\">\r\n                                        <Form.Group>\r\n                                            <Form.Label>Email</Form.Label>\r\n                                            <Form.Control type=\"email\" defaultValue={currentCandidate.email ? currentCandidate.email : \"\" } disabled={!loading} required={true} />\r\n                                        </Form.Group>                \r\n                                    </Col>       \r\n                                    <Col md=\"6\">\r\n                                        <Form.Group>\r\n                                            <Form.Label>Nationality</Form.Label>\r\n                                            <br />\r\n                                            <Form.Check inline type=\"radio\">\r\n                                                <Form.Check.Input type=\"radio\" name=\"type\" id=\"citizen\" defaultChecked={currentCandidate.nationality && currentCandidate.nationality === \"WNI\" } disabled={!loading} />\r\n                                                <Form.Check.Label htmlFor=\"citizen\">Citizen</Form.Check.Label>                                    \r\n                                            </Form.Check>\r\n                                            <Form.Check inline type=\"radio\">\r\n                                                <Form.Check.Input type=\"radio\" name=\"type\" id=\"foreigner\" defaultChecked={currentCandidate.nationality && currentCandidate.nationality === \"WNA\"} disabled={!loading} />\r\n                                                <Form.Check.Label htmlFor=\"foreigner\">Foreigner</Form.Check.Label> \r\n                                            </Form.Check>\r\n                                        </Form.Group>                \r\n                                    </Col>      \r\n                                </Form.Row>\r\n                                <Form.Row>       \r\n                                    <Col md=\"6\">\r\n                                        <Form.Group>\r\n                                            <Form.Label>Place of Birth</Form.Label>\r\n                                            <Form.Control type=\"text\" defaultValue={currentCandidate.placeOfBirth ? currentCandidate.placeOfBirth : \"\" } disabled={!loading} required={true} />\r\n                                        </Form.Group>                \r\n                                    </Col>       \r\n                                    <Col md=\"6\">\r\n                                        <Form.Group>\r\n                                            <Form.Label>Date of Birth</Form.Label>\r\n                                            <Form.Control type=\"date\" defaultValue={currentCandidate.dateOfBirth ? currentCandidate.dateOfBirth : \"\" } disabled={!loading} required={true} />\r\n                                        </Form.Group>                \r\n                                    </Col>      \r\n                                </Form.Row>\r\n                                <Form.Group>\r\n                                    <Form.Label>Identity Address</Form.Label>\r\n                                    <Form.Control as=\"textarea\" defaultValue={currentCandidate.identityAddress ? currentCandidate.identityAddress : \"\"} disabled={!loading} required={true} />\r\n                                </Form.Group>\r\n                                <Form.Row>       \r\n                                    <Col md=\"4\">\r\n                                        <Form.Group>\r\n                                            <Form.Label>Subdistrict</Form.Label>\r\n                                            <Form.Control type=\"text\" defaultValue={currentCandidate.identitySubDistrict ? currentCandidate.identitySubDistrict : \"\"} disabled={!loading} />\r\n                                        </Form.Group>                \r\n                                    </Col>       \r\n                                    <Col md=\"4\">\r\n                                        <Form.Group>\r\n                                            <Form.Label>District</Form.Label>\r\n                                            <Form.Control type=\"text\" defaultValue={currentCandidate.identityDistricts ? currentCandidate.identityDistricts : \"\"} disabled={!loading} />\r\n                                        </Form.Group>                \r\n                                    </Col>      \r\n                                    <Col md=\"4\">\r\n                                        <Form.Group>\r\n                                            <Form.Label>Province</Form.Label>\r\n                                            <Form.Control type=\"text\" defaultValue={currentCandidate.identityProvince ? currentCandidate.identityProvince : \"\"} disabled={!loading} />\r\n                                        </Form.Group>                \r\n                                    </Col>      \r\n                                </Form.Row>\r\n                            </Form>\r\n                        </Col>\r\n                        <Col md=\"5\">\r\n                            <Image src=\"../../logo512.png\" className=\"rounded\" alt=\"...\" />\r\n                            <br />\r\n                            <a href={currentCandidate.cv && currentCandidate.cv !== null ? currentCandidate.cv : \"#\" } download={currentCandidate.cv && currentCandidate.cv !== null ? `CV ${currentCandidate.name}` : null }>\r\n                                <i className=\"fa fa-download fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Curriculum Vitae</span>\r\n                            </a>\r\n                        </Col>\r\n                    </Row>                \r\n                </div>\r\n                <div className=\"tab-pane fade\" id=\"detail-job\" role=\"tabpanel\" aria-labelledby=\"detail-job-tab\">\r\n                    {\r\n                        detailTest.length > 0 ? \r\n                        <table className=\"table table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td style={{width: \"3em\"}}>No.</td>\r\n                                    <td>Question</td>\r\n                                    <td>Answer</td>\r\n                                    <td style={{width: \"5em\"}}>Score</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    detailTest.map((detail, index) => {\r\n                                        return <DetailOnlineTest key={detail.id} detailTest={detail} no={index}></DetailOnlineTest>\r\n                                    })  \r\n                                }\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n                                    <td colSpan=\"3\"><strong>Total Score</strong></td>\r\n                                    <td><strong>{detailTest.reduce((acc, detail) => acc + detail.value, 0)}</strong></td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>                        \r\n                        : \r\n                        <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                            <span>No Data</span>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>    \r\n            <Link to={prevUrl} className=\"btn btn-danger\" disabled={!loading}>Back</Link>                    \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ListGroup, Badge } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function List(props) {\r\n    const {\r\n        division,\r\n        handleDelete\r\n    } = props\r\n    const history = useHistory()\r\n\r\n    function handleEdit(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/division/edit/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>{division.name}\r\n                    <Badge variant=\"danger\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={division.id} onClick={handleDelete}>Delete</Badge>\r\n                    <Badge variant=\"primary\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={division.id} onClick={handleEdit}>Edit</Badge>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form, Col, Button, Card, Alert } from 'react-bootstrap' \r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from './List'\r\n\r\nexport default function Index() {\r\n    const URI_API = `${process.env.REACT_APP_HRIS_URI_API}/division`\r\n    const keywordRef = useRef()\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [divisions, setDivisions] = useState([])\r\n    const { fetchQuery, logout } = useRoot()\r\n    const history = useHistory()\r\n\r\n    function handleSearch(e) {\r\n        e.preventDefault()\r\n\r\n        let search = `(keyword: \"${keywordRef.current.value}\")`\r\n        getDivision(search)\r\n    }\r\n\r\n    function handleDelete(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError(\"\")\r\n        if(window.confirm(\"Are you sure want to delete this data?\")) {\r\n            const id = e.target.dataset.id\r\n            fetchQuery(`${URI_API}/${id}`, {}, true, \"DELETE\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    window.location.reload()\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        } else {\r\n            setLoading(false)\r\n        }\r\n    }\r\n    \r\n    function getDivision(search = \"\") {\r\n        setLoading(true)\r\n        setError(\"\")\r\n        const query = {\r\n            query : `query { divisions ${search} { id, name } }`\r\n        }\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setDivisions(data.body.data.divisions)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDivision()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <h3>Division</h3>\r\n            <div className=\"mt-4\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Link to=\"/division/add\" className=\"btn btn-primary\">Add New Division</Link>\r\n                <Form className=\"mt-4\" onSubmit={handleSearch}>\r\n                    <Form.Row>\r\n                        <Col md=\"5\">\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\" ref={keywordRef} onChange={handleSearch} disabled={loading} placeholder=\"Search by Name\"></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Form.Group>\r\n                            <Button variant=\"success\" type=\"submit\" disabled={loading}>Search</Button>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                </Form>\r\n                {\r\n                        divisions.length > 0 ?\r\n                        <Card style={{ width: \"30em\"}} className=\"mt-4\">\r\n                            {\r\n                                divisions.map(division => {\r\n                                    return <List key={division.id} division={division} handleDelete={handleDelete}></List>\r\n                                })\r\n                            }\r\n                        </Card>\r\n                        : \r\n                        <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                            <span>No Data</span>\r\n                        </div>\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form,Col, Button, Alert } from 'react-bootstrap'\r\nimport { useParams, useHistory, Link } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\nexport default function Forms() {\r\n    let URI_API = `${process.env.REACT_APP_HRIS_URI_API}/division/`\r\n    let method = \"POST\"\r\n    const { type, id } = useParams()\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [error, setError] = useState(\"\")    \r\n    const [currentName, setCurrentName] = useState(\"\")\r\n    const nameRef = useRef()\r\n    const history = useHistory()\r\n    const { fetchQuery, logout } = useRoot()\r\n\r\n    useEffect(() => {\r\n        if(type === \"edit\") {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            const query = {\r\n                query : `query {\r\n                    division (id: \"${id}\") { id, name }\r\n                }`\r\n            }\r\n    \r\n            fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setCurrentName(data.body.data.division.name)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        const query = { name: nameRef.current.value }\r\n        \r\n        if(type === \"edit\") {\r\n            URI_API = `${URI_API}${id}`\r\n            method = \"PUT\"\r\n        }\r\n\r\n        fetchQuery(URI_API, query, true, method).then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setHasChanged(!hasChanged)\r\n                setError(\"\")\r\n                history.push(\"/division\")\r\n            }\r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{ type.charAt(0).toUpperCase() + type.slice(1) } Division</h3>\r\n            { error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <Col md=\"5\">\r\n                    <Form.Group>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={nameRef} defaultValue={currentName} autoFocus={true} disabled={loading} required={true} />\r\n                    </Form.Group>                \r\n                    <Button type=\"submit\" className=\"mr-2\" disabled={loading}>Submit</Button>\r\n                    { !loading && <Link to=\"/division\" className=\"btn btn-danger\" disabled={loading}>Cancel</Link>}                    \r\n                </Col>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ListGroup, Badge } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function List(props) {\r\n    const {\r\n        department,\r\n        handleDelete\r\n    } = props\r\n    const history = useHistory()\r\n\r\n    function handleEdit(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/department/edit/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>{department.name}\r\n                    <Badge variant=\"danger\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={department.id} onClick={handleDelete}>Delete</Badge>\r\n                    <Badge variant=\"primary\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={department.id} onClick={handleEdit}>Edit</Badge>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form, Col, Button, Card, Alert } from 'react-bootstrap' \r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from './List'\r\n\r\nexport default function Index() {\r\n    const URI_API = `${process.env.REACT_APP_HRIS_URI_API}/department`\r\n    const keywordRef = useRef()\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [departments, setDepartments] = useState([])\r\n    const { fetchQuery, logout } = useRoot()\r\n    const history = useHistory()\r\n\r\n    function handleSearch(e) {\r\n        e.preventDefault()\r\n\r\n        let search = `(keyword: \"${keywordRef.current.value}\")`\r\n        getDepartment(search)\r\n    }\r\n\r\n    function handleDelete(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError(\"\")\r\n        if(window.confirm(\"Are you sure want to delete this data?\")) {\r\n            const id = e.target.dataset.id\r\n            fetchQuery(`${URI_API}/${id}`, {}, true, \"DELETE\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    window.location.reload()\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        } else {\r\n            setLoading(false)\r\n        }\r\n    }\r\n    \r\n    function getDepartment(search = \"\") {\r\n        setLoading(true)\r\n        setError(\"\")\r\n        const query = {\r\n            query : `query { departments ${search} { id, name } }`\r\n        }\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setDepartments(data.body.data.departments)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDepartment()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <h3>Department</h3>\r\n            <div className=\"mt-4\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Link to=\"/department/add\" className=\"btn btn-primary\">Add New Department</Link>\r\n                <Form className=\"mt-4\" onSubmit={handleSearch}>\r\n                    <Form.Row>\r\n                        <Col md=\"5\">\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\" ref={keywordRef} onChange={handleSearch} disabled={loading} placeholder=\"Search by Name\"></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Form.Group>\r\n                            <Button variant=\"success\" type=\"submit\" disabled={loading}>Search</Button>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                </Form>\r\n                {\r\n                        departments.length > 0 ?\r\n                        <Card style={{ width: \"30em\"}} className=\"mt-4\">\r\n                            {\r\n                                departments.map(department => {\r\n                                    return <List key={department.id} department={department} handleDelete={handleDelete}></List>\r\n                                })\r\n                            }\r\n                        </Card>\r\n                        : \r\n                        <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                            <span>No Data</span>\r\n                        </div>\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form,Col, Button, Alert } from 'react-bootstrap'\r\nimport { useParams, useHistory, Link } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\nexport default function Forms() {\r\n    let URI_API = `${process.env.REACT_APP_HRIS_URI_API}/department/`\r\n    let method = \"POST\"\r\n    const { type, id } = useParams()\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [error, setError] = useState(\"\")    \r\n    const [currentName, setCurrentName] = useState(\"\")\r\n    const nameRef = useRef()\r\n    const history = useHistory()\r\n    const { fetchQuery, logout } = useRoot()\r\n\r\n    useEffect(() => {\r\n        if(type === \"edit\") {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            const query = {\r\n                query : `query {\r\n                    department (id: \"${id}\") { id, name }\r\n                }`\r\n            }\r\n    \r\n            fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n                console.log(data)\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setCurrentName(data.body.data.department.name)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        const query = { name: nameRef.current.value }\r\n        \r\n        if(type === \"edit\") {\r\n            URI_API = `${URI_API}${id}`\r\n            method = \"PUT\"\r\n        }\r\n\r\n        fetchQuery(URI_API, query, true, method).then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setHasChanged(!hasChanged)\r\n                setError(\"\")\r\n                history.push(\"/department\")\r\n            }\r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{ type.charAt(0).toUpperCase() + type.slice(1) } Division</h3>\r\n            { error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <Col md=\"5\">\r\n                    <Form.Group>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={nameRef} defaultValue={currentName} autoFocus={true} disabled={loading} required={true} />\r\n                    </Form.Group>                \r\n                    <Button type=\"submit\" className=\"mr-2\" disabled={loading}>Submit</Button>\r\n                    { !loading && <Link to=\"/department\" className=\"btn btn-danger\" disabled={loading}>Cancel</Link>}                    \r\n                </Col>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\nexport default function ModalResign({show, handleClose, id}) {\r\n    const URI_API = `http://localhost:2100/api/employee/resign/${id}`\r\n    const dateRef = useRef()\r\n    const history = useHistory()\r\n    const { fetchQuery, logout } = useRoot()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        fetchQuery(URI_API, { resignDate: dateRef.current.value }, true, \"PUT\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                alert(data.body.message)\r\n            } else {\r\n                window.location.reload()\r\n            }            \r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Modal size=\"md\" show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Detail Resign</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Label>Resign Date</Form.Label>\r\n                            <Form.Control type=\"date\" ref={dateRef} required={true}></Form.Control>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>            \r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { ListGroup, Badge } from 'react-bootstrap'\r\nimport { useHistory} from 'react-router-dom'\r\nimport Modal from './Modal'\r\n\r\nexport default function List(props) {    \r\n    const {\r\n        employee,\r\n        handleDelete,\r\n        handleUpdateStatus\r\n    } = props\r\n    const [show, setShow] = useState(false)\r\n    const [typeModal, setTypeModal] = useState(\"Resign\")\r\n    const handleShow = () => setShow(true)\r\n    const handleClose = () => setShow(false)\r\n    const history = useHistory()\r\n\r\n    function handleEdit(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/employee/edit/${id}`)\r\n    }\r\n\r\n    function handleDetail(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/employee/detail/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>{employee.division} - {employee.name} <strong>({employee.employeeId})</strong>\r\n                    <Badge variant={employee.activeFlag ? \"secondary\" : \"success\" } style={{float: \"right\", cursor: \"pointer\"}} data-id={employee.id} onClick={handleUpdateStatus}>{employee.activeFlag ? \"Disable\" : \"Activate\" }</Badge>\r\n                    <Badge variant=\"success\" className=\"mr-2\" style={{float: \"right\", cursor: \"pointer\" }}data-id={employee.id} onClick={handleDetail}>Detail</Badge>\r\n                    {\r\n                        !employee.resignDate &&\r\n                        <Badge variant=\"danger\" className=\"mr-2\" style={{float: \"right\", cursor: \"pointer\" }}data-id={employee.id} onClick={handleShow}>Resign</Badge>\r\n                    }\r\n                    <Badge variant=\"primary\" className=\"mr-2\" style={{float: \"right\", cursor: \"pointer\" }}data-id={employee.id} onClick={handleEdit}>Edit</Badge>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n            <Modal show={show} handleClose={handleClose} id={employee.id} type={typeModal}></Modal>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Col, Button, Card, Alert } from 'react-bootstrap' \r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from './List'\r\n\r\nexport default function Index() {\r\n    const URI_API = \"http://localhost:2100/api/employee\"\r\n    const [employees, setEmployees] = useState([])\r\n    const [divisions, setDivisions] = useState([])\r\n    const [departments, setDepartments] = useState([])\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const { fetchQuery, logout } = useRoot()\r\n    const keywordRef = useRef()\r\n    const divisionRef = useRef()\r\n    const departmentRef = useRef()\r\n    const history = useHistory()\r\n\r\n    async function getEmployees(search = \"\") {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                employees ${search} { id, employeeId, email, name, status, jobTitle, activeFlag, division, department, resignDate },\r\n                divisions { id, name },\r\n                departments { id, name }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setDivisions(data.body.data.divisions)\r\n                setDepartments(data.body.data.departments)\r\n                setEmployees(data.body.data.employees)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    function handleSearch(e) {\r\n        e.preventDefault()\r\n        let division = (divisionRef.current.value !== \"\") ? `, division: \"${divisionRef.current.value}\"`: \"\"\r\n        let department = (departmentRef.current.value !== \"\") ? `, department: \"${departmentRef.current.value}\"`: \"\"\r\n        let search = `(keyword: \"${keywordRef.current.value}\"${division}${department})`\r\n        \r\n        getEmployees(search)\r\n    }\r\n\r\n    function handleDelete(e) {\r\n        e.preventDefault()\r\n        if(window.confirm(\"Are you sure want to delete this data?\")) {\r\n            const id = e.target.dataset.id\r\n            fetchQuery(`${URI_API}/${id}`, {}, true, \"DELETE\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setHasChanged(!hasChanged)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    function handleUpdateStatus(e) {\r\n        e.preventDefault()\r\n        const status = e.target.dataset.status === \"true\"\r\n        let action = status ? \"block\" : \"activate\"\r\n        if(window.confirm(`Are you sure want to ${action} this candidate?`)) {\r\n            setLoading(true)\r\n            setError(\"\")\r\n            const id = e.target.dataset.id\r\n            fetchQuery(`${URI_API}/updatestatus/${id}`, {}, true, \"PUT\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setHasChanged(!hasChanged)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getEmployees()\r\n    }, [hasChanged])\r\n\r\n    return (\r\n        <>\r\n            <h3>Employee</h3>\r\n            <div className=\"mt-4\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Link className=\"btn btn-primary\" to=\"/employee/add\">Add New Employee</Link>\r\n                <Form className=\"mt-4\" onSubmit={handleSearch}>\r\n                    <Form.Row>\r\n                        <Col md=\"4\">\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\" ref={keywordRef} onChange={handleSearch} disabled={loading} placeholder=\"Search by Employee ID, Email or Name\" ></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                            <Form.Group>\r\n                                <Form.Control as=\"select\" ref={divisionRef} onChange={handleSearch} >\r\n                                    <option value=\"\">All Division</option>\r\n                                    {\r\n                                        divisions.map(division => {\r\n                                            return <option value={division.name}>{division.name}</option>\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                            <Form.Group>\r\n                                <Form.Control as=\"select\" ref={departmentRef} onChange={handleSearch} >\r\n                                    <option value=\"\">All Department</option>\r\n                                    {\r\n                                        departments.map(department => {\r\n                                            return <option value={department.name}>{department.name}</option>\r\n                                        })\r\n                                    }                                \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" type=\"submit\" disabled={loading}>Search</Button>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                    {                        \r\n                        employees.length > 0 ? \r\n                        <Card style={{ width: '70em' }} className=\"mt-4\">\r\n                            { \r\n                                employees.map(employee => {\r\n                                    if(employee.id !== sessionStorage.getItem(\"id\")) {\r\n                                        return <List key={employee.id} employee={employee} handleDelete={handleDelete} handleUpdateStatus={handleUpdateStatus}></List>\r\n                                    }\r\n                                }) \r\n                            }\r\n                        </Card>\r\n                        : \r\n                        <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                            <span>No Data</span>\r\n                        </div>\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Form, Button, Col, Row, Alert, Badge } from 'react-bootstrap'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\nexport default function Forms() {\r\n    let URI_API = `${process.env.REACT_APP_HRIS_URI_API}/employee/`\r\n    let method = \"POST\"\r\n    const { type, id } = useParams()\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [divisions, setDivisions] = useState([])\r\n    const [departments, setDepartments] = useState([])\r\n    const [users, setUsers] = useState([])\r\n    const [currentEmployee, setCurrentEmployee] = useState({})\r\n    const [currentDivision, setCurrentDivision] = useState(\"\")\r\n    const [currentDepartment, setCurrentDepartment] = useState(\"\")\r\n    const [currentStatus, setCurrentStatus] = useState(\"\")\r\n    const [currentUser, setCurrentUser] = useState(\"\")\r\n    const { fetchQuery, logout } = useRoot()\r\n    const history = useHistory()\r\n    const nameRef = useRef()\r\n    const citizenRef = useRef()\r\n    const foreignRef = useRef()\r\n    const identityNumberRef = useRef()\r\n    const emailRef = useRef()\r\n    const placeOfBirthRef = useRef()\r\n    const dateOfBirthRef = useRef()\r\n    const addressRef = useRef()\r\n    const subDistrictRef = useRef()\r\n    const districtRef = useRef()\r\n    const provinceRef = useRef()\r\n    const phoneRef = useRef()\r\n    const accountBankRef = useRef()\r\n    const joinDateRef = useRef()\r\n    const statusRef = useRef()\r\n    const jobTitleRef = useRef()\r\n    const divisionRef = useRef()\r\n    const departmentRef = useRef()\r\n    const userRef = useRef()\r\n\r\n    async function getSetData() {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                divisions { id, name },\r\n                departments { id, name }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setDivisions(data.body.data.divisions)\r\n                setDepartments(data.body.data.departments)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    async function getUsers(search = \"\") {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                usersForEmployee ${search} { id, username, name, email, role, activeFlag }\r\n            }`\r\n        }\r\n        fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setUsers(data.body.data.usersForEmployee)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(type === \"detail\")\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setError(\"\")\r\n        setLoading(true) \r\n        \r\n        const nationality = citizenRef.current.checked ? \"Citizen\" : \"Foreign Nationals\"\r\n        let query = {\r\n            identityNumber: identityNumberRef.current.value,\r\n            email: emailRef.current.value,\r\n            name: nameRef.current.value,\r\n            placeOfBirth: placeOfBirthRef.current.value,\r\n            dateOfBirth: dateOfBirthRef.current.value,\r\n            nationality: nationality,\r\n            division: divisionRef.current.value,\r\n            department: departmentRef.current.value,\r\n            accountBank: accountBankRef.current.value,\r\n            jobTitle: jobTitleRef.current.value,\r\n            joinDate: joinDateRef.current.value,\r\n            status: statusRef.current.value,\r\n            user: userRef.current.value\r\n        }\r\n\r\n        if(addressRef.current.value !== \"\") query.identityAddress = addressRef.current.value\r\n        if(subDistrictRef.current.value !== \"\") query.identitySubDistrict = subDistrictRef.current.value\r\n        if(districtRef.current.value !== \"\") query.identityDistrict = districtRef.current.value\r\n        if(provinceRef.current.value !== \"\") query.identityProvince = provinceRef.current.value\r\n        if(phoneRef.current.value !== \"\") query.phoneNumber = phoneRef.current.value\r\n\r\n        if(type === \"edit\") {\r\n            URI_API = `${URI_API}${id}`\r\n            method = \"PUT\"\r\n        }\r\n\r\n        fetchQuery(URI_API, query, true, method).then(async(result) => {\r\n            if(result.status !== 200) {\r\n                if(result.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(result.body.message)\r\n            } else {\r\n                fetchQuery(`${process.env.REACT_APP_SSO_URI_API}/user/update-employee/${userRef.current.value}`, { employeeId: result.body._id}, true, \"PUT\").then(async(data) => {\r\n                    if(data.status !== 200) {\r\n                        if(data.status === 403) {\r\n                            await logout()\r\n                            history.push(\"/login\")\r\n                        } \r\n                        setError(data.body.message)\r\n                    } else {\r\n                        setError(\"\")\r\n                        history.push(\"/employee\")\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    function getCurrentEmployee() {\r\n        setError(\"\")\r\n        setLoading(true)\r\n\r\n        const query = {\r\n            query : `query {\r\n                employee (id: \"${id}\") { id, employeeId, name, nationality, identityNumber, email, placeOfBirth, dateOfBirth, identityAddress, identitySubDistrict, identityDistricts, identityProvince, phoneNumber, accountBank, joinDate, status, jobTitle, division, department, usernameEmployee }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            console.log(data)\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setCurrentEmployee(data.body.data.employee)\r\n                setCurrentStatus(data.body.data.employee.status)\r\n                setCurrentDivision(data.body.data.employee.division)\r\n                setCurrentDepartment(data.body.data.employee.department)\r\n                setCurrentUser(data.body.data.employee.usernameEmployee)\r\n                getUsers(`(employeeId: \"${data.body.data.employee.id }\")`)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    function handleContract(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/contract/${id}`)\r\n    }\r\n\r\n    function handleSalary(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/salary/${id}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSetData()\r\n        getUsers()\r\n        if(type !== \"add\") {\r\n            getCurrentEmployee()\r\n        } \r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            <h3>{ type.charAt(0).toUpperCase() + type.slice(1) } Employee</h3>\r\n            {\r\n                type === \"detail\" &&\r\n                <div>\r\n                    <Badge variant=\"primary\" style={{ cursor: \"pointer\"}} data-id={currentEmployee.id} onClick={handleContract}>Contract</Badge>\r\n                    <Badge variant=\"primary\" className=\"ml-2\" data-id={currentEmployee.id} style={{ cursor: \"pointer\"}} onClick={handleSalary}>Salary</Badge>\r\n                    <Badge variant=\"danger\" className=\"ml-2\" data-id={currentEmployee.id} style={{ cursor: \"pointer\"}} onClick={() => { history.push(\"/employee\")}}>Back</Badge>\r\n                    <br />\r\n                </div>\r\n            }\r\n            { error && <Alert variant=\"danger\">{error}</Alert>} \r\n            <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <Col md=\"8\">\r\n                    <Form.Row>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control type=\"text\" ref={nameRef} autoFocus={true} disabled={loading} defaultValue={Object.keys(currentEmployee).length > 0 ? currentEmployee.name : \"\"} required={true} ></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>User Employee</Form.Label>\r\n                                <Form.Control as=\"select\" ref={userRef} disabled={loading} value={currentUser} required={true} onChange={(e) => setCurrentUser(e.target.value)}>\r\n                                    <option value=\"\" hidden>Select User</option>\r\n                                    {\r\n                                        users.map(user => {\r\n                                            return <option value={user.username}>{user.username} - ({user.role})</option>\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column md=\"3\">Nationality</Form.Label>\r\n                        <br />\r\n                        <Form.Check inline type=\"radio\" className=\"mr-4\">\r\n                            <Form.Check.Input type=\"radio\" name=\"type\" id=\"citizen\" ref={citizenRef} disabled={loading} defaultChecked={Object.keys(currentEmployee).length > 0 ? currentEmployee.nationality === \"Citizen\" : true} />\r\n                            <Form.Check.Label htmlFor=\"citizen\">Citizen</Form.Check.Label>                                    \r\n                        </Form.Check>\r\n                        <Form.Check inline type=\"radio\">\r\n                            <Form.Check.Input type=\"radio\" name=\"type\" id=\"foreign\" ref={foreignRef} disabled={loading} defaultChecked={Object.keys(currentEmployee).length > 0 ? currentEmployee.nationality === \"Foreign Nationals\" : false} />\r\n                            <Form.Check.Label htmlFor=\"foreign\">Foreign Nationals</Form.Check.Label> \r\n                        </Form.Check>\r\n                    </Form.Group>                \r\n                    <Form.Row>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Identity Number</Form.Label>\r\n                                <Form.Control type=\"text\" ref={identityNumberRef} disabled={loading} defaultValue={Object.keys(currentEmployee).length > 0 ? currentEmployee.identityNumber : \"\"} required={true}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" ref={emailRef} disabled={loading} defaultValue={Object.keys(currentEmployee).length > 0 ? currentEmployee.email : \"\"} required={true}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Place of Birth</Form.Label>\r\n                                <Form.Control type=\"text\" ref={placeOfBirthRef} disabled={loading} defaultValue={Object.keys(currentEmployee).length > 0 ? currentEmployee.placeOfBirth : \"\"} required={true}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Date of Birth</Form.Label>\r\n                                <Form.Control type=\"date\" ref={dateOfBirthRef} disabled={loading} defaultValue={Object.keys(currentEmployee).length > 0 ? currentEmployee.dateOfBirth : \"\"} required={true}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Group>\r\n                        <Form.Label>Identity Address</Form.Label>\r\n                        <Form.Control as=\"textarea\" ref={addressRef} disabled={loading} defaultValue={Object.keys(currentEmployee).length > 0 ? currentEmployee.identityAddress : \"\"}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Row>\r\n                        <Col md=\"4\">\r\n                            <Form.Group>\r\n                                <Form.Label>Identity Sub-District</Form.Label>\r\n                                <Form.Control type=\"text\" ref={subDistrictRef} disabled={loading} defaultValue={Object.keys(currentEmployee).length > 0 ? currentEmployee.identitySubDistrict : \"\"}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            <Form.Group>\r\n                                <Form.Label>Identity District</Form.Label>\r\n                                <Form.Control type=\"text\" ref={districtRef} disabled={loading} defaultValue={Object.keys(currentEmployee).length > 0 ? currentEmployee.identityDistrict : \"\"}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            <Form.Group>\r\n                                <Form.Label>Identity Province</Form.Label>\r\n                                <Form.Control type=\"text\" ref={provinceRef} disabled={loading} defaultValue={Object.keys(currentEmployee).length > 0 ? currentEmployee.identityProvince : \"\"}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Col md=\"4\">\r\n                            <Form.Group>\r\n                                <Form.Label>Phone Number</Form.Label>\r\n                                <Form.Control type=\"text\" ref={phoneRef} disabled={loading} defaultValue={Object.keys(currentEmployee).length > 0 ? currentEmployee.phoneNumber : \"\"}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            <Form.Group>\r\n                                <Form.Label>Account Bank</Form.Label>\r\n                                <Form.Control type=\"text\" ref={accountBankRef} disabled={loading} defaultValue={Object.keys(currentEmployee).length > 0 ? currentEmployee.accountBank : \"\"} required={true}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            <Form.Group>\r\n                                <Form.Label>Join Date</Form.Label>\r\n                                <Form.Control type=\"date\" ref={joinDateRef} disabled={loading} defaultValue={Object.keys(currentEmployee).length > 0 ? currentEmployee.joinDate : \"\"} required={true}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Col md=\"4\">\r\n                            <Form.Group>\r\n                                <Form.Label>Employment Status</Form.Label>\r\n                                <Form.Control as=\"select\" ref={statusRef} disabled={loading} value={currentStatus} onChange={(e) => setCurrentStatus(e.target.value)} required={true}>\r\n                                    <option value=\"Contract\">Contract</option>\r\n                                    <option value=\"Permanent\">Permanent</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"8\">\r\n                            <Form.Group>\r\n                                <Form.Label>Job Title</Form.Label>\r\n                                <Form.Control type=\"text\" ref={jobTitleRef} disabled={loading} defaultValue={Object.keys(currentEmployee).length > 0 ? currentEmployee.jobTitle : \"\"} required={true}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Division</Form.Label>\r\n                                <Form.Control as=\"select\" ref={divisionRef} disabled={loading} value={currentDivision} required={true} onChange={(e) => setCurrentDivision(e.target.value)}>\r\n                                    <option value=\"\" hidden>Select Division</option>\r\n                                    {\r\n                                        divisions.map(division => {\r\n                                            return <option value={division.name}>{division.name}</option>\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Department</Form.Label>\r\n                                <Form.Control as=\"select\" ref={departmentRef} disabled={loading} value={currentDepartment} required={true} onChange={(e) => setCurrentDepartment(e.target.value)}>\r\n                                    <option value=\"\" hidden>Select Department</option>\r\n                                    {\r\n                                        departments.map(department => {\r\n                                            return <option value={department.name}>{department.name}</option>\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    {/* <Form.Row>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Photo</Form.Label>\r\n                                <FilePond onupdatefiles={submitImages} allowMultiple={false} files={photos} ref={photoRef}></FilePond>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Curriculum Vitae</Form.Label>\r\n                                <FilePond onupdatefiles={submitImages} allowMultiple={false} files={files} ref={cvRef}></FilePond>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row> */}\r\n                    { type !== \"detail\" &&\r\n                        <Button type=\"submit\" className=\"mr-2\" disabled={loading}>Submit</Button>\r\n                    }\r\n                    { !loading && <Link to=\"/employee\" className=\"btn btn-danger\" disabled={loading}>Cancel</Link>}                    \r\n                </Col>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ListGroup, Badge } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function List(props) {\r\n    const { contract, statusEmployee } = props\r\n    const history = useHistory()\r\n\r\n    function handleEdit(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/contract/${contract.employee.id}/edit/${id}`)\r\n    }\r\n\r\n    function handleShow(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/contract/${contract.employee.id}/show/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item><b>From :</b> {contract.dateFrom} <b>Until :</b> {contract.dateUntil}\r\n                    {\r\n                        statusEmployee !== \"Permanent\" &&\r\n                        <Badge variant=\"primary\" className=\"mr-2\" style={{float: \"right\", cursor: \"pointer\" }}data-id={contract.id} onClick={handleEdit}>Edit</Badge>\r\n                    }\r\n                    <Badge variant=\"success\" style={{float: \"right\", cursor: \"pointer\" }}data-id={contract.id} onClick={handleShow}>Show</Badge>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form, Col, Button, Card, Alert } from 'react-bootstrap' \r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from './List'\r\n\r\nexport default function Index() {\r\n    const { idemployee } = useParams()\r\n    const URI_API = `${process.env.REACT_APP_HRIS_URI_API}/division`\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [contracts, setContracts] = useState([])\r\n    const [currentEmployee, setCurrentEmployee] = useState({})\r\n    const { fetchQuery, logout } = useRoot()\r\n    const history = useHistory()\r\n\r\n    function getContracts() {\r\n        setLoading(true)\r\n        setError(\"\")\r\n        const query = {\r\n            query : `query { employeeContracts (id: \"${idemployee}\") { id, employee { id, employeeId, name }, dateFrom, dateUntil, activeFlag } }`\r\n        }\r\n        console.log(query)\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            console.log(data)\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setContracts(data.body.data.employeeContracts)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    function getCurrentEmployee() {\r\n        setError(\"\")\r\n        setLoading(true)\r\n\r\n        const query = {\r\n            query : `query {\r\n                employee (id: \"${idemployee}\") { id, employeeId, name, status }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setCurrentEmployee(data.body.data.employee)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getContracts()\r\n        getCurrentEmployee()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h3>Contract { currentEmployee.name }</h3>\r\n            <div className=\"mt-4\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                {\r\n                    currentEmployee.status !== \"Permanent\" &&\r\n                    <Link to={`/contract/${idemployee}/add`} className=\"btn btn-primary\">Add New Contract</Link>\r\n                }\r\n                <Link to={`/employee/detail/${idemployee}`} className=\"btn btn-danger ml-2\">Back</Link>\r\n                {\r\n                    contracts.length > 0 ?\r\n                    <Card style={{ width: \"30em\"}} className=\"mt-4\">\r\n                        {\r\n                            contracts.map(contract => {\r\n                                return <List key={contract.id} contract={contract} statusEmployee={currentEmployee.status}></List>\r\n                            })\r\n                        }\r\n                    </Card>\r\n                    : \r\n                    <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                        <span>No Data</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form,Col, Button, Alert } from 'react-bootstrap'\r\nimport { useParams, useHistory, Link } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\nexport default function Forms() {\r\n    const { type, id, idemployee } = useParams()\r\n    let URI_API = `${process.env.REACT_APP_HRIS_URI_API}/employee/contract/`\r\n    let method = \"POST\"\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [error, setError] = useState(\"\")    \r\n    const [currentDateFrom, setCurrentDateFrom] = useState(\"\")\r\n    const [currentDateUntil, setCurrentDateUntil] = useState(\"\")\r\n    const nameRef = useRef()\r\n    const fromRef = useRef()\r\n    const untilRef = useRef()\r\n    const history = useHistory()\r\n    const { fetchQuery, logout } = useRoot()\r\n\r\n    useEffect(() => {\r\n        if(type === \"edit\") {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            const query = {\r\n                query : `query {\r\n                    employeeContract (id: \"${id}\") { id, dateFrom, dateUntil }\r\n                }`\r\n            }\r\n    \r\n            fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setCurrentDateFrom(data.body.data.employeeContract.dateFrom)\r\n                    setCurrentDateUntil(data.body.data.employeeContract.dateUntil)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        const query = { \r\n            dateFrom: fromRef.current.value, \r\n            dateUntil: untilRef.current.value,\r\n            createBy: sessionStorage.getItem(\"id\"),\r\n            updateBy: sessionStorage.getItem(\"id\")\r\n        }\r\n        \r\n        URI_API = type === \"edit\" ? `${URI_API}${id}` : `${URI_API}${idemployee}`\r\n        if(type === \"edit\") method = \"PUT\"\r\n\r\n        fetchQuery(URI_API, query, true, method).then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setHasChanged(!hasChanged)\r\n                setError(\"\")\r\n                history.push(`/contract/${idemployee}`)\r\n            }\r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{ type.charAt(0).toUpperCase() + type.slice(1) } Contract</h3>\r\n            { error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <Col md=\"5\">\r\n                    <Form.Row>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Date From</Form.Label>\r\n                                <Form.Control type=\"date\" ref={fromRef} disabled={loading} defaultValue={currentDateFrom} required={true}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Date Until</Form.Label>\r\n                                <Form.Control type=\"date\" ref={untilRef} disabled={loading} defaultValue={currentDateUntil} required={true}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Button type=\"submit\" className=\"mr-2\" disabled={loading}>Submit</Button>\r\n                    { !loading && <Link to={`/contract/${idemployee}`} className=\"btn btn-danger\" disabled={loading}>Cancel</Link>}                    \r\n                </Col>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ListGroup, Badge } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function List(props) {\r\n    const { salary } = props\r\n    const history = useHistory()\r\n\r\n    function handleEdit(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/salary/${salary.employee.id}/edit/${id}`)\r\n    }\r\n\r\n    function handleShow(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/salary/${salary.employee.id}/show/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item><b>{salary.createAt}</b> as {salary.job} - Rp. {salary.amount.toLocaleString()}\r\n                    <Badge variant=\"primary\" className=\"mr-2\" style={{float: \"right\", cursor: \"pointer\" }}data-id={salary.id} onClick={handleEdit}>Edit</Badge>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form, Col, Button, Card, Alert } from 'react-bootstrap' \r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from './List'\r\n\r\nexport default function Index() {\r\n    const { idemployee } = useParams()\r\n    const URI_API = `${process.env.REACT_APP_HRIS_URI_API}/division`\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [salaries, setSalaries] = useState([])\r\n    const [currentEmployee, setCurrentEmployee] = useState({})\r\n    const { fetchQuery, logout } = useRoot()\r\n    const history = useHistory()\r\n\r\n    function getContracts() {\r\n        setLoading(true)\r\n        setError(\"\")\r\n        const query = {\r\n            query : `query { employeeSalaries (id: \"${idemployee}\") { id, employee { id, employeeId, name }, job, division, department, amount, activeFlag, createAt } }`\r\n        }\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setSalaries(data.body.data.employeeSalaries)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    function getCurrentEmployee() {\r\n        setError(\"\")\r\n        setLoading(true)\r\n\r\n        const query = {\r\n            query : `query {\r\n                employee (id: \"${idemployee}\") { id, employeeId, name }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setCurrentEmployee(data.body.data.employee)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getContracts()\r\n        getCurrentEmployee()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h3>Salary { currentEmployee.name }</h3>\r\n            <div className=\"mt-4\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Link to={`/salary/${idemployee}/add`} className=\"btn btn-primary\">Add New Salary</Link>\r\n                <Link to={`/employee/detail/${idemployee}`} className=\"btn btn-danger ml-2\">Back</Link>\r\n                {\r\n                    salaries.length > 0 ?\r\n                    <Card style={{ width: \"30em\"}} className=\"mt-4\">\r\n                        {\r\n                            salaries.map(salary => {\r\n                                return <List key={salary.id} salary={salary}></List>\r\n                            })\r\n                        }\r\n                    </Card>\r\n                    : \r\n                    <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                        <span>No Data</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form,Col, Button, Alert } from 'react-bootstrap'\r\nimport { useParams, useHistory, Link } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\nexport default function Forms() {\r\n    const { type, id, idemployee } = useParams()\r\n    let URI_API = `${process.env.REACT_APP_HRIS_URI_API}/employee/salary/`\r\n    let method = \"POST\"\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [error, setError] = useState(\"\")    \r\n    const [currentAmount, setCurrentAmount] = useState()\r\n    const amountRef = useRef()\r\n    const history = useHistory()\r\n    const { fetchQuery, logout } = useRoot()\r\n\r\n    useEffect(() => {\r\n        if(type === \"edit\") {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            const query = {\r\n                query : `query {\r\n                    employeeSalary (id: \"${id}\") { id, amount }\r\n                }`\r\n            }\r\n    \r\n            fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setCurrentAmount(data.body.data.employeeSalary.amount)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        const query = { \r\n            amount: amountRef.current.value, \r\n            createBy: sessionStorage.getItem(\"id\"),\r\n            updateBy: sessionStorage.getItem(\"id\")\r\n        }\r\n        \r\n        URI_API = type === \"edit\" ? `${URI_API}${id}` : `${URI_API}${idemployee}`\r\n        if(type === \"edit\") method = \"PUT\"\r\n\r\n        fetchQuery(URI_API, query, true, method).then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setHasChanged(!hasChanged)\r\n                setError(\"\")\r\n                history.push(`/salary/${idemployee}`)\r\n            }\r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{ type.charAt(0).toUpperCase() + type.slice(1) } Salary</h3>\r\n            { error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <Col md=\"4\">\r\n                    <Form.Group>\r\n                        <Form.Label>Amount</Form.Label>\r\n                        <Form.Control type=\"number\" min=\"0\" ref={amountRef} disabled={loading} defaultValue={currentAmount} required={true}></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" className=\"mr-2\" disabled={loading}>Submit</Button>\r\n                    { !loading && <Link to={`/salary/${idemployee}`} className=\"btn btn-danger\" disabled={loading}>Cancel</Link>}                    \r\n                </Col>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { ListGroup, Badge } from 'react-bootstrap'\r\nimport { useHistory} from 'react-router-dom'\r\n\r\nexport default function List(props) {    \r\n    const {\r\n        activity,\r\n        handleDelete\r\n    } = props\r\n    const history = useHistory()\r\n\r\n    function handleEdit(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/activity/edit/${id}`)\r\n    }\r\n\r\n    function handleDetail(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/activity/detail/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item><strong className=\"mr-2\">{activity.createAt}</strong> {activity.type} - {activity.name}  <strong className=\"ml-2\">({activity.status})</strong>                \r\n                    <Badge variant=\"danger\" style={{float: \"right\", cursor: \"pointer\" }}data-id={activity.id} onClick={handleDelete}>Delete</Badge>\r\n                    <Badge variant=\"primary\" className=\"mr-2\" style={{float: \"right\", cursor: \"pointer\" }}data-id={activity.id} onClick={handleEdit}>Edit</Badge>\r\n                    <Badge variant=\"secondary\" className=\"mr-2\" style={{float: \"right\", cursor: \"pointer\" }}data-id={activity.id} onClick={handleDetail}>Detail</Badge>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Col, Button, Card, Alert } from 'react-bootstrap' \r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from './List'\r\n\r\n\r\nexport default function Index() {\r\n    const URI_API = `${process.env.REACT_APP_HRIS_URI_API}/activity/`\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [activities, setActivities] = useState([])\r\n    const { fetchQuery, logout } = useRoot()\r\n    const keywordRef = useRef()\r\n    const statusRef = useRef()\r\n    const typeRef = useRef()\r\n    const history = useHistory()\r\n\r\n    function handleSearch(e) {\r\n        e.preventDefault()\r\n        let status = (statusRef.current.value !== \"\") ? `, status: \"${statusRef.current.value}\"`: \"\"\r\n        let type = (typeRef.current.value !== \"\") ? `, type: \"${typeRef.current.value}\"`: \"\"\r\n        let employeeId = sessionStorage.getItem(\"role\") !== \"Sys-Master\" ? `, id: \"${sessionStorage.getItem(\"employeeId\")}\"` : \"\"\r\n        let search = `(keyword: \"${keywordRef.current.value}\"${status}${type}${employeeId})`\r\n\r\n        getActivities(search)\r\n    }\r\n\r\n    function handleDelete(e) {\r\n        e.preventDefault()\r\n        setError(\"\")\r\n        setLoading(true)\r\n        if(window.confirm(\"Are you sure want to delete this activity\")){\r\n            const id = e.target.dataset.id\r\n            fetchQuery(`${URI_API}/${id}`, {}, true, \"DELETE\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setHasChanged(!hasChanged)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)            \r\n        }\r\n        else {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    async function getActivities(search = \"\") {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                employeeActivities ${search} { id, employeeId, employee { id }, name, type, status, notes, createAt }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            console.log(data)\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setActivities(data.body.data.employeeActivities)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(sessionStorage.getItem(\"role\") === \"Sys-Master\") {\r\n            getActivities()\r\n        } else {\r\n            getActivities(`(id: \"${sessionStorage.getItem(\"employeeId\")}\")`)\r\n        }\r\n    }, [hasChanged])\r\n\r\n    return (\r\n        <>\r\n            <h3>Activities</h3>\r\n            <div className=\"mt-4\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Link className=\"btn btn-primary\" to={`/activity/add`}>Add New Activity</Link>\r\n                <Form className=\"mt-4\" onSubmit={handleSearch}>\r\n                    <Form.Row>\r\n                        <Col md=\"4\">\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\" ref={keywordRef} onChange={handleSearch} disabled={loading} placeholder=\"Search by Name\" ></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                            <Form.Group>\r\n                                <Form.Control as=\"select\" ref={statusRef} onChange={handleSearch} >\r\n                                    <option value=\"\">All Status</option>\r\n                                    <option value=\"New\">New</option>\r\n                                    <option value=\"On Progress\">On Progress</option>\r\n                                    <option value=\"Done\">Done</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                            <Form.Group>\r\n                                <Form.Control as=\"select\" ref={typeRef} onChange={handleSearch} >\r\n                                    <option value=\"\">All Type</option>\r\n                                    <option value=\"Permission\">Permission</option>\r\n                                    <option value=\"Sick\">Sick</option>\r\n                                    <option value=\"Paid Leave\">Paid Leave</option>\r\n                                    <option value=\"Business Trip\">Business Trip</option>\r\n                                    <option value=\"Overtime\">Overtime</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" type=\"submit\" disabled={loading}>Search</Button>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                    {                        \r\n                        activities && activities.length > 0 ? \r\n                        <Card style={{ width: '50em' }} className=\"mt-4\">\r\n                            { \r\n                                activities.map(activity => {\r\n                                    return <List key={activity.id} activity={activity} handleDelete={handleDelete} ></List>\r\n                                }) \r\n                            }\r\n                        </Card>\r\n                        : \r\n                        <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                            <span>No Data</span>\r\n                        </div>\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { ListGroup, Badge, Card } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\nexport default function History({ activityId }) {\r\n    const [approvals, setApprovals] = useState([])\r\n    const { fetchQuery, logout } = useRoot()\r\n    const history = useHistory()\r\n\r\n    function getApprovals() {\r\n        const query = {\r\n            query : `query {\r\n                approvals (activityId: \"${activityId}\") {\r\n                  id,\r\n                  userId,\r\n                  level,\r\n                  approvedFlag,\r\n                  approvedDate,\r\n                  notes\r\n                  }\r\n              }`\r\n        } \r\n\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(result) => {\r\n            console.log(result)\r\n            if(result.status !== 200) {\r\n                if(result.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n            } else {\r\n                setApprovals(result.body.data.approvals.filter(approval => approval.approvalDate !== null))\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getApprovals()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {/* <hr /> */}\r\n            <Card style={{ width: '40em' }} className=\"mb-3\">\r\n                <ListGroup variant=\"flush\">\r\n                    {\r\n                        approvals.length > 0 && \r\n                        approvals.map(approval => {\r\n                            return <>\r\n                                {\r\n                                    approval.approvedDate && \r\n                                    <ListGroup.Item><b>Level {approval.level}</b>  {approval.approvedDate} <br /> {approval.notes}\r\n                                        <Badge variant={ approval.approvedFlag ? \"success\" : \"danger\" } style={{float: \"right\" }} data-id={approval.id}>{ approval.approvedFlag ? \"Approved\" : \"Rejected\" }</Badge>\r\n                                    </ListGroup.Item>\r\n                                }\r\n                            </>\r\n                        })\r\n                    }\r\n                </ListGroup>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import { until } from 'async'\r\nimport React, { useState, useRef, useEffect } from 'react'\r\nimport { Form, Button, Col, Row, Alert, Badge } from 'react-bootstrap'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport History from '../Approval/History'\r\n\r\n\r\nexport default function Forms() {\r\n    let URI_API = `${process.env.REACT_APP_HRIS_URI_API}/activity/`\r\n    let method = \"POST\"\r\n    const { type, id } = useParams()\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [files, setFiles] = useState([])\r\n    const [approvalNeeded, setApprovalNeeded] = useState(false)\r\n    const [currentType, setCurrentType] = useState(\"\")\r\n    const [currentAmount, setCurrentAmount] = useState(0)\r\n    const [currentActivity, setCurrentActivity] = useState({})\r\n    const { fetchQuery, logout } = useRoot()\r\n    const history = useHistory()\r\n    const typeRef = useRef()\r\n    const fileRef = useRef()\r\n    const fromRef = useRef()\r\n    const untilRef = useRef()\r\n    const notesRef = useRef()\r\n    const amountRef = useRef()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setError(\"\")\r\n        setLoading(true) \r\n\r\n        let newActivity = {\r\n            type: typeRef.current.value,\r\n            dateFrom: fromRef.current.value,\r\n            dateUntil: untilRef.current.value,\r\n            notes: notesRef.current.value\r\n        }\r\n\r\n        if(files.length > 0) newActivity.file = files[0]\r\n        if(amountRef.current) newActivity.amount = amountRef.current.value\r\n\r\n        URI_API = type !== \"add\" ? `${URI_API}${id}` : `${URI_API}${sessionStorage.getItem(\"employeeId\")}`\r\n        if(type === \"edit\") method = \"PUT\"\r\n\r\n        fetchQuery(URI_API, newActivity, true, method).then(async(result) => {\r\n            if(result.status !== 200) {\r\n                if(result.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(result.body.message)\r\n            } else {\r\n                setError(\"\")\r\n                history.push(\"/activity\")\r\n            }\r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    function handleType(e) {\r\n        setCurrentType(e.target.value)        \r\n        setApprovalNeeded(typeRef.current.value === \"Business Trip\" || typeRef.current.value === \"Overtime\")\r\n    }\r\n\r\n    function handleUpload(e) {\r\n        e.preventDefault()\r\n\r\n        const id = e.target.id\r\n        let fileReader = new FileReader()\r\n        let selectedFile = e.target.files[0]\r\n\r\n        fileReader.onload = () => {\r\n            setFiles([...files, { type: selectedFile.type, id: id, data: fileReader.result }])\r\n        }\r\n\r\n        fileReader.readAsDataURL(selectedFile)\r\n    }\r\n\r\n    function getCurrentActivity(){\r\n        setError(\"\")\r\n        setLoading(true)\r\n\r\n        const query = {\r\n            query : `query {\r\n                employeeActivity (id: \"${id}\") { id, type, name, status, notes, dateFrom, dateUntil\r\n                    reimburse { id, amount, status, file }\r\n                }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                if(data.body.data.employeeActivity.reimburse[0]){\r\n                    setCurrentAmount(data.body.data.employeeActivity.reimburse[0].amount)\r\n                }\r\n                setCurrentType(data.body.data.employeeActivity.type)\r\n                setCurrentActivity(data.body.data.employeeActivity)\r\n                setApprovalNeeded(data.body.data.employeeActivity.type === \"Business Trip\" || data.body.data.employeeActivity.type === \"Overtime\")\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(type === \"detail\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(type !== \"add\") getCurrentActivity()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h3>{ type.charAt(0).toUpperCase() + type.slice(1) } Activity</h3>\r\n            { error && <Alert variant=\"danger\">{error}</Alert>} \r\n            <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <Col md=\"8\">\r\n                    <Form.Row>\r\n                        <Col md=\"4\">\r\n                            <Form.Group>\r\n                                <Form.Label>Type</Form.Label>\r\n                                <Form.Control as=\"select\" ref={typeRef} value={currentType} required={true} onChange={handleType} disabled={loading} >\r\n                                    <option value=\"\" hidden>Select Type</option>\r\n                                    <option value=\"Permission\">Permission</option>\r\n                                    <option value=\"Sick\">Sick</option>\r\n                                    <option value=\"Paid Leave\">Paid Leave</option>\r\n                                    <option value=\"Business Trip\">Business Trip</option>\r\n                                    <option value=\"Overtime\">Overtime</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            {\r\n                                approvalNeeded && \r\n                                <Form.Group>\r\n                                    <Form.Label>Amount (Rp.)</Form.Label>\r\n                                    <Form.Control type=\"number\" min=\"0\" ref={amountRef} required={true} defaultValue={currentAmount} disabled={loading}></Form.Control>\r\n                                </Form.Group>\r\n                            }\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            {\r\n                                approvalNeeded && !loading &&\r\n                                <Form.Group>\r\n                                    <Form.Label>Attachment</Form.Label>\r\n                                    <input type=\"file\" id=\"file-upload\" ref={fileRef} accept={[\".jpg\", \".jpeg\", \".png\"]} onChange={handleUpload} />\r\n                                </Form.Group>\r\n                            }\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Date From</Form.Label>\r\n                                <Form.Control type=\"date\" ref={fromRef} disabled={loading} defaultValue={Object.keys(currentActivity).length > 0 ? currentActivity.dateFrom : \"\"} required={true}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Date Until</Form.Label>\r\n                                <Form.Control type=\"date\" ref={untilRef} disabled={loading} defaultValue={Object.keys(currentActivity).length > 0 ? currentActivity.dateUntil : \"\"} required={true}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Group>\r\n                        <Form.Label>Notes</Form.Label>\r\n                        <Form.Control as=\"textarea\" ref={notesRef} disabled={loading} defaultValue={Object.keys(currentActivity).length > 0 ? currentActivity.notes : \"\"} required={true}></Form.Control>\r\n                    </Form.Group>\r\n                    {\r\n                        type !== \"add\" && Object.keys(currentActivity).length > 0 &&\r\n                        currentActivity.reimburse.length > 0 &&\r\n                        <>\r\n                            <a href={currentActivity.reimburse[0].file && currentActivity.reimburse[0].file !== null ? currentActivity.reimburse[0].file : \"#\" } download={currentActivity.reimburse[0].file && currentActivity.reimburse[0].file !== null ? `Attachment Reimburse ${currentActivity.notes} (${currentActivity.name.replace(\".\", \" \")})` : null }>\r\n                                <i className=\"fa fa-download fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Download Attachment</span>\r\n                            </a>\r\n                            <br />\r\n                            <br />\r\n                        </>\r\n                    }\r\n                    {\r\n                        type === \"detail\" &&\r\n                        <History activityId={id}></History>\r\n                    }\r\n                    { type !== \"detail\" &&\r\n                        <Button type=\"submit\" className=\"mr-2\" disabled={loading}>Submit</Button>\r\n                    }\r\n                    { <Link to=\"/activity\" className=\"btn btn-danger\" disabled={loading}>Cancel</Link>}                    \r\n                </Col>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { ListGroup, Badge } from 'react-bootstrap'\r\nimport { useHistory} from 'react-router-dom'\r\n\r\nexport default function List(props) {    \r\n    const { approval } = props\r\n    const history = useHistory()\r\n\r\n    function handleDetail(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/approval/detail/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item><strong className=\"mr-2\">{approval.activity.createAt}</strong> {approval.activity.type} - {approval.activity.name}\r\n                    <Badge variant=\"secondary\" className=\"mr-2\" style={{float: \"right\", cursor: \"pointer\" }}data-id={approval.id} onClick={handleDetail}>Detail</Badge>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Col, Button, Card, Alert } from 'react-bootstrap' \r\nimport { useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from './List'\r\n\r\n\r\nexport default function Index() {\r\n    const URI_API = `${process.env.REACT_APP_HRIS_URI_API}/approval/`\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [approvals, setApprovals] = useState([])\r\n    const { fetchQuery, logout } = useRoot()\r\n    const keywordRef = useRef()\r\n    const statusRef = useRef()\r\n    const typeRef = useRef()\r\n    const history = useHistory()\r\n\r\n    function handleDelete(e) {\r\n        e.preventDefault()\r\n        setError(\"\")\r\n        setLoading(true)\r\n        if(window.confirm(\"Are you sure want to delete this activity\")){\r\n            const id = e.target.dataset.id\r\n            fetchQuery(`${URI_API}/${id}`, {}, true, \"DELETE\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setHasChanged(!hasChanged)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)            \r\n        }\r\n        else {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    async function getApprovals(search = \"\") {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        const query = {\r\n            query : `query {\r\n                approvals (userId: \"${sessionStorage.getItem(\"id\")}\") {\r\n                    id,    \r\n                    userId,\r\n                    level,\r\n                    approvedFlag,\r\n                    approvedDate,\r\n                    notes,    \r\n                    activity { id, name, dateFrom, dateUntil, createAt, type, notes, reimburse { id } }\r\n                }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            console.log(data)\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setApprovals(data.body.data.approvals)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getApprovals()\r\n    }, [hasChanged])\r\n\r\n    return (\r\n        <>\r\n            <h3>Approval</h3>\r\n            <div className=\"mt-4\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                {                        \r\n                    approvals.length > 0 ? \r\n                    <Card style={{ width: '40em' }} className=\"mt-4\">\r\n                        { \r\n                            approvals.map(approval => {\r\n                                return <List key={approval.id} approval={approval}></List>\r\n                            }) \r\n                        }\r\n                    </Card>\r\n                    : \r\n                    <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                        <span>No Data</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Form, Button, Col, Row, Alert, Badge } from 'react-bootstrap'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\n\r\n\r\nexport default function Forms() {\r\n    const { type, id } = useParams()\r\n    let URI_API = `${process.env.REACT_APP_HRIS_URI_API}/approval/${id}`\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [approvalNeeded, setApprovalNeeded] = useState(false)\r\n    const [currentType, setCurrentType] = useState(\"\")\r\n    const [currentAmount, setCurrentAmount] = useState(0)\r\n    const [currentActivity, setCurrentActivity] = useState({})\r\n    const { fetchQuery, logout } = useRoot()\r\n    const history = useHistory()\r\n    const typeRef = useRef()\r\n    const fromRef = useRef()\r\n    const untilRef = useRef()\r\n    const notesRef = useRef()\r\n    const amountRef = useRef()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        const action = e.nativeEvent.submitter.id\r\n        if(window.confirm(`Are you sure want to ${action} this data?`)){\r\n            setError(\"\")\r\n            setLoading(true) \r\n\r\n            let query = {\r\n                userId: typeRef.current.value,\r\n                approvedFlag: action === \"approve\",\r\n                notes: notesRef.current.value\r\n            }\r\n\r\n            fetchQuery(URI_API, query, true, \"POST\").then(async(result) => {\r\n                console.log(result)\r\n                if(result.status !== 200) {\r\n                    if(result.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(result.body.message)\r\n                } else {\r\n                    setError(\"\")\r\n                    history.push(\"/approval\")\r\n                }\r\n            })\r\n    \r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    function getCurrentActivity(){\r\n        setError(\"\")\r\n        setLoading(true)\r\n\r\n        const query = {\r\n            query : `query {\r\n                approval (id: \"${id}\") {\r\n                    id,\r\n                    activity { id, type, name, status, notes, dateFrom, dateUntil\r\n                        reimburse { id, amount, status, file }\r\n                    }\r\n                }\r\n            }`\r\n        }\r\n\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setCurrentAmount(data.body.data.approval.activity.reimburse[0].amount)\r\n                setCurrentType(data.body.data.approval.activity.type)\r\n                setCurrentActivity(data.body.data.approval.activity)\r\n                setApprovalNeeded(data.body.data.approval.activity.type === \"Business Trip\" || data.body.data.approval.activity.type === \"Overtime\")\r\n                setError(\"\")\r\n            }            \r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCurrentActivity()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h3>Detail Activity</h3>\r\n            { error && <Alert variant=\"danger\">{error}</Alert>} \r\n            <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <Col md=\"8\">\r\n                    <Form.Row>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Type</Form.Label>\r\n                                <Form.Control as=\"select\" ref={typeRef} value={currentType} disabled={true} >\r\n                                    <option value=\"\" hidden>Select Type</option>\r\n                                    <option value=\"Business Trip\">Business Trip</option>\r\n                                    <option value=\"Overtime\">Overtime</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            {\r\n                                approvalNeeded && \r\n                                <Form.Group>\r\n                                    <Form.Label>Amount (Rp.)</Form.Label>\r\n                                    <Form.Control type=\"number\" min=\"0\" ref={amountRef} defaultValue={currentAmount} disabled={true}></Form.Control>\r\n                                </Form.Group>\r\n                            }\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Date From</Form.Label>\r\n                                <Form.Control type=\"date\" ref={fromRef} disabled={true} defaultValue={Object.keys(currentActivity).length > 0 ? currentActivity.dateFrom : \"\"}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Form.Group>\r\n                                <Form.Label>Date Until</Form.Label>\r\n                                <Form.Control type=\"date\" ref={untilRef} disabled={true} defaultValue={Object.keys(currentActivity).length > 0 ? currentActivity.dateUntil : \"\"}></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Group>\r\n                        <Form.Label>Notes Activity</Form.Label>\r\n                        <Form.Control as=\"textarea\" disabled={true} defaultValue={Object.keys(currentActivity).length > 0 ? currentActivity.notes : \"\"}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Notes Approval</Form.Label>\r\n                        <Form.Control as=\"textarea\" ref={notesRef} required={true} disabled={loading}></Form.Control>\r\n                    </Form.Group>\r\n                    {\r\n                        type !== \"add\" && Object.keys(currentActivity).length > 0 &&\r\n                        <>\r\n                            <a href={currentActivity.reimburse[0].file && currentActivity.reimburse[0].file !== null ? currentActivity.reimburse[0].file : \"#\" } download={currentActivity.reimburse[0].file && currentActivity.reimburse[0].file !== null ? `Attachment Reimburse ${currentActivity.notes} (${currentActivity.name.replace(\".\", \" \")})` : null }>\r\n                                <i className=\"fa fa-download fa-fw fa-lg\" aria-hidden=\"true\"></i>&nbsp; <span className=\"text-weight\">Download Attachment</span>\r\n                            </a>\r\n                            <br />\r\n                            <br />\r\n                        </>\r\n                    }\r\n                    <Button type=\"submit\" id=\"approve\" className=\"mr-2\" disabled={loading}>Approve</Button>\r\n                    <Button type=\"submit\" id=\"reject\" variant=\"danger\" className=\"mr-2\" disabled={loading}>Reject</Button>\r\n                    { <Link to=\"/activity\" className=\"btn btn-danger\">Cancel</Link>}                    \r\n                </Col>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ListGroup, Badge } from 'react-bootstrap'\r\nimport { useHistory} from 'react-router-dom'\r\n\r\nexport default function List(props) {\r\n\r\n    const {\r\n        reference,\r\n        user,\r\n        handleDelete\r\n    } = props\r\n    const history = useHistory()\r\n\r\n    function handleEdit(e) {\r\n        const id = e.target.dataset.id\r\n        history.push(`/setupapproval/edit/${id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>{user.name} - {user.username}\r\n                    <Badge variant=\"danger\" className=\"ml-2\" style={{float: \"right\", cursor: \"pointer\"}} data-id={reference.id} onClick={handleDelete}>Delete</Badge>\r\n                    <Badge variant=\"primary\" style={{float: \"right\", cursor: \"pointer\"}} data-id={reference.id} onClick={handleEdit}>Edit</Badge>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Card, Alert } from 'react-bootstrap' \r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from './List'\r\n\r\nexport default function Index() {\r\n    const URI_API = `${process.env.REACT_APP_HRIS_URI_API}/approval/setup`\r\n    const [levels, setLevels] = useState([])\r\n    const [references, setReferences] = useState([])\r\n    const [users, setUsers] = useState([])\r\n    const [error, setError] = useState(\"\")\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const { fetchQuery, logout } = useRoot()\r\n    const history = useHistory()\r\n\r\n    async function getLevels() {\r\n        setError(\"\")\r\n        const query = {\r\n            query : `query { levels }`\r\n        }\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {            \r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setLevels(data.body.data.levels)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n    }\r\n\r\n    function handleDelete(e) {\r\n        e.preventDefault()\r\n        if(window.confirm(\"Are you sure want to delete this data?\")) {\r\n            const id = e.target.dataset.id\r\n            console.log(`${URI_API}/${id}`)\r\n            fetchQuery(`${URI_API}/${id}`, {}, true, \"DELETE\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    window.location.reload()\r\n                    // setHasChanged(!hasChanged)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n        }\r\n    }\r\n\r\n    async function getUsers(search = \"\") {\r\n        setError(\"\")\r\n        const query = {\r\n            query : `query {\r\n                users ${search} { id, username, name, email, role, activeFlag }\r\n            }`\r\n        }\r\n        fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {     \r\n                setUsers(data.body.data.users)\r\n                getReference()\r\n                setError(\"\")\r\n            }            \r\n        })\r\n    }\r\n\r\n    async function getReference(search = \"\") {\r\n        setError(\"\")\r\n        const query = {\r\n            query : `query { approvalReferences ${search} { id, userId, level } }`\r\n        }\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setReferences(data.body.data.approvalReferences)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLevels()\r\n        getUsers()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h3>Setup Approval</h3>\r\n            <div className=\"mt-4\">\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Link to=\"/setupapproval/add\" className=\"btn btn-primary\">Add New Reference</Link>\r\n                {                        \r\n                    levels.length > 0 ? \r\n                        levels.map(level => {\r\n                            return <>\r\n                                <h4 className=\"mt-4\">Level {level}</h4>\r\n                                <Card style={{ width: '50em' }} className=\"mt-2 mb-4\">\r\n                                {\r\n                                    references.filter(ref => ref.level === level).map(reference => {                       \r\n                                        return <List key={reference.id} reference={reference} user={users.filter(x=> x.id === reference.userId)[0] } handleDelete={handleDelete}></List>\r\n                                    }) \r\n                                }\r\n                                </Card>\r\n                            </>\r\n                        })\r\n                    : \r\n                    <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                        <span>No Data</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport { Form,Col, Button, Alert, Modal, Card } from 'react-bootstrap'\r\nimport { useParams, useHistory, Link } from 'react-router-dom'\r\nimport { useRoot } from '../../RootContext'\r\nimport List from '../User/List'\r\n\r\nexport default function Forms() {\r\n    let URI_API = `${process.env.REACT_APP_HRIS_URI_API}/approval/setup`\r\n    let method = \"POST\"\r\n    const { type, id } = useParams()\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasChanged, setHasChanged] = useState(false)\r\n    const [error, setError] = useState(\"\")    \r\n    const [currentUser, setCurrentUser] = useState(\"\")\r\n    const [currentLevel, setCurrentLevel] = useState()\r\n    const [show, setShow] = useState(false);\r\n    const [users, setUsers] = useState([])\r\n    const [levels, setLevels] = useState([])\r\n    const levelRef = useRef()\r\n    const userRef = useRef()\r\n    const keywordRef = useRef()\r\n    const history = useHistory()\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n      const { fetchQuery, logout } = useRoot()\r\n\r\n    function handleSearch(e) {\r\n        e.preventDefault()\r\n        let search = `(search: \"${keywordRef.current.value}\", active: true)`\r\n        getUsers(search)\r\n    }\r\n\r\n    function handleChoose(e) {\r\n        const id = e.target.dataset.id\r\n        handleClose()\r\n        setCurrentUser(id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLevels()\r\n        getUsers()\r\n\r\n        if(type === \"edit\") {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            const query = {\r\n                query : `query {\r\n                    approvalReference (id: \"${id}\") {id, userId, level }  \r\n                }`\r\n            }\r\n    \r\n            fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n                if(data.status !== 200) {\r\n                    if(data.status === 403) {\r\n                        await logout()\r\n                        history.push(\"/login\")\r\n                    } \r\n                    setError(data.body.message)\r\n                } else {\r\n                    setCurrentUser(data.body.data.approvalReference.userId)\r\n                    setCurrentLevel(data.body.data.approvalReference.level)\r\n                    setError(\"\")\r\n                }            \r\n            })\r\n            setLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    async function getLevels() {\r\n        setError(\"\")\r\n        const query = {\r\n            query : `query { levels }`\r\n        }\r\n        fetchQuery(process.env.REACT_APP_HRIS_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {            \r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setLevels(data.body.data.levels)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n    }\r\n\r\n    async function getUsers(search = \"(active: true)\") {\r\n        setError(\"\")\r\n        const query = {\r\n            query : `query {\r\n                users ${search} { id, username, name, email, role, activeFlag }\r\n            }`\r\n        }\r\n        fetchQuery(process.env.REACT_APP_SSO_URI_GRAPHQL, query, true, \"POST\").then(async(data) => {\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {     \r\n                setUsers(data.body.data.users)\r\n                setError(\"\")\r\n            }            \r\n        })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        let query = {\r\n            userId: userRef.current.value,\r\n            level: levelRef.current.value\r\n        }\r\n        \r\n        if(type === \"edit\") {\r\n            query = { level: levelRef.current.value }\r\n            URI_API = `${URI_API}/${id}`\r\n            method = \"PUT\"\r\n        }\r\n        console.log(method)\r\n        fetchQuery(URI_API, query, true, method).then(async(data) => {\r\n            console.log(data)\r\n            if(data.status !== 200) {\r\n                if(data.status === 403) {\r\n                    await logout()\r\n                    history.push(\"/login\")\r\n                } \r\n                setError(data.body.message)\r\n            } else {\r\n                setHasChanged(!hasChanged)\r\n                setError(\"\")\r\n                history.push(\"/setupapproval\")\r\n            }\r\n        })\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{ type.charAt(0).toUpperCase() + type.slice(1) } User</h3>\r\n            { error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <Col md=\"8\">\r\n                    <Form.Row>       \r\n                        <Col md=\"7\">\r\n                            <Form.Group>\r\n                                <Form.Label>User</Form.Label>\r\n                                <Form.Control as=\"select\" ref={userRef} disabled={loading || type === \"edit\"} value={currentUser} onChange={ e => setCurrentUser(e.target.value)}>\r\n                                    <option value=\"\" hidden>Select User</option>\r\n                                    {\r\n                                        users.map(user => {\r\n                                            return <option key={user.id} value={user.id}>{user.name} - {user.username}</option>\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>                \r\n                        </Col>       \r\n                        <Col md=\"1\">\r\n                            <Form.Group>\r\n                                <Form.Label>&nbsp;</Form.Label>\r\n                                <Button className=\"mb-0 fa fa-search form-control\" onClick={handleShow}></Button>\r\n                            </Form.Group>\r\n                        </Col>       \r\n                        <Col md=\"3\">\r\n                            <Form.Group>\r\n                                <Form.Label>Level</Form.Label>\r\n                                <Form.Control as=\"select\" ref={levelRef} disabled={loading} value={currentLevel} onChange={ e => setCurrentLevel(e.target.value)}>\r\n                                    <option value=\"\" hidden>Select Level</option>\r\n                                    {\r\n                                        levels.map((level, index) => {\r\n                                            return <option key={level} value={index+1}>{index+1}</option>\r\n                                        })\r\n                                    }\r\n                                    <option value={levels.length + 1}>{levels.length + 1}</option>                                    \r\n                                </Form.Control>\r\n                            </Form.Group>                \r\n                        </Col>      \r\n                    </Form.Row>\r\n                    <Button type=\"submit\" className=\"mr-2\" disabled={loading}>Submit</Button>\r\n                    { !loading && <Link to=\"/setupapproval\" className=\"btn btn-danger\" disabled={loading}>Cancel</Link>}                    \r\n                </Col>\r\n            </Form>\r\n            <Modal size=\"lg\" show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Search User</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Form className=\"mt-4\" onSubmit={handleSearch}>\r\n                    <Form.Row>\r\n                        <Col md=\"5\">\r\n                            <Form.Group>\r\n                                <Form.Control type=\"text\" ref={keywordRef} onChange={handleSearch} disabled={loading} placeholder=\"Search by Name\"></Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <Form.Group>\r\n                                <Button variant=\"success\" type=\"submit\" disabled={loading}>Search</Button>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                    {                        \r\n                        users.length > 0 ? \r\n                        <Card style={{ width: '40em' }} className=\"mt-4\">\r\n                            { \r\n                                users.map(user => {\r\n                                    return <List key={user.username} user={user} handleChoose={handleChoose}></List>\r\n                                }) \r\n                            }\r\n                        </Card>\r\n                        : \r\n                        <div className=\"mt-4 text-weight text-muted col-md-6 text-center\">\r\n                            <span>No Data</span>\r\n                        </div>\r\n                    }                    \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\nimport { RootProvider } from '../RootContext'\nimport PrivateRoute from './PrivateRoute';\nimport Topbar from './Navigation/TopBar'\nimport SideBar from './Navigation/Navbar'\nimport Home from './Home'\nimport Login from './Login'\nimport Application from './Application/Index'\nimport FormApplication from './Application/Forms'\nimport FormMenu from './Application/Menu'\nimport Role from './Role/Index'\nimport FormRole from './Role/Forms'\nimport FormAccess from './Role/FormAccess'\nimport User from './User/Index'\nimport FormUser from './User/Forms'\nimport Profile from './User/Profile'\nimport Job from './Job/Index'\nimport FormJob from './Job/Forms'\nimport FormJobApplication from './JobApplication/FormApplication'\nimport QnA from './QnA/Index'\nimport FormQnA from './QnA/Forms'\nimport Candidate from './Candidate/Index'\nimport FormCandidate from './Candidate/Forms'\nimport Division from './Division/Index'\nimport FormDivision from './Division/Forms'\nimport Department from './Department/Index'\nimport FormDepartment from './Department/Forms'\nimport Employee from './Employee/Index'\nimport FormEmployee from './Employee/Forms'\nimport Contract from './Contract/Index'\nimport FormContract from './Contract/Forms'\nimport Salary from './Salary/Index'\nimport FormSalary from './Salary/Forms'\nimport Activity from './Activity/Index'\nimport FormActivity from './Activity/Forms'\nimport Approval from './Approval/Index'\nimport FormApproval from './Approval/Forms'\nimport SetupApproval from './SetupApproval/Index'\nimport FormSetupApproval from './SetupApproval/Forms'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <RootProvider>\n          <Switch>\n            {/* Login SSO Route */}\n            <PrivateRoute exact path=\"/\" component={{ topbar: Topbar, sidebar: SideBar, content: Home}}></PrivateRoute>\n            <PrivateRoute exact path=\"/application\" component={{ topbar: Topbar, sidebar: SideBar, content: Application}}></PrivateRoute>\n            <PrivateRoute path=\"/application/:type/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormApplication}}></PrivateRoute>\n            <PrivateRoute path=\"/menu/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormMenu}}></PrivateRoute>\n            <PrivateRoute exact path=\"/role\" component={{ topbar: Topbar, sidebar: SideBar, content: Role}}></PrivateRoute>\n            <PrivateRoute path=\"/role/:type/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormRole}}></PrivateRoute>\n            <PrivateRoute path=\"/access\" component={{ topbar: Topbar, sidebar: SideBar, content: FormAccess}}></PrivateRoute>\n            <PrivateRoute exact path=\"/user\" component={{ topbar: Topbar, sidebar: SideBar, content: User}}></PrivateRoute>\n            <PrivateRoute path=\"/user/:type/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormUser}}></PrivateRoute>\n            <PrivateRoute path=\"/profile\" component={{ topbar: Topbar, sidebar: SideBar, content: Profile}}></PrivateRoute>\n            <Route path=\"/login\" component={Login}></Route>\n            {/* E-Reqruitment Route */}\n            <PrivateRoute exact path=\"/job\" component={{ topbar: Topbar, sidebar: SideBar, content: Job}}></PrivateRoute>\n            <PrivateRoute path=\"/job/:type/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormJob}}></PrivateRoute>\n            <PrivateRoute exact path=\"/qna\" component={{ topbar: Topbar, sidebar: SideBar, content: Job}}></PrivateRoute>\n            <PrivateRoute path=\"/qna/list/:idjob\" component={{ topbar: Topbar, sidebar: SideBar, content: QnA}}></PrivateRoute>\n            <PrivateRoute path=\"/qna/:idjob/:type/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormQnA}}></PrivateRoute>\n            <PrivateRoute exact path=\"/candidate\" component={{ topbar: Topbar, sidebar: SideBar, content: Candidate}}></PrivateRoute>\n            <PrivateRoute path=\"/candidate/:type/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormCandidate}}></PrivateRoute>\n            <PrivateRoute exact path=\"/applications\" component={{ topbar: Topbar, sidebar: SideBar, content: Job}}></PrivateRoute>\n            <PrivateRoute path=\"/applications/list/:idjob\" component={{ topbar: Topbar, sidebar: SideBar, content: FormJobApplication}}></PrivateRoute>\n            {/* HRIS Route  */}\n            <PrivateRoute exact path=\"/division\" component={{ topbar: Topbar, sidebar: SideBar, content: Division}}></PrivateRoute>\n            <PrivateRoute path=\"/division/:type/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormDivision}}></PrivateRoute>\n            <PrivateRoute exact path=\"/department\" component={{ topbar: Topbar, sidebar: SideBar, content: Department}}></PrivateRoute>\n            <PrivateRoute path=\"/department/:type/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormDepartment}}></PrivateRoute>\n            <PrivateRoute exact path=\"/employee\" component={{ topbar: Topbar, sidebar: SideBar, content: Employee}}></PrivateRoute>\n            <PrivateRoute path=\"/employee/:type/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormEmployee}}></PrivateRoute>\n            <PrivateRoute exact path=\"/contract/:idemployee\" component={{ topbar: Topbar, sidebar: SideBar, content: Contract}}></PrivateRoute>\n            <PrivateRoute path=\"/contract/:idemployee/:type/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormContract}}></PrivateRoute>\n            <PrivateRoute exact path=\"/salary/:idemployee\" component={{ topbar: Topbar, sidebar: SideBar, content: Salary}}></PrivateRoute>\n            <PrivateRoute path=\"/salary/:idemployee/:type/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormSalary}}></PrivateRoute>\n            <PrivateRoute exact path=\"/activity\" component={{ topbar: Topbar, sidebar: SideBar, content: Activity}}></PrivateRoute>\n            <PrivateRoute path=\"/activity/:type/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormActivity}}></PrivateRoute>\n            <PrivateRoute exact path=\"/approval\" component={{ topbar: Topbar, sidebar: SideBar, content: Approval}}></PrivateRoute>\n            <PrivateRoute path=\"/approval/detail/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormApproval}}></PrivateRoute>\n            <PrivateRoute exact path=\"/setupapproval\" component={{ topbar: Topbar, sidebar: SideBar, content: SetupApproval}}></PrivateRoute>\n            <PrivateRoute path=\"/setupapproval/:type/:id?\" component={{ topbar: Topbar, sidebar: SideBar, content: FormSetupApproval}}></PrivateRoute>\n          </Switch>\n        </RootProvider>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}